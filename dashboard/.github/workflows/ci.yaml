name: CI
on:
  - push
  - pull_request
jobs:
  quality-checks:
    name: Testit Runit Buildit
    runs-on: ubuntu-24.04
    environment: dev
    steps:
      - uses: actions/checkout@v4
        #with:
        #  fetch-tags: true
        #  fetch-depth: 1
      - uses: actions/setup-node@v4
        with:
          node-version: 20

      - uses: pnpm/action-setup@v4
        name: Install pnpm
        with:
          run_install: false
          version: 10
          cache: "pnpm"

      - name: install
        run: pnpm install

      - name: format-check
        run: pnpm run format --check

      - name: lint
        run: pnpm run lint

      - name: build
        run: pnpm run build

      - name: test
        run: |
          pnpm run drizzle:libsql
          pnpm run test

      - name: deploy to preview
        if: github.ref != 'refs/heads/main'
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          CLOUDFLARE_DATABASE_ID: ${{ secrets.CLOUDFLARE_DATABASE_ID }}
        run: |
          pnpm run build 
          pnpm run drizzle:d1-remote
          pnpm run deploy:cf

      # - name: deploy to production
      #   if: github.ref == 'refs/heads/main'
      #   env:
      #     CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
      #     CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
      #     CLOUDFLARE_DATABASE_ID: ${{ secrets.CLOUDFLARE_DATABASE_ID }}
      #   run: |
      #     pnpm run build 
      #     pnpm run drizzle:d1-remote
      #     pnpm run deploy:cf --env production
