{
  "name": "@fireproof/core-runtime",
  "version": "0.0.0",
  "description": "Live ledger for the web.",
  "type": "module",
  "module": "./index.js",
  "main": "./index.cjs",
  "types": "./index.d.ts",
  "exports": {
    ".": {
      "import": "./index.js",
      "browser": "./index.js",
      "require": "./index.cjs",
      "types": "./index.d.ts"
    },
    "./async-multiformats": {
      "import": "./async-multiformats/block.js",
      "browser": "./async-multiformats/block.js",
      "require": "./async-multiformats/block.cjs",
      "types": "./async-multiformats/block.d.ts"
    }
  },
  "scripts": {
    "build": "rm -rf ./dist/tsc ; tsc"
  },
  "keywords": [
    "ledger",
    "JSON",
    "document",
    "IPLD",
    "CID",
    "IPFS"
  ],
  "contributors": [
    "J Chris Anderson",
    "Alan Shaw",
    "Travis Vachon",
    "Mikeal Rogers",
    "Meno Abels"
  ],
  "author": "J Chris Anderson",
  "license": "Apache-2.0 OR MIT",
  "homepage": "https://use-fireproof.com",
  "gptdoc": "import { fireproof } from 'use-fireproof'; const db = fireproof('app-db-name'); const ok = await db.put({ anyField: ['any','json'] }); const doc = await db.get(ok.id); await db.del(doc._id); db.subscribe(myRedrawFn); const result = await db.query('anyField', {range : ['a', 'z']}); result.rows.map(({ key }) => key);",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/fireproof-storage/fireproof.git"
  },
  "bugs": {
    "url": "https://github.com/fireproof-storage/fireproof/issues"
  },
  "dependencies": {
    "@adviser/cement": "from-package-json",
    "@fireproof/core-types": "workspace:0.0.0",
    "@fireproof/core-gateways-indexeddb": "workspace:0.0.0",
    "multiformats": "^13.3.7"
  }
}
