{
  "name": "use-fireproof",
  "version": "must-set",
  "description": "Fireproof live ledger, JavaScript API and React hooks",
  "type": "module",
  "module": "./index.js",
  "main": "./index.cjs",
  "browser": "./index.global.js",
  "types": "./index.d.ts",
  "homepage": "https://use-fireproof.com",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/fireproof-storage/fireproof.git"
  },
  "bugs": {
    "url": "https://github.com/fireproof-storage/fireproof/issues"
  },
  "exports": {
    ".": {
      "import": "./index.js",
      "require": "./index.cjs",
      "script": "./index.global.js",
      "types": "./index.d.ts"
    }
  },
  "scripts": {},
  "author": "J Chris Anderson",
  "license": "Apache-2.0 OR MIT",
  "gptdoc": "Fireproof/React/Usage: import { useLiveQuery, useDocument } from 'use-fireproof'; function App() { const result = useLiveQuery(doc => doc.word, { limit: 10 }); const [{ count }, setDoc, saveDoc] = useDocument({_id: 'count', count: 0}); return (<><p>{count} changes</p><input type='text' onChange={() => saveDoc({count: count + 1})} onSubmit={e => useLiveQuery.ledger.put({word: e.target.value})} /><ul>{result.map(row => (<li key={row.id}>{row.key}</li>))}</ul></>)}",
  "dependencies": {
    "react": "from-package-json",
    "@fireproof/core": "from-package-json"
  },
  "peerDependencies": {
    "react": "from-package-json",
    "@fireproof/core": "from-package-json"
  },
  "devDependencies": {},
  "keywords": ["react", "ledger", "json", "live", "sync"]
}
