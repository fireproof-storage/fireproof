diff --git a/api.js b/api.js
index 44ccfaa28b23166c174db6aa8f82c204d5983518..dfb9abbbaa3e71f3140829d370417c101fd07ca3 100644
--- a/api.js
+++ b/api.js
@@ -3124,11 +3124,11 @@ var require_hanji = __commonJS({
     "use strict";
     var __awaiter = exports2 && exports2.__awaiter || function(thisArg, _arguments, P, generator) {
       function adopt(value) {
-        return value instanceof P ? value : new P(function(resolve) {
-          resolve(value);
+        return value instanceof P ? value : new P(function(resolve2) {
+          resolve2(value);
         });
       }
-      return new (P || (P = Promise))(function(resolve, reject) {
+      return new (P || (P = Promise))(function(resolve2, reject) {
         function fulfilled(value) {
           try {
             step(generator.next(value));
@@ -3144,7 +3144,7 @@ var require_hanji = __commonJS({
           }
         }
         function step(result) {
-          result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
+          result.done ? resolve2(result.value) : adopt(result.value).then(fulfilled, rejected);
         }
         step((generator = generator.apply(thisArg, _arguments || [])).next());
       });
@@ -3218,14 +3218,14 @@ var require_hanji = __commonJS({
     };
     exports2.SelectState = SelectState3;
     var deferred = () => {
-      let resolve;
+      let resolve2;
       let reject;
       const promise = new Promise((res, rej) => {
-        resolve = res;
+        resolve2 = res;
         reject = rej;
       });
       return {
-        resolve,
+        resolve: resolve2,
         reject,
         promise
       };
@@ -3275,8 +3275,8 @@ var require_hanji = __commonJS({
         };
         this.stdin.on("keypress", keypress);
         this.view.attach(this);
-        const { resolve, promise } = (0, exports2.deferred)();
-        this.resolve = resolve;
+        const { resolve: resolve2, promise } = (0, exports2.deferred)();
+        this.resolve = resolve2;
         this.promise = promise;
         this.renderFunc = (0, lodash_throttle_1.default)((str) => {
           this.stdout.write(str);
@@ -3469,17 +3469,17 @@ function processCreateParams(params) {
   if (errorMap2)
     return { errorMap: errorMap2, description };
   const customMap = (iss, ctx) => {
-    var _a415, _b305;
+    var _a431, _b321;
     const { message } = params;
     if (iss.code === "invalid_enum_value") {
       return { message: message !== null && message !== void 0 ? message : ctx.defaultError };
     }
     if (typeof ctx.data === "undefined") {
-      return { message: (_a415 = message !== null && message !== void 0 ? message : required_error) !== null && _a415 !== void 0 ? _a415 : ctx.defaultError };
+      return { message: (_a431 = message !== null && message !== void 0 ? message : required_error) !== null && _a431 !== void 0 ? _a431 : ctx.defaultError };
     }
     if (iss.code !== "invalid_type")
       return { message: ctx.defaultError };
-    return { message: (_b305 = message !== null && message !== void 0 ? message : invalid_type_error) !== null && _b305 !== void 0 ? _b305 : ctx.defaultError };
+    return { message: (_b321 = message !== null && message !== void 0 ? message : invalid_type_error) !== null && _b321 !== void 0 ? _b321 : ctx.defaultError };
   };
   return { errorMap: customMap, description };
 }
@@ -4141,11 +4141,11 @@ var init_lib = __esm({
         throw result.error;
       }
       safeParse(data, params) {
-        var _a415;
+        var _a431;
         const ctx = {
           common: {
             issues: [],
-            async: (_a415 = params === null || params === void 0 ? void 0 : params.async) !== null && _a415 !== void 0 ? _a415 : false,
+            async: (_a431 = params === null || params === void 0 ? void 0 : params.async) !== null && _a431 !== void 0 ? _a431 : false,
             contextualErrorMap: params === null || params === void 0 ? void 0 : params.errorMap
           },
           path: (params === null || params === void 0 ? void 0 : params.path) || [],
@@ -4467,7 +4467,7 @@ var init_lib = __esm({
           } else if (check.kind === "url") {
             try {
               new URL(input.data);
-            } catch (_a415) {
+            } catch (_a431) {
               ctx = this._getOrReturnCtx(input, ctx);
               addIssueToContext(ctx, {
                 validation: "url",
@@ -4637,7 +4637,7 @@ var init_lib = __esm({
         return this._addCheck({ kind: "ip", ...errorUtil.errToObj(options) });
       }
       datetime(options) {
-        var _a415, _b305;
+        var _a431, _b321;
         if (typeof options === "string") {
           return this._addCheck({
             kind: "datetime",
@@ -4650,8 +4650,8 @@ var init_lib = __esm({
         return this._addCheck({
           kind: "datetime",
           precision: typeof (options === null || options === void 0 ? void 0 : options.precision) === "undefined" ? null : options === null || options === void 0 ? void 0 : options.precision,
-          offset: (_a415 = options === null || options === void 0 ? void 0 : options.offset) !== null && _a415 !== void 0 ? _a415 : false,
-          local: (_b305 = options === null || options === void 0 ? void 0 : options.local) !== null && _b305 !== void 0 ? _b305 : false,
+          offset: (_a431 = options === null || options === void 0 ? void 0 : options.offset) !== null && _a431 !== void 0 ? _a431 : false,
+          local: (_b321 = options === null || options === void 0 ? void 0 : options.local) !== null && _b321 !== void 0 ? _b321 : false,
           ...errorUtil.errToObj(options === null || options === void 0 ? void 0 : options.message)
         });
       }
@@ -4814,11 +4814,11 @@ var init_lib = __esm({
       }
     };
     ZodString.create = (params) => {
-      var _a415;
+      var _a431;
       return new ZodString({
         checks: [],
         typeName: ZodFirstPartyTypeKind.ZodString,
-        coerce: (_a415 = params === null || params === void 0 ? void 0 : params.coerce) !== null && _a415 !== void 0 ? _a415 : false,
+        coerce: (_a431 = params === null || params === void 0 ? void 0 : params.coerce) !== null && _a431 !== void 0 ? _a431 : false,
         ...processCreateParams(params)
       });
     };
@@ -5211,11 +5211,11 @@ var init_lib = __esm({
       }
     };
     ZodBigInt.create = (params) => {
-      var _a415;
+      var _a431;
       return new ZodBigInt({
         checks: [],
         typeName: ZodFirstPartyTypeKind.ZodBigInt,
-        coerce: (_a415 = params === null || params === void 0 ? void 0 : params.coerce) !== null && _a415 !== void 0 ? _a415 : false,
+        coerce: (_a431 = params === null || params === void 0 ? void 0 : params.coerce) !== null && _a431 !== void 0 ? _a431 : false,
         ...processCreateParams(params)
       });
     };
@@ -5695,8 +5695,8 @@ var init_lib = __esm({
           unknownKeys: "strict",
           ...message !== void 0 ? {
             errorMap: (issue, ctx) => {
-              var _a415, _b305, _c14, _d6;
-              const defaultError = (_c14 = (_b305 = (_a415 = this._def).errorMap) === null || _b305 === void 0 ? void 0 : _b305.call(_a415, issue, ctx).message) !== null && _c14 !== void 0 ? _c14 : ctx.defaultError;
+              var _a431, _b321, _c14, _d6;
+              const defaultError = (_c14 = (_b321 = (_a431 = this._def).errorMap) === null || _b321 === void 0 ? void 0 : _b321.call(_a431, issue, ctx).message) !== null && _c14 !== void 0 ? _c14 : ctx.defaultError;
               if (issue.code === "unrecognized_keys")
                 return {
                   message: (_d6 = errorUtil.errToObj(message).message) !== null && _d6 !== void 0 ? _d6 : defaultError
@@ -22381,7 +22381,7 @@ var version;
 var init_version = __esm({
   "../drizzle-orm/dist/version.js"() {
     "use strict";
-    version = "0.40.0";
+    version = "0.41.0";
   }
 });
 
@@ -22841,7 +22841,7 @@ var init_sql = __esm({
         return new SQL([new StringChunk(str)]);
       }
       sql2.raw = raw;
-      function join(chunks, separator) {
+      function join2(chunks, separator) {
         const result = [];
         for (const [i, chunk] of chunks.entries()) {
           if (i > 0 && separator !== void 0) {
@@ -22851,7 +22851,7 @@ var init_sql = __esm({
         }
         return new SQL(result);
       }
-      sql2.join = join;
+      sql2.join = join2;
       function identifier(value) {
         return new Name(value);
       }
@@ -22866,8 +22866,8 @@ var init_sql = __esm({
       sql2.param = param2;
     })(sql || (sql = {}));
     ((SQL2) => {
-      var _a415;
-      _a415 = entityKind;
+      var _a431;
+      _a431 = entityKind;
       const _Aliased = class _Aliased {
         constructor(sql2, fieldAlias) {
           /** @internal */
@@ -22883,7 +22883,7 @@ var init_sql = __esm({
           return new _Aliased(this.sql, this.fieldAlias);
         }
       };
-      __publicField(_Aliased, _a415, "SQL.Aliased");
+      __publicField(_Aliased, _a431, "SQL.Aliased");
       let Aliased = _Aliased;
       SQL2.Aliased = Aliased;
     })(SQL || (SQL = {}));
@@ -23464,13 +23464,13 @@ function isConfig(data) {
     return true;
   }
   if ("schema" in data) {
-    const type = typeof data["logger"];
+    const type = typeof data["schema"];
     if (type !== "object" && type !== "undefined")
       return false;
     return true;
   }
   if ("casing" in data) {
-    const type = typeof data["logger"];
+    const type = typeof data["casing"];
     if (type !== "string" && type !== "undefined")
       return false;
     return true;
@@ -24280,9 +24280,10 @@ var init_macaddr8 = __esm({
 // ../drizzle-orm/dist/pg-core/columns/numeric.js
 function numeric(a, b) {
   const { name: name2, config } = getColumnNameAndConfig(a, b);
-  return new PgNumericBuilder(name2, config?.precision, config?.scale);
+  const mode = config?.mode;
+  return mode === "number" ? new PgNumericNumberBuilder(name2, config?.precision, config?.scale) : mode === "bigint" ? new PgNumericBigIntBuilder(name2, config?.precision, config?.scale) : new PgNumericBuilder(name2, config?.precision, config?.scale);
 }
-var _a77, _b56, PgNumericBuilder, _a78, _b57, PgNumeric;
+var _a77, _b56, PgNumericBuilder, _a78, _b57, PgNumeric, _a79, _b58, PgNumericNumberBuilder, _a80, _b59, PgNumericNumber, _a81, _b60, PgNumericBigIntBuilder, _a82, _b61, PgNumericBigInt;
 var init_numeric = __esm({
   "../drizzle-orm/dist/pg-core/columns/numeric.js"() {
     "use strict";
@@ -24309,6 +24310,11 @@ var init_numeric = __esm({
         this.precision = config.precision;
         this.scale = config.scale;
       }
+      mapFromDriverValue(value) {
+        if (typeof value === "string")
+          return value;
+        return String(value);
+      }
       getSQLType() {
         if (this.precision !== void 0 && this.scale !== void 0) {
           return `numeric(${this.precision}, ${this.scale})`;
@@ -24320,6 +24326,82 @@ var init_numeric = __esm({
       }
     };
     __publicField(PgNumeric, _a78, "PgNumeric");
+    PgNumericNumberBuilder = class extends (_b58 = PgColumnBuilder, _a79 = entityKind, _b58) {
+      constructor(name2, precision, scale) {
+        super(name2, "number", "PgNumericNumber");
+        this.config.precision = precision;
+        this.config.scale = scale;
+      }
+      /** @internal */
+      build(table6) {
+        return new PgNumericNumber(
+          table6,
+          this.config
+        );
+      }
+    };
+    __publicField(PgNumericNumberBuilder, _a79, "PgNumericNumberBuilder");
+    PgNumericNumber = class extends (_b59 = PgColumn, _a80 = entityKind, _b59) {
+      constructor(table6, config) {
+        super(table6, config);
+        __publicField(this, "precision");
+        __publicField(this, "scale");
+        __publicField(this, "mapToDriverValue", String);
+        this.precision = config.precision;
+        this.scale = config.scale;
+      }
+      mapFromDriverValue(value) {
+        if (typeof value === "number")
+          return value;
+        return Number(value);
+      }
+      getSQLType() {
+        if (this.precision !== void 0 && this.scale !== void 0) {
+          return `numeric(${this.precision}, ${this.scale})`;
+        } else if (this.precision === void 0) {
+          return "numeric";
+        } else {
+          return `numeric(${this.precision})`;
+        }
+      }
+    };
+    __publicField(PgNumericNumber, _a80, "PgNumericNumber");
+    PgNumericBigIntBuilder = class extends (_b60 = PgColumnBuilder, _a81 = entityKind, _b60) {
+      constructor(name2, precision, scale) {
+        super(name2, "bigint", "PgNumericBigInt");
+        this.config.precision = precision;
+        this.config.scale = scale;
+      }
+      /** @internal */
+      build(table6) {
+        return new PgNumericBigInt(
+          table6,
+          this.config
+        );
+      }
+    };
+    __publicField(PgNumericBigIntBuilder, _a81, "PgNumericBigIntBuilder");
+    PgNumericBigInt = class extends (_b61 = PgColumn, _a82 = entityKind, _b61) {
+      constructor(table6, config) {
+        super(table6, config);
+        __publicField(this, "precision");
+        __publicField(this, "scale");
+        __publicField(this, "mapFromDriverValue", BigInt);
+        __publicField(this, "mapToDriverValue", String);
+        this.precision = config.precision;
+        this.scale = config.scale;
+      }
+      getSQLType() {
+        if (this.precision !== void 0 && this.scale !== void 0) {
+          return `numeric(${this.precision}, ${this.scale})`;
+        } else if (this.precision === void 0) {
+          return "numeric";
+        } else {
+          return `numeric(${this.precision})`;
+        }
+      }
+    };
+    __publicField(PgNumericBigInt, _a82, "PgNumericBigInt");
   }
 });
 
@@ -24331,14 +24413,14 @@ function point(a, b) {
   }
   return new PgPointObjectBuilder(name2);
 }
-var _a79, _b58, PgPointTupleBuilder, _a80, _b59, PgPointTuple, _a81, _b60, PgPointObjectBuilder, _a82, _b61, PgPointObject;
+var _a83, _b62, PgPointTupleBuilder, _a84, _b63, PgPointTuple, _a85, _b64, PgPointObjectBuilder, _a86, _b65, PgPointObject;
 var init_point = __esm({
   "../drizzle-orm/dist/pg-core/columns/point.js"() {
     "use strict";
     init_entity();
     init_utils2();
     init_common2();
-    PgPointTupleBuilder = class extends (_b58 = PgColumnBuilder, _a79 = entityKind, _b58) {
+    PgPointTupleBuilder = class extends (_b62 = PgColumnBuilder, _a83 = entityKind, _b62) {
       constructor(name2) {
         super(name2, "array", "PgPointTuple");
       }
@@ -24350,8 +24432,8 @@ var init_point = __esm({
         );
       }
     };
-    __publicField(PgPointTupleBuilder, _a79, "PgPointTupleBuilder");
-    PgPointTuple = class extends (_b59 = PgColumn, _a80 = entityKind, _b59) {
+    __publicField(PgPointTupleBuilder, _a83, "PgPointTupleBuilder");
+    PgPointTuple = class extends (_b63 = PgColumn, _a84 = entityKind, _b63) {
       getSQLType() {
         return "point";
       }
@@ -24366,8 +24448,8 @@ var init_point = __esm({
         return `(${value[0]},${value[1]})`;
       }
     };
-    __publicField(PgPointTuple, _a80, "PgPointTuple");
-    PgPointObjectBuilder = class extends (_b60 = PgColumnBuilder, _a81 = entityKind, _b60) {
+    __publicField(PgPointTuple, _a84, "PgPointTuple");
+    PgPointObjectBuilder = class extends (_b64 = PgColumnBuilder, _a85 = entityKind, _b64) {
       constructor(name2) {
         super(name2, "json", "PgPointObject");
       }
@@ -24379,8 +24461,8 @@ var init_point = __esm({
         );
       }
     };
-    __publicField(PgPointObjectBuilder, _a81, "PgPointObjectBuilder");
-    PgPointObject = class extends (_b61 = PgColumn, _a82 = entityKind, _b61) {
+    __publicField(PgPointObjectBuilder, _a85, "PgPointObjectBuilder");
+    PgPointObject = class extends (_b65 = PgColumn, _a86 = entityKind, _b65) {
       getSQLType() {
         return "point";
       }
@@ -24395,7 +24477,7 @@ var init_point = __esm({
         return `(${value.x},${value.y})`;
       }
     };
-    __publicField(PgPointObject, _a82, "PgPointObject");
+    __publicField(PgPointObject, _a86, "PgPointObject");
   }
 });
 
@@ -24451,7 +24533,7 @@ function geometry(a, b) {
   }
   return new PgGeometryObjectBuilder(name2);
 }
-var _a83, _b62, PgGeometryBuilder, _a84, _b63, PgGeometry, _a85, _b64, PgGeometryObjectBuilder, _a86, _b65, PgGeometryObject;
+var _a87, _b66, PgGeometryBuilder, _a88, _b67, PgGeometry, _a89, _b68, PgGeometryObjectBuilder, _a90, _b69, PgGeometryObject;
 var init_geometry = __esm({
   "../drizzle-orm/dist/pg-core/columns/postgis_extension/geometry.js"() {
     "use strict";
@@ -24459,7 +24541,7 @@ var init_geometry = __esm({
     init_utils2();
     init_common2();
     init_utils3();
-    PgGeometryBuilder = class extends (_b62 = PgColumnBuilder, _a83 = entityKind, _b62) {
+    PgGeometryBuilder = class extends (_b66 = PgColumnBuilder, _a87 = entityKind, _b66) {
       constructor(name2) {
         super(name2, "array", "PgGeometry");
       }
@@ -24471,8 +24553,8 @@ var init_geometry = __esm({
         );
       }
     };
-    __publicField(PgGeometryBuilder, _a83, "PgGeometryBuilder");
-    PgGeometry = class extends (_b63 = PgColumn, _a84 = entityKind, _b63) {
+    __publicField(PgGeometryBuilder, _a87, "PgGeometryBuilder");
+    PgGeometry = class extends (_b67 = PgColumn, _a88 = entityKind, _b67) {
       getSQLType() {
         return "geometry(point)";
       }
@@ -24483,8 +24565,8 @@ var init_geometry = __esm({
         return `point(${value[0]} ${value[1]})`;
       }
     };
-    __publicField(PgGeometry, _a84, "PgGeometry");
-    PgGeometryObjectBuilder = class extends (_b64 = PgColumnBuilder, _a85 = entityKind, _b64) {
+    __publicField(PgGeometry, _a88, "PgGeometry");
+    PgGeometryObjectBuilder = class extends (_b68 = PgColumnBuilder, _a89 = entityKind, _b68) {
       constructor(name2) {
         super(name2, "json", "PgGeometryObject");
       }
@@ -24496,8 +24578,8 @@ var init_geometry = __esm({
         );
       }
     };
-    __publicField(PgGeometryObjectBuilder, _a85, "PgGeometryObjectBuilder");
-    PgGeometryObject = class extends (_b65 = PgColumn, _a86 = entityKind, _b65) {
+    __publicField(PgGeometryObjectBuilder, _a89, "PgGeometryObjectBuilder");
+    PgGeometryObject = class extends (_b69 = PgColumn, _a90 = entityKind, _b69) {
       getSQLType() {
         return "geometry(point)";
       }
@@ -24509,7 +24591,7 @@ var init_geometry = __esm({
         return `point(${value.x} ${value.y})`;
       }
     };
-    __publicField(PgGeometryObject, _a86, "PgGeometryObject");
+    __publicField(PgGeometryObject, _a90, "PgGeometryObject");
   }
 });
 
@@ -24517,13 +24599,13 @@ var init_geometry = __esm({
 function real(name2) {
   return new PgRealBuilder(name2 ?? "");
 }
-var _a87, _b66, PgRealBuilder, _a88, _b67, PgReal;
+var _a91, _b70, PgRealBuilder, _a92, _b71, PgReal;
 var init_real = __esm({
   "../drizzle-orm/dist/pg-core/columns/real.js"() {
     "use strict";
     init_entity();
     init_common2();
-    PgRealBuilder = class extends (_b66 = PgColumnBuilder, _a87 = entityKind, _b66) {
+    PgRealBuilder = class extends (_b70 = PgColumnBuilder, _a91 = entityKind, _b70) {
       constructor(name2, length) {
         super(name2, "number", "PgReal");
         this.config.length = length;
@@ -24533,8 +24615,8 @@ var init_real = __esm({
         return new PgReal(table6, this.config);
       }
     };
-    __publicField(PgRealBuilder, _a87, "PgRealBuilder");
-    PgReal = class extends (_b67 = PgColumn, _a88 = entityKind, _b67) {
+    __publicField(PgRealBuilder, _a91, "PgRealBuilder");
+    PgReal = class extends (_b71 = PgColumn, _a92 = entityKind, _b71) {
       constructor(table6, config) {
         super(table6, config);
         __publicField(this, "mapFromDriverValue", (value) => {
@@ -24548,7 +24630,7 @@ var init_real = __esm({
         return "real";
       }
     };
-    __publicField(PgReal, _a88, "PgReal");
+    __publicField(PgReal, _a92, "PgReal");
   }
 });
 
@@ -24556,13 +24638,13 @@ var init_real = __esm({
 function serial(name2) {
   return new PgSerialBuilder(name2 ?? "");
 }
-var _a89, _b68, PgSerialBuilder, _a90, _b69, PgSerial;
+var _a93, _b72, PgSerialBuilder, _a94, _b73, PgSerial;
 var init_serial = __esm({
   "../drizzle-orm/dist/pg-core/columns/serial.js"() {
     "use strict";
     init_entity();
     init_common2();
-    PgSerialBuilder = class extends (_b68 = PgColumnBuilder, _a89 = entityKind, _b68) {
+    PgSerialBuilder = class extends (_b72 = PgColumnBuilder, _a93 = entityKind, _b72) {
       constructor(name2) {
         super(name2, "number", "PgSerial");
         this.config.hasDefault = true;
@@ -24573,13 +24655,13 @@ var init_serial = __esm({
         return new PgSerial(table6, this.config);
       }
     };
-    __publicField(PgSerialBuilder, _a89, "PgSerialBuilder");
-    PgSerial = class extends (_b69 = PgColumn, _a90 = entityKind, _b69) {
+    __publicField(PgSerialBuilder, _a93, "PgSerialBuilder");
+    PgSerial = class extends (_b73 = PgColumn, _a94 = entityKind, _b73) {
       getSQLType() {
         return "serial";
       }
     };
-    __publicField(PgSerial, _a90, "PgSerial");
+    __publicField(PgSerial, _a94, "PgSerial");
   }
 });
 
@@ -24587,14 +24669,14 @@ var init_serial = __esm({
 function smallint(name2) {
   return new PgSmallIntBuilder(name2 ?? "");
 }
-var _a91, _b70, PgSmallIntBuilder, _a92, _b71, PgSmallInt;
+var _a95, _b74, PgSmallIntBuilder, _a96, _b75, PgSmallInt;
 var init_smallint = __esm({
   "../drizzle-orm/dist/pg-core/columns/smallint.js"() {
     "use strict";
     init_entity();
     init_common2();
     init_int_common();
-    PgSmallIntBuilder = class extends (_b70 = PgIntColumnBaseBuilder, _a91 = entityKind, _b70) {
+    PgSmallIntBuilder = class extends (_b74 = PgIntColumnBaseBuilder, _a95 = entityKind, _b74) {
       constructor(name2) {
         super(name2, "number", "PgSmallInt");
       }
@@ -24603,8 +24685,8 @@ var init_smallint = __esm({
         return new PgSmallInt(table6, this.config);
       }
     };
-    __publicField(PgSmallIntBuilder, _a91, "PgSmallIntBuilder");
-    PgSmallInt = class extends (_b71 = PgColumn, _a92 = entityKind, _b71) {
+    __publicField(PgSmallIntBuilder, _a95, "PgSmallIntBuilder");
+    PgSmallInt = class extends (_b75 = PgColumn, _a96 = entityKind, _b75) {
       constructor() {
         super(...arguments);
         __publicField(this, "mapFromDriverValue", (value) => {
@@ -24618,7 +24700,7 @@ var init_smallint = __esm({
         return "smallint";
       }
     };
-    __publicField(PgSmallInt, _a92, "PgSmallInt");
+    __publicField(PgSmallInt, _a96, "PgSmallInt");
   }
 });
 
@@ -24626,13 +24708,13 @@ var init_smallint = __esm({
 function smallserial(name2) {
   return new PgSmallSerialBuilder(name2 ?? "");
 }
-var _a93, _b72, PgSmallSerialBuilder, _a94, _b73, PgSmallSerial;
+var _a97, _b76, PgSmallSerialBuilder, _a98, _b77, PgSmallSerial;
 var init_smallserial = __esm({
   "../drizzle-orm/dist/pg-core/columns/smallserial.js"() {
     "use strict";
     init_entity();
     init_common2();
-    PgSmallSerialBuilder = class extends (_b72 = PgColumnBuilder, _a93 = entityKind, _b72) {
+    PgSmallSerialBuilder = class extends (_b76 = PgColumnBuilder, _a97 = entityKind, _b76) {
       constructor(name2) {
         super(name2, "number", "PgSmallSerial");
         this.config.hasDefault = true;
@@ -24646,13 +24728,13 @@ var init_smallserial = __esm({
         );
       }
     };
-    __publicField(PgSmallSerialBuilder, _a93, "PgSmallSerialBuilder");
-    PgSmallSerial = class extends (_b73 = PgColumn, _a94 = entityKind, _b73) {
+    __publicField(PgSmallSerialBuilder, _a97, "PgSmallSerialBuilder");
+    PgSmallSerial = class extends (_b77 = PgColumn, _a98 = entityKind, _b77) {
       getSQLType() {
         return "smallserial";
       }
     };
-    __publicField(PgSmallSerial, _a94, "PgSmallSerial");
+    __publicField(PgSmallSerial, _a98, "PgSmallSerial");
   }
 });
 
@@ -24661,14 +24743,14 @@ function text(a, b = {}) {
   const { name: name2, config } = getColumnNameAndConfig(a, b);
   return new PgTextBuilder(name2, config);
 }
-var _a95, _b74, PgTextBuilder, _a96, _b75, PgText;
+var _a99, _b78, PgTextBuilder, _a100, _b79, PgText;
 var init_text = __esm({
   "../drizzle-orm/dist/pg-core/columns/text.js"() {
     "use strict";
     init_entity();
     init_utils2();
     init_common2();
-    PgTextBuilder = class extends (_b74 = PgColumnBuilder, _a95 = entityKind, _b74) {
+    PgTextBuilder = class extends (_b78 = PgColumnBuilder, _a99 = entityKind, _b78) {
       constructor(name2, config) {
         super(name2, "string", "PgText");
         this.config.enumValues = config.enum;
@@ -24678,8 +24760,8 @@ var init_text = __esm({
         return new PgText(table6, this.config);
       }
     };
-    __publicField(PgTextBuilder, _a95, "PgTextBuilder");
-    PgText = class extends (_b75 = PgColumn, _a96 = entityKind, _b75) {
+    __publicField(PgTextBuilder, _a99, "PgTextBuilder");
+    PgText = class extends (_b79 = PgColumn, _a100 = entityKind, _b79) {
       constructor() {
         super(...arguments);
         __publicField(this, "enumValues", this.config.enumValues);
@@ -24688,7 +24770,7 @@ var init_text = __esm({
         return "text";
       }
     };
-    __publicField(PgText, _a96, "PgText");
+    __publicField(PgText, _a100, "PgText");
   }
 });
 
@@ -24697,7 +24779,7 @@ function time(a, b = {}) {
   const { name: name2, config } = getColumnNameAndConfig(a, b);
   return new PgTimeBuilder(name2, config.withTimezone ?? false, config.precision);
 }
-var _a97, _b76, PgTimeBuilder, _a98, _b77, PgTime;
+var _a101, _b80, PgTimeBuilder, _a102, _b81, PgTime;
 var init_time = __esm({
   "../drizzle-orm/dist/pg-core/columns/time.js"() {
     "use strict";
@@ -24705,7 +24787,7 @@ var init_time = __esm({
     init_utils2();
     init_common2();
     init_date_common();
-    PgTimeBuilder = class extends (_b76 = PgDateColumnBaseBuilder, _a97 = entityKind, _b76) {
+    PgTimeBuilder = class extends (_b80 = PgDateColumnBaseBuilder, _a101 = entityKind, _b80) {
       constructor(name2, withTimezone, precision) {
         super(name2, "string", "PgTime");
         this.withTimezone = withTimezone;
@@ -24718,8 +24800,8 @@ var init_time = __esm({
         return new PgTime(table6, this.config);
       }
     };
-    __publicField(PgTimeBuilder, _a97, "PgTimeBuilder");
-    PgTime = class extends (_b77 = PgColumn, _a98 = entityKind, _b77) {
+    __publicField(PgTimeBuilder, _a101, "PgTimeBuilder");
+    PgTime = class extends (_b81 = PgColumn, _a102 = entityKind, _b81) {
       constructor(table6, config) {
         super(table6, config);
         __publicField(this, "withTimezone");
@@ -24732,7 +24814,7 @@ var init_time = __esm({
         return `time${precision}${this.withTimezone ? " with time zone" : ""}`;
       }
     };
-    __publicField(PgTime, _a98, "PgTime");
+    __publicField(PgTime, _a102, "PgTime");
   }
 });
 
@@ -24744,7 +24826,7 @@ function timestamp(a, b = {}) {
   }
   return new PgTimestampBuilder(name2, config?.withTimezone ?? false, config?.precision);
 }
-var _a99, _b78, PgTimestampBuilder, _a100, _b79, PgTimestamp, _a101, _b80, PgTimestampStringBuilder, _a102, _b81, PgTimestampString;
+var _a103, _b82, PgTimestampBuilder, _a104, _b83, PgTimestamp, _a105, _b84, PgTimestampStringBuilder, _a106, _b85, PgTimestampString;
 var init_timestamp = __esm({
   "../drizzle-orm/dist/pg-core/columns/timestamp.js"() {
     "use strict";
@@ -24752,7 +24834,7 @@ var init_timestamp = __esm({
     init_utils2();
     init_common2();
     init_date_common();
-    PgTimestampBuilder = class extends (_b78 = PgDateColumnBaseBuilder, _a99 = entityKind, _b78) {
+    PgTimestampBuilder = class extends (_b82 = PgDateColumnBaseBuilder, _a103 = entityKind, _b82) {
       constructor(name2, withTimezone, precision) {
         super(name2, "date", "PgTimestamp");
         this.config.withTimezone = withTimezone;
@@ -24763,8 +24845,8 @@ var init_timestamp = __esm({
         return new PgTimestamp(table6, this.config);
       }
     };
-    __publicField(PgTimestampBuilder, _a99, "PgTimestampBuilder");
-    PgTimestamp = class extends (_b79 = PgColumn, _a100 = entityKind, _b79) {
+    __publicField(PgTimestampBuilder, _a103, "PgTimestampBuilder");
+    PgTimestamp = class extends (_b83 = PgColumn, _a104 = entityKind, _b83) {
       constructor(table6, config) {
         super(table6, config);
         __publicField(this, "withTimezone");
@@ -24783,8 +24865,8 @@ var init_timestamp = __esm({
         return `timestamp${precision}${this.withTimezone ? " with time zone" : ""}`;
       }
     };
-    __publicField(PgTimestamp, _a100, "PgTimestamp");
-    PgTimestampStringBuilder = class extends (_b80 = PgDateColumnBaseBuilder, _a101 = entityKind, _b80) {
+    __publicField(PgTimestamp, _a104, "PgTimestamp");
+    PgTimestampStringBuilder = class extends (_b84 = PgDateColumnBaseBuilder, _a105 = entityKind, _b84) {
       constructor(name2, withTimezone, precision) {
         super(name2, "string", "PgTimestampString");
         this.config.withTimezone = withTimezone;
@@ -24798,8 +24880,8 @@ var init_timestamp = __esm({
         );
       }
     };
-    __publicField(PgTimestampStringBuilder, _a101, "PgTimestampStringBuilder");
-    PgTimestampString = class extends (_b81 = PgColumn, _a102 = entityKind, _b81) {
+    __publicField(PgTimestampStringBuilder, _a105, "PgTimestampStringBuilder");
+    PgTimestampString = class extends (_b85 = PgColumn, _a106 = entityKind, _b85) {
       constructor(table6, config) {
         super(table6, config);
         __publicField(this, "withTimezone");
@@ -24812,7 +24894,7 @@ var init_timestamp = __esm({
         return `timestamp${precision}${this.withTimezone ? " with time zone" : ""}`;
       }
     };
-    __publicField(PgTimestampString, _a102, "PgTimestampString");
+    __publicField(PgTimestampString, _a106, "PgTimestampString");
   }
 });
 
@@ -24820,14 +24902,14 @@ var init_timestamp = __esm({
 function uuid(name2) {
   return new PgUUIDBuilder(name2 ?? "");
 }
-var _a103, _b82, PgUUIDBuilder, _a104, _b83, PgUUID;
+var _a107, _b86, PgUUIDBuilder, _a108, _b87, PgUUID;
 var init_uuid = __esm({
   "../drizzle-orm/dist/pg-core/columns/uuid.js"() {
     "use strict";
     init_entity();
     init_sql();
     init_common2();
-    PgUUIDBuilder = class extends (_b82 = PgColumnBuilder, _a103 = entityKind, _b82) {
+    PgUUIDBuilder = class extends (_b86 = PgColumnBuilder, _a107 = entityKind, _b86) {
       constructor(name2) {
         super(name2, "string", "PgUUID");
       }
@@ -24842,13 +24924,13 @@ var init_uuid = __esm({
         return new PgUUID(table6, this.config);
       }
     };
-    __publicField(PgUUIDBuilder, _a103, "PgUUIDBuilder");
-    PgUUID = class extends (_b83 = PgColumn, _a104 = entityKind, _b83) {
+    __publicField(PgUUIDBuilder, _a107, "PgUUIDBuilder");
+    PgUUID = class extends (_b87 = PgColumn, _a108 = entityKind, _b87) {
       getSQLType() {
         return "uuid";
       }
     };
-    __publicField(PgUUID, _a104, "PgUUID");
+    __publicField(PgUUID, _a108, "PgUUID");
   }
 });
 
@@ -24857,14 +24939,14 @@ function varchar(a, b = {}) {
   const { name: name2, config } = getColumnNameAndConfig(a, b);
   return new PgVarcharBuilder(name2, config);
 }
-var _a105, _b84, PgVarcharBuilder, _a106, _b85, PgVarchar;
+var _a109, _b88, PgVarcharBuilder, _a110, _b89, PgVarchar;
 var init_varchar = __esm({
   "../drizzle-orm/dist/pg-core/columns/varchar.js"() {
     "use strict";
     init_entity();
     init_utils2();
     init_common2();
-    PgVarcharBuilder = class extends (_b84 = PgColumnBuilder, _a105 = entityKind, _b84) {
+    PgVarcharBuilder = class extends (_b88 = PgColumnBuilder, _a109 = entityKind, _b88) {
       constructor(name2, config) {
         super(name2, "string", "PgVarchar");
         this.config.length = config.length;
@@ -24878,8 +24960,8 @@ var init_varchar = __esm({
         );
       }
     };
-    __publicField(PgVarcharBuilder, _a105, "PgVarcharBuilder");
-    PgVarchar = class extends (_b85 = PgColumn, _a106 = entityKind, _b85) {
+    __publicField(PgVarcharBuilder, _a109, "PgVarcharBuilder");
+    PgVarchar = class extends (_b89 = PgColumn, _a110 = entityKind, _b89) {
       constructor() {
         super(...arguments);
         __publicField(this, "length", this.config.length);
@@ -24889,7 +24971,7 @@ var init_varchar = __esm({
         return this.length === void 0 ? `varchar` : `varchar(${this.length})`;
       }
     };
-    __publicField(PgVarchar, _a106, "PgVarchar");
+    __publicField(PgVarchar, _a110, "PgVarchar");
   }
 });
 
@@ -24898,14 +24980,14 @@ function bit(a, b) {
   const { name: name2, config } = getColumnNameAndConfig(a, b);
   return new PgBinaryVectorBuilder(name2, config);
 }
-var _a107, _b86, PgBinaryVectorBuilder, _a108, _b87, PgBinaryVector;
+var _a111, _b90, PgBinaryVectorBuilder, _a112, _b91, PgBinaryVector;
 var init_bit = __esm({
   "../drizzle-orm/dist/pg-core/columns/vector_extension/bit.js"() {
     "use strict";
     init_entity();
     init_utils2();
     init_common2();
-    PgBinaryVectorBuilder = class extends (_b86 = PgColumnBuilder, _a107 = entityKind, _b86) {
+    PgBinaryVectorBuilder = class extends (_b90 = PgColumnBuilder, _a111 = entityKind, _b90) {
       constructor(name2, config) {
         super(name2, "string", "PgBinaryVector");
         this.config.dimensions = config.dimensions;
@@ -24918,8 +25000,8 @@ var init_bit = __esm({
         );
       }
     };
-    __publicField(PgBinaryVectorBuilder, _a107, "PgBinaryVectorBuilder");
-    PgBinaryVector = class extends (_b87 = PgColumn, _a108 = entityKind, _b87) {
+    __publicField(PgBinaryVectorBuilder, _a111, "PgBinaryVectorBuilder");
+    PgBinaryVector = class extends (_b91 = PgColumn, _a112 = entityKind, _b91) {
       constructor() {
         super(...arguments);
         __publicField(this, "dimensions", this.config.dimensions);
@@ -24928,7 +25010,7 @@ var init_bit = __esm({
         return `bit(${this.dimensions})`;
       }
     };
-    __publicField(PgBinaryVector, _a108, "PgBinaryVector");
+    __publicField(PgBinaryVector, _a112, "PgBinaryVector");
   }
 });
 
@@ -24937,14 +25019,14 @@ function halfvec(a, b) {
   const { name: name2, config } = getColumnNameAndConfig(a, b);
   return new PgHalfVectorBuilder(name2, config);
 }
-var _a109, _b88, PgHalfVectorBuilder, _a110, _b89, PgHalfVector;
+var _a113, _b92, PgHalfVectorBuilder, _a114, _b93, PgHalfVector;
 var init_halfvec = __esm({
   "../drizzle-orm/dist/pg-core/columns/vector_extension/halfvec.js"() {
     "use strict";
     init_entity();
     init_utils2();
     init_common2();
-    PgHalfVectorBuilder = class extends (_b88 = PgColumnBuilder, _a109 = entityKind, _b88) {
+    PgHalfVectorBuilder = class extends (_b92 = PgColumnBuilder, _a113 = entityKind, _b92) {
       constructor(name2, config) {
         super(name2, "array", "PgHalfVector");
         this.config.dimensions = config.dimensions;
@@ -24957,8 +25039,8 @@ var init_halfvec = __esm({
         );
       }
     };
-    __publicField(PgHalfVectorBuilder, _a109, "PgHalfVectorBuilder");
-    PgHalfVector = class extends (_b89 = PgColumn, _a110 = entityKind, _b89) {
+    __publicField(PgHalfVectorBuilder, _a113, "PgHalfVectorBuilder");
+    PgHalfVector = class extends (_b93 = PgColumn, _a114 = entityKind, _b93) {
       constructor() {
         super(...arguments);
         __publicField(this, "dimensions", this.config.dimensions);
@@ -24973,7 +25055,7 @@ var init_halfvec = __esm({
         return value.slice(1, -1).split(",").map((v) => Number.parseFloat(v));
       }
     };
-    __publicField(PgHalfVector, _a110, "PgHalfVector");
+    __publicField(PgHalfVector, _a114, "PgHalfVector");
   }
 });
 
@@ -24982,14 +25064,14 @@ function sparsevec(a, b) {
   const { name: name2, config } = getColumnNameAndConfig(a, b);
   return new PgSparseVectorBuilder(name2, config);
 }
-var _a111, _b90, PgSparseVectorBuilder, _a112, _b91, PgSparseVector;
+var _a115, _b94, PgSparseVectorBuilder, _a116, _b95, PgSparseVector;
 var init_sparsevec = __esm({
   "../drizzle-orm/dist/pg-core/columns/vector_extension/sparsevec.js"() {
     "use strict";
     init_entity();
     init_utils2();
     init_common2();
-    PgSparseVectorBuilder = class extends (_b90 = PgColumnBuilder, _a111 = entityKind, _b90) {
+    PgSparseVectorBuilder = class extends (_b94 = PgColumnBuilder, _a115 = entityKind, _b94) {
       constructor(name2, config) {
         super(name2, "string", "PgSparseVector");
         this.config.dimensions = config.dimensions;
@@ -25002,8 +25084,8 @@ var init_sparsevec = __esm({
         );
       }
     };
-    __publicField(PgSparseVectorBuilder, _a111, "PgSparseVectorBuilder");
-    PgSparseVector = class extends (_b91 = PgColumn, _a112 = entityKind, _b91) {
+    __publicField(PgSparseVectorBuilder, _a115, "PgSparseVectorBuilder");
+    PgSparseVector = class extends (_b95 = PgColumn, _a116 = entityKind, _b95) {
       constructor() {
         super(...arguments);
         __publicField(this, "dimensions", this.config.dimensions);
@@ -25012,7 +25094,7 @@ var init_sparsevec = __esm({
         return `sparsevec(${this.dimensions})`;
       }
     };
-    __publicField(PgSparseVector, _a112, "PgSparseVector");
+    __publicField(PgSparseVector, _a116, "PgSparseVector");
   }
 });
 
@@ -25021,14 +25103,14 @@ function vector(a, b) {
   const { name: name2, config } = getColumnNameAndConfig(a, b);
   return new PgVectorBuilder(name2, config);
 }
-var _a113, _b92, PgVectorBuilder, _a114, _b93, PgVector;
+var _a117, _b96, PgVectorBuilder, _a118, _b97, PgVector;
 var init_vector = __esm({
   "../drizzle-orm/dist/pg-core/columns/vector_extension/vector.js"() {
     "use strict";
     init_entity();
     init_utils2();
     init_common2();
-    PgVectorBuilder = class extends (_b92 = PgColumnBuilder, _a113 = entityKind, _b92) {
+    PgVectorBuilder = class extends (_b96 = PgColumnBuilder, _a117 = entityKind, _b96) {
       constructor(name2, config) {
         super(name2, "array", "PgVector");
         this.config.dimensions = config.dimensions;
@@ -25041,8 +25123,8 @@ var init_vector = __esm({
         );
       }
     };
-    __publicField(PgVectorBuilder, _a113, "PgVectorBuilder");
-    PgVector = class extends (_b93 = PgColumn, _a114 = entityKind, _b93) {
+    __publicField(PgVectorBuilder, _a117, "PgVectorBuilder");
+    PgVector = class extends (_b97 = PgColumn, _a118 = entityKind, _b97) {
       constructor() {
         super(...arguments);
         __publicField(this, "dimensions", this.config.dimensions);
@@ -25057,7 +25139,7 @@ var init_vector = __esm({
         return value.slice(1, -1).split(",").map((v) => Number.parseFloat(v));
       }
     };
-    __publicField(PgVector, _a114, "PgVector");
+    __publicField(PgVector, _a118, "PgVector");
   }
 });
 
@@ -25170,7 +25252,7 @@ function pgTableWithSchema(name2, columns, extraConfig, schema5, baseName = name
     }
   });
 }
-var InlineForeignKeys, EnableRLS, _a115, _b94, _c3, _d2, _e2, _f2, PgTable, pgTable;
+var InlineForeignKeys, EnableRLS, _a119, _b98, _c3, _d2, _e2, _f2, PgTable, pgTable;
 var init_table2 = __esm({
   "../drizzle-orm/dist/pg-core/table.js"() {
     "use strict";
@@ -25179,7 +25261,7 @@ var init_table2 = __esm({
     init_all();
     InlineForeignKeys = Symbol.for("drizzle:PgInlineForeignKeys");
     EnableRLS = Symbol.for("drizzle:EnableRLS");
-    PgTable = class extends (_f2 = Table2, _e2 = entityKind, _d2 = InlineForeignKeys, _c3 = EnableRLS, _b94 = Table2.Symbol.ExtraConfigBuilder, _a115 = Table2.Symbol.ExtraConfigColumns, _f2) {
+    PgTable = class extends (_f2 = Table2, _e2 = entityKind, _d2 = InlineForeignKeys, _c3 = EnableRLS, _b98 = Table2.Symbol.ExtraConfigBuilder, _a119 = Table2.Symbol.ExtraConfigColumns, _f2) {
       constructor() {
         super(...arguments);
         /**@internal */
@@ -25187,9 +25269,9 @@ var init_table2 = __esm({
         /** @internal */
         __publicField(this, _c3, false);
         /** @internal */
-        __publicField(this, _b94);
+        __publicField(this, _b98);
         /** @internal */
-        __publicField(this, _a115, {});
+        __publicField(this, _a119, {});
       }
     };
     __publicField(PgTable, _e2, "PgTable");
@@ -25205,13 +25287,13 @@ var init_table2 = __esm({
 });
 
 // ../drizzle-orm/dist/pg-core/primary-keys.js
-var _a116, PrimaryKeyBuilder, _a117, PrimaryKey;
+var _a120, PrimaryKeyBuilder, _a121, PrimaryKey;
 var init_primary_keys = __esm({
   "../drizzle-orm/dist/pg-core/primary-keys.js"() {
     "use strict";
     init_entity();
     init_table2();
-    _a116 = entityKind;
+    _a120 = entityKind;
     PrimaryKeyBuilder = class {
       constructor(columns, name2) {
         /** @internal */
@@ -25226,8 +25308,8 @@ var init_primary_keys = __esm({
         return new PrimaryKey(table6, this.columns, this.name);
       }
     };
-    __publicField(PrimaryKeyBuilder, _a116, "PgPrimaryKeyBuilder");
-    _a117 = entityKind;
+    __publicField(PrimaryKeyBuilder, _a120, "PgPrimaryKeyBuilder");
+    _a121 = entityKind;
     PrimaryKey = class {
       constructor(table6, columns, name2) {
         __publicField(this, "columns");
@@ -25240,7 +25322,7 @@ var init_primary_keys = __esm({
         return this.name ?? `${this.table[PgTable.Symbol.Name]}_${this.columns.map((column6) => column6.name).join("_")}_pk`;
       }
     };
-    __publicField(PrimaryKey, _a117, "PgPrimaryKey");
+    __publicField(PrimaryKey, _a121, "PgPrimaryKey");
   }
 });
 
@@ -25463,7 +25545,7 @@ function mapRelationalRow(tablesConfig, tableConfig, row, buildQueryResultSelect
   }
   return result;
 }
-var _a118, Relation, _a119, Relations, _a120, _b95, _One, One, _a121, _b96, _Many, Many;
+var _a122, Relation, _a123, Relations, _a124, _b99, _One, One, _a125, _b100, _Many, Many;
 var init_relations = __esm({
   "../drizzle-orm/dist/relations.js"() {
     "use strict";
@@ -25473,7 +25555,7 @@ var init_relations = __esm({
     init_primary_keys();
     init_expressions();
     init_sql();
-    _a118 = entityKind;
+    _a122 = entityKind;
     Relation = class {
       constructor(sourceTable, referencedTable, relationName) {
         __publicField(this, "referencedTableName");
@@ -25484,16 +25566,16 @@ var init_relations = __esm({
         this.referencedTableName = referencedTable[Table2.Symbol.Name];
       }
     };
-    __publicField(Relation, _a118, "Relation");
-    _a119 = entityKind;
+    __publicField(Relation, _a122, "Relation");
+    _a123 = entityKind;
     Relations = class {
       constructor(table6, config) {
         this.table = table6;
         this.config = config;
       }
     };
-    __publicField(Relations, _a119, "Relations");
-    _One = class _One extends (_b95 = Relation, _a120 = entityKind, _b95) {
+    __publicField(Relations, _a123, "Relations");
+    _One = class _One extends (_b99 = Relation, _a124 = entityKind, _b99) {
       constructor(sourceTable, referencedTable, config, isNullable) {
         super(sourceTable, referencedTable, config?.relationName);
         this.config = config;
@@ -25510,9 +25592,9 @@ var init_relations = __esm({
         return relation;
       }
     };
-    __publicField(_One, _a120, "One");
+    __publicField(_One, _a124, "One");
     One = _One;
-    _Many = class _Many extends (_b96 = Relation, _a121 = entityKind, _b96) {
+    _Many = class _Many extends (_b100 = Relation, _a125 = entityKind, _b100) {
       constructor(sourceTable, referencedTable, config) {
         super(sourceTable, referencedTable, config?.relationName);
         this.config = config;
@@ -25527,7 +25609,7 @@ var init_relations = __esm({
         return relation;
       }
     };
-    __publicField(_Many, _a121, "Many");
+    __publicField(_Many, _a125, "Many");
     Many = _Many;
   }
 });
@@ -25781,12 +25863,12 @@ var init_alias2 = __esm({
 });
 
 // ../drizzle-orm/dist/pg-core/checks.js
-var _a122, CheckBuilder, _a123, Check;
+var _a126, CheckBuilder, _a127, Check;
 var init_checks = __esm({
   "../drizzle-orm/dist/pg-core/checks.js"() {
     "use strict";
     init_entity();
-    _a122 = entityKind;
+    _a126 = entityKind;
     CheckBuilder = class {
       constructor(name2, value) {
         __publicField(this, "brand");
@@ -25798,8 +25880,8 @@ var init_checks = __esm({
         return new Check(table6, this);
       }
     };
-    __publicField(CheckBuilder, _a122, "PgCheckBuilder");
-    _a123 = entityKind;
+    __publicField(CheckBuilder, _a126, "PgCheckBuilder");
+    _a127 = entityKind;
     Check = class {
       constructor(table6, builder) {
         __publicField(this, "name");
@@ -25809,7 +25891,7 @@ var init_checks = __esm({
         this.value = builder.value;
       }
     };
-    __publicField(Check, _a123, "PgCheck");
+    __publicField(Check, _a127, "PgCheck");
   }
 });
 
@@ -25856,7 +25938,7 @@ var init_columns = __esm({
 });
 
 // ../drizzle-orm/dist/selection-proxy.js
-var _a124, _SelectionProxyHandler, SelectionProxyHandler;
+var _a128, _SelectionProxyHandler, SelectionProxyHandler;
 var init_selection_proxy = __esm({
   "../drizzle-orm/dist/selection-proxy.js"() {
     "use strict";
@@ -25866,7 +25948,7 @@ var init_selection_proxy = __esm({
     init_sql();
     init_subquery();
     init_view_common();
-    _a124 = entityKind;
+    _a128 = entityKind;
     _SelectionProxyHandler = class _SelectionProxyHandler {
       constructor(config) {
         __publicField(this, "config");
@@ -25932,13 +26014,13 @@ var init_selection_proxy = __esm({
         return new Proxy(value, new _SelectionProxyHandler(this.config));
       }
     };
-    __publicField(_SelectionProxyHandler, _a124, "SelectionProxyHandler");
+    __publicField(_SelectionProxyHandler, _a128, "SelectionProxyHandler");
     SelectionProxyHandler = _SelectionProxyHandler;
   }
 });
 
 // ../drizzle-orm/dist/pg-core/query-builders/delete.js
-var _a125, _b97, PgDeleteBase;
+var _a129, _b101, PgDeleteBase;
 var init_delete = __esm({
   "../drizzle-orm/dist/pg-core/query-builders/delete.js"() {
     "use strict";
@@ -25948,7 +26030,7 @@ var init_delete = __esm({
     init_table();
     init_tracing();
     init_utils2();
-    PgDeleteBase = class extends (_b97 = QueryPromise, _a125 = entityKind, _b97) {
+    PgDeleteBase = class extends (_b101 = QueryPromise, _a129 = entityKind, _b101) {
       constructor(table6, session, dialect6, withList) {
         super();
         __publicField(this, "config");
@@ -26037,7 +26119,7 @@ var init_delete = __esm({
         return this;
       }
     };
-    __publicField(PgDeleteBase, _a125, "PgDelete");
+    __publicField(PgDeleteBase, _a129, "PgDelete");
   }
 });
 
@@ -26056,13 +26138,13 @@ function toCamelCase(input) {
 function noopCase(input) {
   return input;
 }
-var _a126, CasingCache;
+var _a130, CasingCache;
 var init_casing = __esm({
   "../drizzle-orm/dist/casing.js"() {
     "use strict";
     init_entity();
     init_table();
-    _a126 = entityKind;
+    _a130 = entityKind;
     CasingCache = class {
       constructor(casing2) {
         /** @internal */
@@ -26099,25 +26181,25 @@ var init_casing = __esm({
         this.cachedTables = {};
       }
     };
-    __publicField(CasingCache, _a126, "CasingCache");
+    __publicField(CasingCache, _a130, "CasingCache");
   }
 });
 
 // ../drizzle-orm/dist/pg-core/view-base.js
-var _a127, _b98, PgViewBase;
+var _a131, _b102, PgViewBase;
 var init_view_base = __esm({
   "../drizzle-orm/dist/pg-core/view-base.js"() {
     "use strict";
     init_entity();
     init_sql();
-    PgViewBase = class extends (_b98 = View3, _a127 = entityKind, _b98) {
+    PgViewBase = class extends (_b102 = View3, _a131 = entityKind, _b102) {
     };
-    __publicField(PgViewBase, _a127, "PgViewBase");
+    __publicField(PgViewBase, _a131, "PgViewBase");
   }
 });
 
 // ../drizzle-orm/dist/pg-core/dialect.js
-var _a128, PgDialect;
+var _a132, PgDialect;
 var init_dialect = __esm({
   "../drizzle-orm/dist/pg-core/dialect.js"() {
     "use strict";
@@ -26136,7 +26218,7 @@ var init_dialect = __esm({
     init_utils2();
     init_view_common();
     init_view_base();
-    _a128 = entityKind;
+    _a132 = entityKind;
     PgDialect = class {
       constructor(config) {
         /** @internal */
@@ -26319,7 +26401,7 @@ var init_dialect = __esm({
         return sql.join(joinsArray);
       }
       buildFromTable(table6) {
-        if (is(table6, Table2) && table6[Table2.Symbol.OriginalName] !== table6[Table2.Symbol.Name]) {
+        if (is(table6, Table2) && table6[Table2.Symbol.IsAlias]) {
           let fullName = sql`${sql.identifier(table6[Table2.Symbol.OriginalName])}`;
           if (table6[Table2.Symbol.Schema]) {
             fullName = sql`${sql.identifier(table6[Table2.Symbol.Schema])}.${fullName}`;
@@ -27228,24 +27310,24 @@ var init_dialect = __esm({
         };
       }
     };
-    __publicField(PgDialect, _a128, "PgDialect");
+    __publicField(PgDialect, _a132, "PgDialect");
   }
 });
 
 // ../drizzle-orm/dist/query-builders/query-builder.js
-var _a129, TypedQueryBuilder;
+var _a133, TypedQueryBuilder;
 var init_query_builder = __esm({
   "../drizzle-orm/dist/query-builders/query-builder.js"() {
     "use strict";
     init_entity();
-    _a129 = entityKind;
+    _a133 = entityKind;
     TypedQueryBuilder = class {
       /** @internal */
       getSelectedFields() {
         return this._.selectedFields;
       }
     };
-    __publicField(TypedQueryBuilder, _a129, "TypedQueryBuilder");
+    __publicField(TypedQueryBuilder, _a133, "TypedQueryBuilder");
   }
 });
 
@@ -27267,7 +27349,7 @@ function createSetOperator(type, isAll) {
     return leftSelect.addSetOperators(setOperators);
   };
 }
-var _a130, PgSelectBuilder, _a131, _b99, PgSelectQueryBuilderBase, _a132, _b100, PgSelectBase, getPgSetOperators, union2, unionAll, intersect, intersectAll, except, exceptAll;
+var _a134, PgSelectBuilder, _a135, _b103, PgSelectQueryBuilderBase, _a136, _b104, PgSelectBase, getPgSetOperators, union2, unionAll, intersect, intersectAll, except, exceptAll;
 var init_select2 = __esm({
   "../drizzle-orm/dist/pg-core/query-builders/select.js"() {
     "use strict";
@@ -27283,7 +27365,7 @@ var init_select2 = __esm({
     init_utils2();
     init_utils2();
     init_view_common();
-    _a130 = entityKind;
+    _a134 = entityKind;
     PgSelectBuilder = class {
       constructor(config) {
         __publicField(this, "fields");
@@ -27339,8 +27421,8 @@ var init_select2 = __esm({
         }).setToken(this.authToken);
       }
     };
-    __publicField(PgSelectBuilder, _a130, "PgSelectBuilder");
-    PgSelectQueryBuilderBase = class extends (_b99 = TypedQueryBuilder, _a131 = entityKind, _b99) {
+    __publicField(PgSelectBuilder, _a134, "PgSelectBuilder");
+    PgSelectQueryBuilderBase = class extends (_b103 = TypedQueryBuilder, _a135 = entityKind, _b103) {
       constructor({ table: table6, fields, isPartialSelect, session, dialect: dialect6, withList, distinct }) {
         super();
         __publicField(this, "_");
@@ -27668,7 +27750,7 @@ var init_select2 = __esm({
         return (table6, on) => {
           const baseTableName = this.tableName;
           const tableName = getTableLikeName(table6);
-          if (typeof tableName === "string" && this.config.joins?.some((join) => join.alias === tableName)) {
+          if (typeof tableName === "string" && this.config.joins?.some((join2) => join2.alias === tableName)) {
             throw new Error(`Alias "${tableName}" is already used in this query`);
           }
           if (!this.isPartialSelect) {
@@ -27940,8 +28022,8 @@ var init_select2 = __esm({
         return this;
       }
     };
-    __publicField(PgSelectQueryBuilderBase, _a131, "PgSelectQueryBuilder");
-    PgSelectBase = class extends (_b100 = PgSelectQueryBuilderBase, _a132 = entityKind, _b100) {
+    __publicField(PgSelectQueryBuilderBase, _a135, "PgSelectQueryBuilder");
+    PgSelectBase = class extends (_b104 = PgSelectQueryBuilderBase, _a136 = entityKind, _b104) {
       constructor() {
         super(...arguments);
         __publicField(this, "authToken");
@@ -27980,7 +28062,7 @@ var init_select2 = __esm({
         return this;
       }
     };
-    __publicField(PgSelectBase, _a132, "PgSelect");
+    __publicField(PgSelectBase, _a136, "PgSelect");
     applyMixins(PgSelectBase, [QueryPromise]);
     getPgSetOperators = () => ({
       union: union2,
@@ -28000,7 +28082,7 @@ var init_select2 = __esm({
 });
 
 // ../drizzle-orm/dist/pg-core/query-builders/query-builder.js
-var _a133, QueryBuilder;
+var _a137, QueryBuilder;
 var init_query_builder2 = __esm({
   "../drizzle-orm/dist/pg-core/query-builders/query-builder.js"() {
     "use strict";
@@ -28009,7 +28091,7 @@ var init_query_builder2 = __esm({
     init_selection_proxy();
     init_subquery();
     init_select2();
-    _a133 = entityKind;
+    _a137 = entityKind;
     QueryBuilder = class {
       constructor(dialect6) {
         __publicField(this, "dialect");
@@ -28094,12 +28176,12 @@ var init_query_builder2 = __esm({
         return this.dialect;
       }
     };
-    __publicField(QueryBuilder, _a133, "PgQueryBuilder");
+    __publicField(QueryBuilder, _a137, "PgQueryBuilder");
   }
 });
 
 // ../drizzle-orm/dist/pg-core/query-builders/insert.js
-var _a134, PgInsertBuilder, _a135, _b101, PgInsertBase;
+var _a138, PgInsertBuilder, _a139, _b105, PgInsertBase;
 var init_insert = __esm({
   "../drizzle-orm/dist/pg-core/query-builders/insert.js"() {
     "use strict";
@@ -28111,7 +28193,7 @@ var init_insert = __esm({
     init_tracing();
     init_utils2();
     init_query_builder2();
-    _a134 = entityKind;
+    _a138 = entityKind;
     PgInsertBuilder = class {
       constructor(table6, session, dialect6, withList, overridingSystemValue_) {
         __publicField(this, "authToken");
@@ -28164,8 +28246,8 @@ var init_insert = __esm({
         return new PgInsertBase(this.table, select, this.session, this.dialect, this.withList, true);
       }
     };
-    __publicField(PgInsertBuilder, _a134, "PgInsertBuilder");
-    PgInsertBase = class extends (_b101 = QueryPromise, _a135 = entityKind, _b101) {
+    __publicField(PgInsertBuilder, _a138, "PgInsertBuilder");
+    PgInsertBase = class extends (_b105 = QueryPromise, _a139 = entityKind, _b105) {
       constructor(table6, values, session, dialect6, withList, select, overridingSystemValue_) {
         super();
         __publicField(this, "config");
@@ -28298,19 +28380,19 @@ var init_insert = __esm({
         return this;
       }
     };
-    __publicField(PgInsertBase, _a135, "PgInsert");
+    __publicField(PgInsertBase, _a139, "PgInsert");
   }
 });
 
 // ../drizzle-orm/dist/pg-core/query-builders/refresh-materialized-view.js
-var _a136, _b102, PgRefreshMaterializedView;
+var _a140, _b106, PgRefreshMaterializedView;
 var init_refresh_materialized_view = __esm({
   "../drizzle-orm/dist/pg-core/query-builders/refresh-materialized-view.js"() {
     "use strict";
     init_entity();
     init_query_promise();
     init_tracing();
-    PgRefreshMaterializedView = class extends (_b102 = QueryPromise, _a136 = entityKind, _b102) {
+    PgRefreshMaterializedView = class extends (_b106 = QueryPromise, _a140 = entityKind, _b106) {
       constructor(view5, session, dialect6) {
         super();
         __publicField(this, "config");
@@ -28361,7 +28443,7 @@ var init_refresh_materialized_view = __esm({
         return this;
       }
     };
-    __publicField(PgRefreshMaterializedView, _a136, "PgRefreshMaterializedView");
+    __publicField(PgRefreshMaterializedView, _a140, "PgRefreshMaterializedView");
   }
 });
 
@@ -28373,7 +28455,7 @@ var init_select_types = __esm({
 });
 
 // ../drizzle-orm/dist/pg-core/query-builders/update.js
-var _a137, PgUpdateBuilder, _a138, _b103, PgUpdateBase;
+var _a141, PgUpdateBuilder, _a142, _b107, PgUpdateBase;
 var init_update = __esm({
   "../drizzle-orm/dist/pg-core/query-builders/update.js"() {
     "use strict";
@@ -28386,7 +28468,7 @@ var init_update = __esm({
     init_table();
     init_utils2();
     init_view_common();
-    _a137 = entityKind;
+    _a141 = entityKind;
     PgUpdateBuilder = class {
       constructor(table6, session, dialect6, withList) {
         __publicField(this, "authToken");
@@ -28409,8 +28491,8 @@ var init_update = __esm({
         ).setToken(this.authToken);
       }
     };
-    __publicField(PgUpdateBuilder, _a137, "PgUpdateBuilder");
-    PgUpdateBase = class extends (_b103 = QueryPromise, _a138 = entityKind, _b103) {
+    __publicField(PgUpdateBuilder, _a141, "PgUpdateBuilder");
+    PgUpdateBase = class extends (_b107 = QueryPromise, _a142 = entityKind, _b107) {
       constructor(table6, set, session, dialect6, withList) {
         super();
         __publicField(this, "config");
@@ -28450,7 +28532,7 @@ var init_update = __esm({
       createJoin(joinType) {
         return (table6, on) => {
           const tableName = getTableLikeName(table6);
-          if (typeof tableName === "string" && this.config.joins.some((join) => join.alias === tableName)) {
+          if (typeof tableName === "string" && this.config.joins.some((join2) => join2.alias === tableName)) {
             throw new Error(`Alias "${tableName}" is already used in this query`);
           }
           if (typeof on === "function") {
@@ -28542,10 +28624,10 @@ var init_update = __esm({
               const fromFields = this.getTableLikeFields(this.config.from);
               fields[tableName] = fromFields;
             }
-            for (const join of this.config.joins) {
-              const tableName2 = getTableLikeName(join.table);
-              if (typeof tableName2 === "string" && !is(join.table, SQL)) {
-                const fromFields = this.getTableLikeFields(join.table);
+            for (const join2 of this.config.joins) {
+              const tableName2 = getTableLikeName(join2.table);
+              if (typeof tableName2 === "string" && !is(join2.table, SQL)) {
+                const fromFields = this.getTableLikeFields(join2.table);
                 fields[tableName2] = fromFields;
               }
             }
@@ -28592,7 +28674,7 @@ var init_update = __esm({
         return this;
       }
     };
-    __publicField(PgUpdateBase, _a138, "PgUpdate");
+    __publicField(PgUpdateBase, _a142, "PgUpdate");
   }
 });
 
@@ -28611,18 +28693,18 @@ var init_query_builders = __esm({
 });
 
 // ../drizzle-orm/dist/pg-core/query-builders/count.js
-var _a139, _b104, _c4, _PgCountBuilder, PgCountBuilder;
+var _a143, _b108, _c4, _PgCountBuilder, PgCountBuilder;
 var init_count = __esm({
   "../drizzle-orm/dist/pg-core/query-builders/count.js"() {
     "use strict";
     init_entity();
     init_sql();
-    _PgCountBuilder = class _PgCountBuilder extends (_c4 = SQL, _b104 = entityKind, _a139 = Symbol.toStringTag, _c4) {
+    _PgCountBuilder = class _PgCountBuilder extends (_c4 = SQL, _b108 = entityKind, _a143 = Symbol.toStringTag, _c4) {
       constructor(params) {
         super(_PgCountBuilder.buildEmbeddedCount(params.source, params.filters).queryChunks);
         __publicField(this, "sql");
         __publicField(this, "token");
-        __publicField(this, _a139, "PgCountBuilder");
+        __publicField(this, _a143, "PgCountBuilder");
         __publicField(this, "session");
         this.params = params;
         this.mapWith(Number);
@@ -28665,13 +28747,13 @@ var init_count = __esm({
         );
       }
     };
-    __publicField(_PgCountBuilder, _b104, "PgCountBuilder");
+    __publicField(_PgCountBuilder, _b108, "PgCountBuilder");
     PgCountBuilder = _PgCountBuilder;
   }
 });
 
 // ../drizzle-orm/dist/pg-core/query-builders/query.js
-var _a140, RelationalQueryBuilder, _a141, _b105, PgRelationalQuery;
+var _a144, RelationalQueryBuilder, _a145, _b109, PgRelationalQuery;
 var init_query = __esm({
   "../drizzle-orm/dist/pg-core/query-builders/query.js"() {
     "use strict";
@@ -28679,7 +28761,7 @@ var init_query = __esm({
     init_query_promise();
     init_relations();
     init_tracing();
-    _a140 = entityKind;
+    _a144 = entityKind;
     RelationalQueryBuilder = class {
       constructor(fullSchema, schema5, tableNamesMap, table6, tableConfig, dialect6, session) {
         this.fullSchema = fullSchema;
@@ -28717,8 +28799,8 @@ var init_query = __esm({
         );
       }
     };
-    __publicField(RelationalQueryBuilder, _a140, "PgRelationalQueryBuilder");
-    PgRelationalQuery = class extends (_b105 = QueryPromise, _a141 = entityKind, _b105) {
+    __publicField(RelationalQueryBuilder, _a144, "PgRelationalQueryBuilder");
+    PgRelationalQuery = class extends (_b109 = QueryPromise, _a145 = entityKind, _b109) {
       constructor(fullSchema, schema5, tableNamesMap, table6, tableConfig, dialect6, session, config, mode) {
         super();
         __publicField(this, "authToken");
@@ -28790,18 +28872,18 @@ var init_query = __esm({
         });
       }
     };
-    __publicField(PgRelationalQuery, _a141, "PgRelationalQuery");
+    __publicField(PgRelationalQuery, _a145, "PgRelationalQuery");
   }
 });
 
 // ../drizzle-orm/dist/pg-core/query-builders/raw.js
-var _a142, _b106, PgRaw;
+var _a146, _b110, PgRaw;
 var init_raw = __esm({
   "../drizzle-orm/dist/pg-core/query-builders/raw.js"() {
     "use strict";
     init_entity();
     init_query_promise();
-    PgRaw = class extends (_b106 = QueryPromise, _a142 = entityKind, _b106) {
+    PgRaw = class extends (_b110 = QueryPromise, _a146 = entityKind, _b110) {
       constructor(execute, sql2, query, mapBatchResult) {
         super();
         this.execute = execute;
@@ -28827,12 +28909,12 @@ var init_raw = __esm({
         return false;
       }
     };
-    __publicField(PgRaw, _a142, "PgRaw");
+    __publicField(PgRaw, _a146, "PgRaw");
   }
 });
 
 // ../drizzle-orm/dist/pg-core/db.js
-var _a143, PgDatabase;
+var _a147, PgDatabase;
 var init_db = __esm({
   "../drizzle-orm/dist/pg-core/db.js"() {
     "use strict";
@@ -28845,7 +28927,7 @@ var init_db = __esm({
     init_query();
     init_raw();
     init_refresh_materialized_view();
-    _a143 = entityKind;
+    _a147 = entityKind;
     PgDatabase = class {
       constructor(dialect6, session, schema5) {
         __publicField(this, "query");
@@ -29119,19 +29201,19 @@ var init_db = __esm({
         return this.session.transaction(transaction, config);
       }
     };
-    __publicField(PgDatabase, _a143, "PgDatabase");
+    __publicField(PgDatabase, _a147, "PgDatabase");
   }
 });
 
 // ../drizzle-orm/dist/pg-core/indexes.js
-var _a144, IndexBuilderOn, _a145, IndexBuilder, _a146, Index2;
+var _a148, IndexBuilderOn, _a149, IndexBuilder, _a150, Index2;
 var init_indexes = __esm({
   "../drizzle-orm/dist/pg-core/indexes.js"() {
     "use strict";
     init_sql();
     init_entity();
     init_columns();
-    _a144 = entityKind;
+    _a148 = entityKind;
     IndexBuilderOn = class {
       constructor(unique, name2) {
         this.unique = unique;
@@ -29198,8 +29280,8 @@ var init_indexes = __esm({
         );
       }
     };
-    __publicField(IndexBuilderOn, _a144, "PgIndexBuilderOn");
-    _a145 = entityKind;
+    __publicField(IndexBuilderOn, _a148, "PgIndexBuilderOn");
+    _a149 = entityKind;
     IndexBuilder = class {
       constructor(columns, unique, only, name2, method = "btree") {
         /** @internal */
@@ -29229,25 +29311,25 @@ var init_indexes = __esm({
         return new Index2(this.config, table6);
       }
     };
-    __publicField(IndexBuilder, _a145, "PgIndexBuilder");
-    _a146 = entityKind;
+    __publicField(IndexBuilder, _a149, "PgIndexBuilder");
+    _a150 = entityKind;
     Index2 = class {
       constructor(config, table6) {
         __publicField(this, "config");
         this.config = { ...config, table: table6 };
       }
     };
-    __publicField(Index2, _a146, "PgIndex");
+    __publicField(Index2, _a150, "PgIndex");
   }
 });
 
 // ../drizzle-orm/dist/pg-core/policies.js
-var _a147, PgPolicy;
+var _a151, PgPolicy;
 var init_policies = __esm({
   "../drizzle-orm/dist/pg-core/policies.js"() {
     "use strict";
     init_entity();
-    _a147 = entityKind;
+    _a151 = entityKind;
     PgPolicy = class {
       constructor(name2, config) {
         __publicField(this, "as");
@@ -29271,17 +29353,17 @@ var init_policies = __esm({
         return this;
       }
     };
-    __publicField(PgPolicy, _a147, "PgPolicy");
+    __publicField(PgPolicy, _a151, "PgPolicy");
   }
 });
 
 // ../drizzle-orm/dist/pg-core/roles.js
-var _a148, PgRole;
+var _a152, PgRole;
 var init_roles = __esm({
   "../drizzle-orm/dist/pg-core/roles.js"() {
     "use strict";
     init_entity();
-    _a148 = entityKind;
+    _a152 = entityKind;
     PgRole = class {
       constructor(name2, config) {
         /** @internal */
@@ -29304,7 +29386,7 @@ var init_roles = __esm({
         return this;
       }
     };
-    __publicField(PgRole, _a148, "PgRole");
+    __publicField(PgRole, _a152, "PgRole");
   }
 });
 
@@ -29315,12 +29397,12 @@ function pgSequenceWithSchema(name2, options, schema5) {
 function isPgSequence(obj) {
   return is(obj, PgSequence);
 }
-var _a149, PgSequence;
+var _a153, PgSequence;
 var init_sequence = __esm({
   "../drizzle-orm/dist/pg-core/sequence.js"() {
     "use strict";
     init_entity();
-    _a149 = entityKind;
+    _a153 = entityKind;
     PgSequence = class {
       constructor(seqName, seqOptions, schema5) {
         this.seqName = seqName;
@@ -29328,7 +29410,7 @@ var init_sequence = __esm({
         this.schema = schema5;
       }
     };
-    __publicField(PgSequence, _a149, "PgSequence");
+    __publicField(PgSequence, _a153, "PgSequence");
   }
 });
 
@@ -29360,7 +29442,7 @@ function isPgView(obj) {
 function isPgMaterializedView(obj) {
   return is(obj, PgMaterializedView);
 }
-var _a150, DefaultViewBuilderCore, _a151, _b107, ViewBuilder, _a152, _b108, ManualViewBuilder, _a153, MaterializedViewBuilderCore, _a154, _b109, MaterializedViewBuilder, _a155, _b110, ManualMaterializedViewBuilder, _a156, _b111, _c5, PgView2, PgMaterializedViewConfig, _a157, _b112, _c6, PgMaterializedView;
+var _a154, DefaultViewBuilderCore, _a155, _b111, ViewBuilder, _a156, _b112, ManualViewBuilder, _a157, MaterializedViewBuilderCore, _a158, _b113, MaterializedViewBuilder, _a159, _b114, ManualMaterializedViewBuilder, _a160, _b115, _c5, PgView2, PgMaterializedViewConfig, _a161, _b116, _c6, PgMaterializedView;
 var init_view = __esm({
   "../drizzle-orm/dist/pg-core/view.js"() {
     "use strict";
@@ -29371,7 +29453,7 @@ var init_view = __esm({
     init_table2();
     init_view_base();
     init_view_common2();
-    _a150 = entityKind;
+    _a154 = entityKind;
     DefaultViewBuilderCore = class {
       constructor(name2, schema5) {
         __publicField(this, "config", {});
@@ -29383,8 +29465,8 @@ var init_view = __esm({
         return this;
       }
     };
-    __publicField(DefaultViewBuilderCore, _a150, "PgDefaultViewBuilderCore");
-    ViewBuilder = class extends (_b107 = DefaultViewBuilderCore, _a151 = entityKind, _b107) {
+    __publicField(DefaultViewBuilderCore, _a154, "PgDefaultViewBuilderCore");
+    ViewBuilder = class extends (_b111 = DefaultViewBuilderCore, _a155 = entityKind, _b111) {
       as(qb) {
         if (typeof qb === "function") {
           qb = qb(new QueryBuilder());
@@ -29410,8 +29492,8 @@ var init_view = __esm({
         );
       }
     };
-    __publicField(ViewBuilder, _a151, "PgViewBuilder");
-    ManualViewBuilder = class extends (_b108 = DefaultViewBuilderCore, _a152 = entityKind, _b108) {
+    __publicField(ViewBuilder, _a155, "PgViewBuilder");
+    ManualViewBuilder = class extends (_b112 = DefaultViewBuilderCore, _a156 = entityKind, _b112) {
       constructor(name2, columns, schema5) {
         super(name2, schema5);
         __publicField(this, "columns");
@@ -29456,8 +29538,8 @@ var init_view = __esm({
         );
       }
     };
-    __publicField(ManualViewBuilder, _a152, "PgManualViewBuilder");
-    _a153 = entityKind;
+    __publicField(ManualViewBuilder, _a156, "PgManualViewBuilder");
+    _a157 = entityKind;
     MaterializedViewBuilderCore = class {
       constructor(name2, schema5) {
         __publicField(this, "config", {});
@@ -29481,8 +29563,8 @@ var init_view = __esm({
         return this;
       }
     };
-    __publicField(MaterializedViewBuilderCore, _a153, "PgMaterializedViewBuilderCore");
-    MaterializedViewBuilder = class extends (_b109 = MaterializedViewBuilderCore, _a154 = entityKind, _b109) {
+    __publicField(MaterializedViewBuilderCore, _a157, "PgMaterializedViewBuilderCore");
+    MaterializedViewBuilder = class extends (_b113 = MaterializedViewBuilderCore, _a158 = entityKind, _b113) {
       as(qb) {
         if (typeof qb === "function") {
           qb = qb(new QueryBuilder());
@@ -29513,8 +29595,8 @@ var init_view = __esm({
         );
       }
     };
-    __publicField(MaterializedViewBuilder, _a154, "PgMaterializedViewBuilder");
-    ManualMaterializedViewBuilder = class extends (_b110 = MaterializedViewBuilderCore, _a155 = entityKind, _b110) {
+    __publicField(MaterializedViewBuilder, _a158, "PgMaterializedViewBuilder");
+    ManualMaterializedViewBuilder = class extends (_b114 = MaterializedViewBuilderCore, _a159 = entityKind, _b114) {
       constructor(name2, columns, schema5) {
         super(name2, schema5);
         __publicField(this, "columns");
@@ -29569,11 +29651,11 @@ var init_view = __esm({
         );
       }
     };
-    __publicField(ManualMaterializedViewBuilder, _a155, "PgManualMaterializedViewBuilder");
-    PgView2 = class extends (_c5 = PgViewBase, _b111 = entityKind, _a156 = PgViewConfig, _c5) {
+    __publicField(ManualMaterializedViewBuilder, _a159, "PgManualMaterializedViewBuilder");
+    PgView2 = class extends (_c5 = PgViewBase, _b115 = entityKind, _a160 = PgViewConfig, _c5) {
       constructor({ pgConfig, config }) {
         super(config);
-        __publicField(this, _a156);
+        __publicField(this, _a160);
         if (pgConfig) {
           this[PgViewConfig] = {
             with: pgConfig.with
@@ -29581,12 +29663,12 @@ var init_view = __esm({
         }
       }
     };
-    __publicField(PgView2, _b111, "PgView");
+    __publicField(PgView2, _b115, "PgView");
     PgMaterializedViewConfig = Symbol.for("drizzle:PgMaterializedViewConfig");
-    PgMaterializedView = class extends (_c6 = PgViewBase, _b112 = entityKind, _a157 = PgMaterializedViewConfig, _c6) {
+    PgMaterializedView = class extends (_c6 = PgViewBase, _b116 = entityKind, _a161 = PgMaterializedViewConfig, _c6) {
       constructor({ pgConfig, config }) {
         super(config);
-        __publicField(this, _a157);
+        __publicField(this, _a161);
         this[PgMaterializedViewConfig] = {
           with: pgConfig?.with,
           using: pgConfig?.using,
@@ -29595,12 +29677,12 @@ var init_view = __esm({
         };
       }
     };
-    __publicField(PgMaterializedView, _b112, "PgMaterializedView");
+    __publicField(PgMaterializedView, _b116, "PgMaterializedView");
   }
 });
 
 // ../drizzle-orm/dist/pg-core/schema.js
-var _a158, PgSchema5;
+var _a162, PgSchema5;
 var init_schema = __esm({
   "../drizzle-orm/dist/pg-core/schema.js"() {
     "use strict";
@@ -29610,7 +29692,7 @@ var init_schema = __esm({
     init_sequence();
     init_table2();
     init_view();
-    _a158 = entityKind;
+    _a162 = entityKind;
     PgSchema5 = class {
       constructor(schemaName) {
         __publicField(this, "table", (name2, columns, extraConfig) => {
@@ -29637,12 +29719,12 @@ var init_schema = __esm({
         return true;
       }
     };
-    __publicField(PgSchema5, _a158, "PgSchema");
+    __publicField(PgSchema5, _a162, "PgSchema");
   }
 });
 
 // ../drizzle-orm/dist/pg-core/session.js
-var _a159, PgPreparedQuery, _a160, PgSession, _a161, _b113, PgTransaction;
+var _a163, PgPreparedQuery, _a164, PgSession, _a165, _b117, PgTransaction;
 var init_session = __esm({
   "../drizzle-orm/dist/pg-core/session.js"() {
     "use strict";
@@ -29651,7 +29733,7 @@ var init_session = __esm({
     init_sql2();
     init_tracing();
     init_db();
-    _a159 = entityKind;
+    _a163 = entityKind;
     PgPreparedQuery = class {
       constructor(query) {
         __publicField(this, "authToken");
@@ -29671,8 +29753,8 @@ var init_session = __esm({
         return this;
       }
     };
-    __publicField(PgPreparedQuery, _a159, "PgPreparedQuery");
-    _a160 = entityKind;
+    __publicField(PgPreparedQuery, _a163, "PgPreparedQuery");
+    _a164 = entityKind;
     PgSession = class {
       constructor(dialect6) {
         this.dialect = dialect6;
@@ -29707,8 +29789,8 @@ var init_session = __esm({
         );
       }
     };
-    __publicField(PgSession, _a160, "PgSession");
-    PgTransaction = class extends (_b113 = PgDatabase, _a161 = entityKind, _b113) {
+    __publicField(PgSession, _a164, "PgSession");
+    PgTransaction = class extends (_b117 = PgDatabase, _a165 = entityKind, _b117) {
       constructor(dialect6, session, schema5, nestedIndex = 0) {
         super(dialect6, session, schema5);
         this.schema = schema5;
@@ -29735,7 +29817,7 @@ var init_session = __esm({
         return this.session.execute(sql`set transaction ${this.getTransactionConfigSQL(config)}`);
       }
     };
-    __publicField(PgTransaction, _a161, "PgTransaction");
+    __publicField(PgTransaction, _a165, "PgTransaction");
   }
 });
 
@@ -31548,12 +31630,12 @@ var init_alias3 = __esm({
 });
 
 // ../drizzle-orm/dist/sqlite-core/checks.js
-var _a162, CheckBuilder2, _a163, Check2;
+var _a166, CheckBuilder2, _a167, Check2;
 var init_checks2 = __esm({
   "../drizzle-orm/dist/sqlite-core/checks.js"() {
     "use strict";
     init_entity();
-    _a162 = entityKind;
+    _a166 = entityKind;
     CheckBuilder2 = class {
       constructor(name2, value) {
         __publicField(this, "brand");
@@ -31564,8 +31646,8 @@ var init_checks2 = __esm({
         return new Check2(table6, this);
       }
     };
-    __publicField(CheckBuilder2, _a162, "SQLiteCheckBuilder");
-    _a163 = entityKind;
+    __publicField(CheckBuilder2, _a166, "SQLiteCheckBuilder");
+    _a167 = entityKind;
     Check2 = class {
       constructor(table6, builder) {
         __publicField(this, "name");
@@ -31575,18 +31657,18 @@ var init_checks2 = __esm({
         this.value = builder.value;
       }
     };
-    __publicField(Check2, _a163, "SQLiteCheck");
+    __publicField(Check2, _a167, "SQLiteCheck");
   }
 });
 
 // ../drizzle-orm/dist/sqlite-core/foreign-keys.js
-var _a164, ForeignKeyBuilder2, _a165, ForeignKey2;
+var _a168, ForeignKeyBuilder2, _a169, ForeignKey2;
 var init_foreign_keys2 = __esm({
   "../drizzle-orm/dist/sqlite-core/foreign-keys.js"() {
     "use strict";
     init_entity();
     init_table_utils();
-    _a164 = entityKind;
+    _a168 = entityKind;
     ForeignKeyBuilder2 = class {
       constructor(config, actions) {
         /** @internal */
@@ -31617,8 +31699,8 @@ var init_foreign_keys2 = __esm({
         return new ForeignKey2(table6, this);
       }
     };
-    __publicField(ForeignKeyBuilder2, _a164, "SQLiteForeignKeyBuilder");
-    _a165 = entityKind;
+    __publicField(ForeignKeyBuilder2, _a168, "SQLiteForeignKeyBuilder");
+    _a169 = entityKind;
     ForeignKey2 = class {
       constructor(table6, builder) {
         __publicField(this, "reference");
@@ -31642,7 +31724,7 @@ var init_foreign_keys2 = __esm({
         return name2 ?? `${chunks.join("_")}_fk`;
       }
     };
-    __publicField(ForeignKey2, _a165, "SQLiteForeignKey");
+    __publicField(ForeignKey2, _a169, "SQLiteForeignKey");
   }
 });
 
@@ -31650,13 +31732,13 @@ var init_foreign_keys2 = __esm({
 function uniqueKeyName2(table6, columns) {
   return `${table6[TableName]}_${columns.join("_")}_unique`;
 }
-var _a166, UniqueConstraintBuilder2, _a167, UniqueOnConstraintBuilder2, _a168, UniqueConstraint2;
+var _a170, UniqueConstraintBuilder2, _a171, UniqueOnConstraintBuilder2, _a172, UniqueConstraint2;
 var init_unique_constraint2 = __esm({
   "../drizzle-orm/dist/sqlite-core/unique-constraint.js"() {
     "use strict";
     init_entity();
     init_table_utils();
-    _a166 = entityKind;
+    _a170 = entityKind;
     UniqueConstraintBuilder2 = class {
       constructor(columns, name2) {
         /** @internal */
@@ -31669,8 +31751,8 @@ var init_unique_constraint2 = __esm({
         return new UniqueConstraint2(table6, this.columns, this.name);
       }
     };
-    __publicField(UniqueConstraintBuilder2, _a166, "SQLiteUniqueConstraintBuilder");
-    _a167 = entityKind;
+    __publicField(UniqueConstraintBuilder2, _a170, "SQLiteUniqueConstraintBuilder");
+    _a171 = entityKind;
     UniqueOnConstraintBuilder2 = class {
       constructor(name2) {
         /** @internal */
@@ -31681,8 +31763,8 @@ var init_unique_constraint2 = __esm({
         return new UniqueConstraintBuilder2(columns, this.name);
       }
     };
-    __publicField(UniqueOnConstraintBuilder2, _a167, "SQLiteUniqueOnConstraintBuilder");
-    _a168 = entityKind;
+    __publicField(UniqueOnConstraintBuilder2, _a171, "SQLiteUniqueOnConstraintBuilder");
+    _a172 = entityKind;
     UniqueConstraint2 = class {
       constructor(table6, columns, name2) {
         __publicField(this, "columns");
@@ -31695,12 +31777,12 @@ var init_unique_constraint2 = __esm({
         return this.name;
       }
     };
-    __publicField(UniqueConstraint2, _a168, "SQLiteUniqueConstraint");
+    __publicField(UniqueConstraint2, _a172, "SQLiteUniqueConstraint");
   }
 });
 
 // ../drizzle-orm/dist/sqlite-core/columns/common.js
-var _a169, _b114, SQLiteColumnBuilder, _a170, _b115, SQLiteColumn;
+var _a173, _b118, SQLiteColumnBuilder, _a174, _b119, SQLiteColumn;
 var init_common3 = __esm({
   "../drizzle-orm/dist/sqlite-core/columns/common.js"() {
     "use strict";
@@ -31709,7 +31791,7 @@ var init_common3 = __esm({
     init_entity();
     init_foreign_keys2();
     init_unique_constraint2();
-    SQLiteColumnBuilder = class extends (_b114 = ColumnBuilder, _a169 = entityKind, _b114) {
+    SQLiteColumnBuilder = class extends (_b118 = ColumnBuilder, _a173 = entityKind, _b118) {
       constructor() {
         super(...arguments);
         __publicField(this, "foreignKeyConfigs", []);
@@ -31750,8 +31832,8 @@ var init_common3 = __esm({
         });
       }
     };
-    __publicField(SQLiteColumnBuilder, _a169, "SQLiteColumnBuilder");
-    SQLiteColumn = class extends (_b115 = Column2, _a170 = entityKind, _b115) {
+    __publicField(SQLiteColumnBuilder, _a173, "SQLiteColumnBuilder");
+    SQLiteColumn = class extends (_b119 = Column2, _a174 = entityKind, _b119) {
       constructor(table6, config) {
         if (!config.uniqueName) {
           config.uniqueName = uniqueKeyName2(table6, [config.name]);
@@ -31760,7 +31842,7 @@ var init_common3 = __esm({
         this.table = table6;
       }
     };
-    __publicField(SQLiteColumn, _a170, "SQLiteColumn");
+    __publicField(SQLiteColumn, _a174, "SQLiteColumn");
   }
 });
 
@@ -31775,14 +31857,14 @@ function blob(a, b) {
   }
   return new SQLiteBlobBufferBuilder(name2);
 }
-var _a171, _b116, SQLiteBigIntBuilder, _a172, _b117, SQLiteBigInt, _a173, _b118, SQLiteBlobJsonBuilder, _a174, _b119, SQLiteBlobJson, _a175, _b120, SQLiteBlobBufferBuilder, _a176, _b121, SQLiteBlobBuffer;
+var _a175, _b120, SQLiteBigIntBuilder, _a176, _b121, SQLiteBigInt, _a177, _b122, SQLiteBlobJsonBuilder, _a178, _b123, SQLiteBlobJson, _a179, _b124, SQLiteBlobBufferBuilder, _a180, _b125, SQLiteBlobBuffer;
 var init_blob = __esm({
   "../drizzle-orm/dist/sqlite-core/columns/blob.js"() {
     "use strict";
     init_entity();
     init_utils2();
     init_common3();
-    SQLiteBigIntBuilder = class extends (_b116 = SQLiteColumnBuilder, _a171 = entityKind, _b116) {
+    SQLiteBigIntBuilder = class extends (_b120 = SQLiteColumnBuilder, _a175 = entityKind, _b120) {
       constructor(name2) {
         super(name2, "bigint", "SQLiteBigInt");
       }
@@ -31791,8 +31873,8 @@ var init_blob = __esm({
         return new SQLiteBigInt(table6, this.config);
       }
     };
-    __publicField(SQLiteBigIntBuilder, _a171, "SQLiteBigIntBuilder");
-    SQLiteBigInt = class extends (_b117 = SQLiteColumn, _a172 = entityKind, _b117) {
+    __publicField(SQLiteBigIntBuilder, _a175, "SQLiteBigIntBuilder");
+    SQLiteBigInt = class extends (_b121 = SQLiteColumn, _a176 = entityKind, _b121) {
       getSQLType() {
         return "blob";
       }
@@ -31810,8 +31892,8 @@ var init_blob = __esm({
         return Buffer.from(value.toString());
       }
     };
-    __publicField(SQLiteBigInt, _a172, "SQLiteBigInt");
-    SQLiteBlobJsonBuilder = class extends (_b118 = SQLiteColumnBuilder, _a173 = entityKind, _b118) {
+    __publicField(SQLiteBigInt, _a176, "SQLiteBigInt");
+    SQLiteBlobJsonBuilder = class extends (_b122 = SQLiteColumnBuilder, _a177 = entityKind, _b122) {
       constructor(name2) {
         super(name2, "json", "SQLiteBlobJson");
       }
@@ -31823,8 +31905,8 @@ var init_blob = __esm({
         );
       }
     };
-    __publicField(SQLiteBlobJsonBuilder, _a173, "SQLiteBlobJsonBuilder");
-    SQLiteBlobJson = class extends (_b119 = SQLiteColumn, _a174 = entityKind, _b119) {
+    __publicField(SQLiteBlobJsonBuilder, _a177, "SQLiteBlobJsonBuilder");
+    SQLiteBlobJson = class extends (_b123 = SQLiteColumn, _a178 = entityKind, _b123) {
       getSQLType() {
         return "blob";
       }
@@ -31842,8 +31924,8 @@ var init_blob = __esm({
         return Buffer.from(JSON.stringify(value));
       }
     };
-    __publicField(SQLiteBlobJson, _a174, "SQLiteBlobJson");
-    SQLiteBlobBufferBuilder = class extends (_b120 = SQLiteColumnBuilder, _a175 = entityKind, _b120) {
+    __publicField(SQLiteBlobJson, _a178, "SQLiteBlobJson");
+    SQLiteBlobBufferBuilder = class extends (_b124 = SQLiteColumnBuilder, _a179 = entityKind, _b124) {
       constructor(name2) {
         super(name2, "buffer", "SQLiteBlobBuffer");
       }
@@ -31852,13 +31934,19 @@ var init_blob = __esm({
         return new SQLiteBlobBuffer(table6, this.config);
       }
     };
-    __publicField(SQLiteBlobBufferBuilder, _a175, "SQLiteBlobBufferBuilder");
-    SQLiteBlobBuffer = class extends (_b121 = SQLiteColumn, _a176 = entityKind, _b121) {
+    __publicField(SQLiteBlobBufferBuilder, _a179, "SQLiteBlobBufferBuilder");
+    SQLiteBlobBuffer = class extends (_b125 = SQLiteColumn, _a180 = entityKind, _b125) {
+      mapFromDriverValue(value) {
+        if (Buffer.isBuffer(value)) {
+          return value;
+        }
+        return Buffer.from(value);
+      }
       getSQLType() {
         return "blob";
       }
     };
-    __publicField(SQLiteBlobBuffer, _a176, "SQLiteBlobBuffer");
+    __publicField(SQLiteBlobBuffer, _a180, "SQLiteBlobBuffer");
   }
 });
 
@@ -31873,14 +31961,14 @@ function customType2(customTypeParams) {
     );
   };
 }
-var _a177, _b122, SQLiteCustomColumnBuilder, _a178, _b123, SQLiteCustomColumn;
+var _a181, _b126, SQLiteCustomColumnBuilder, _a182, _b127, SQLiteCustomColumn;
 var init_custom2 = __esm({
   "../drizzle-orm/dist/sqlite-core/columns/custom.js"() {
     "use strict";
     init_entity();
     init_utils2();
     init_common3();
-    SQLiteCustomColumnBuilder = class extends (_b122 = SQLiteColumnBuilder, _a177 = entityKind, _b122) {
+    SQLiteCustomColumnBuilder = class extends (_b126 = SQLiteColumnBuilder, _a181 = entityKind, _b126) {
       constructor(name2, fieldConfig, customTypeParams) {
         super(name2, "custom", "SQLiteCustomColumn");
         this.config.fieldConfig = fieldConfig;
@@ -31894,8 +31982,8 @@ var init_custom2 = __esm({
         );
       }
     };
-    __publicField(SQLiteCustomColumnBuilder, _a177, "SQLiteCustomColumnBuilder");
-    SQLiteCustomColumn = class extends (_b123 = SQLiteColumn, _a178 = entityKind, _b123) {
+    __publicField(SQLiteCustomColumnBuilder, _a181, "SQLiteCustomColumnBuilder");
+    SQLiteCustomColumn = class extends (_b127 = SQLiteColumn, _a182 = entityKind, _b127) {
       constructor(table6, config) {
         super(table6, config);
         __publicField(this, "sqlName");
@@ -31915,7 +32003,7 @@ var init_custom2 = __esm({
         return typeof this.mapTo === "function" ? this.mapTo(value) : value;
       }
     };
-    __publicField(SQLiteCustomColumn, _a178, "SQLiteCustomColumn");
+    __publicField(SQLiteCustomColumn, _a182, "SQLiteCustomColumn");
   }
 });
 
@@ -31930,7 +32018,7 @@ function integer2(a, b) {
   }
   return new SQLiteIntegerBuilder(name2);
 }
-var _a179, _b124, SQLiteBaseIntegerBuilder, _a180, _b125, SQLiteBaseInteger, _a181, _b126, SQLiteIntegerBuilder, _a182, _b127, SQLiteInteger, _a183, _b128, SQLiteTimestampBuilder, _a184, _b129, SQLiteTimestamp, _a185, _b130, SQLiteBooleanBuilder, _a186, _b131, SQLiteBoolean;
+var _a183, _b128, SQLiteBaseIntegerBuilder, _a184, _b129, SQLiteBaseInteger, _a185, _b130, SQLiteIntegerBuilder, _a186, _b131, SQLiteInteger, _a187, _b132, SQLiteTimestampBuilder, _a188, _b133, SQLiteTimestamp, _a189, _b134, SQLiteBooleanBuilder, _a190, _b135, SQLiteBoolean;
 var init_integer2 = __esm({
   "../drizzle-orm/dist/sqlite-core/columns/integer.js"() {
     "use strict";
@@ -31938,7 +32026,7 @@ var init_integer2 = __esm({
     init_sql();
     init_utils2();
     init_common3();
-    SQLiteBaseIntegerBuilder = class extends (_b124 = SQLiteColumnBuilder, _a179 = entityKind, _b124) {
+    SQLiteBaseIntegerBuilder = class extends (_b128 = SQLiteColumnBuilder, _a183 = entityKind, _b128) {
       constructor(name2, dataType, columnType) {
         super(name2, dataType, columnType);
         this.config.autoIncrement = false;
@@ -31951,8 +32039,8 @@ var init_integer2 = __esm({
         return super.primaryKey();
       }
     };
-    __publicField(SQLiteBaseIntegerBuilder, _a179, "SQLiteBaseIntegerBuilder");
-    SQLiteBaseInteger = class extends (_b125 = SQLiteColumn, _a180 = entityKind, _b125) {
+    __publicField(SQLiteBaseIntegerBuilder, _a183, "SQLiteBaseIntegerBuilder");
+    SQLiteBaseInteger = class extends (_b129 = SQLiteColumn, _a184 = entityKind, _b129) {
       constructor() {
         super(...arguments);
         __publicField(this, "autoIncrement", this.config.autoIncrement);
@@ -31961,8 +32049,8 @@ var init_integer2 = __esm({
         return "integer";
       }
     };
-    __publicField(SQLiteBaseInteger, _a180, "SQLiteBaseInteger");
-    SQLiteIntegerBuilder = class extends (_b126 = SQLiteBaseIntegerBuilder, _a181 = entityKind, _b126) {
+    __publicField(SQLiteBaseInteger, _a184, "SQLiteBaseInteger");
+    SQLiteIntegerBuilder = class extends (_b130 = SQLiteBaseIntegerBuilder, _a185 = entityKind, _b130) {
       constructor(name2) {
         super(name2, "number", "SQLiteInteger");
       }
@@ -31973,11 +32061,11 @@ var init_integer2 = __esm({
         );
       }
     };
-    __publicField(SQLiteIntegerBuilder, _a181, "SQLiteIntegerBuilder");
-    SQLiteInteger = class extends (_b127 = SQLiteBaseInteger, _a182 = entityKind, _b127) {
+    __publicField(SQLiteIntegerBuilder, _a185, "SQLiteIntegerBuilder");
+    SQLiteInteger = class extends (_b131 = SQLiteBaseInteger, _a186 = entityKind, _b131) {
     };
-    __publicField(SQLiteInteger, _a182, "SQLiteInteger");
-    SQLiteTimestampBuilder = class extends (_b128 = SQLiteBaseIntegerBuilder, _a183 = entityKind, _b128) {
+    __publicField(SQLiteInteger, _a186, "SQLiteInteger");
+    SQLiteTimestampBuilder = class extends (_b132 = SQLiteBaseIntegerBuilder, _a187 = entityKind, _b132) {
       constructor(name2, mode) {
         super(name2, "date", "SQLiteTimestamp");
         this.config.mode = mode;
@@ -31997,8 +32085,8 @@ var init_integer2 = __esm({
         );
       }
     };
-    __publicField(SQLiteTimestampBuilder, _a183, "SQLiteTimestampBuilder");
-    SQLiteTimestamp = class extends (_b129 = SQLiteBaseInteger, _a184 = entityKind, _b129) {
+    __publicField(SQLiteTimestampBuilder, _a187, "SQLiteTimestampBuilder");
+    SQLiteTimestamp = class extends (_b133 = SQLiteBaseInteger, _a188 = entityKind, _b133) {
       constructor() {
         super(...arguments);
         __publicField(this, "mode", this.config.mode);
@@ -32017,8 +32105,8 @@ var init_integer2 = __esm({
         return unix;
       }
     };
-    __publicField(SQLiteTimestamp, _a184, "SQLiteTimestamp");
-    SQLiteBooleanBuilder = class extends (_b130 = SQLiteBaseIntegerBuilder, _a185 = entityKind, _b130) {
+    __publicField(SQLiteTimestamp, _a188, "SQLiteTimestamp");
+    SQLiteBooleanBuilder = class extends (_b134 = SQLiteBaseIntegerBuilder, _a189 = entityKind, _b134) {
       constructor(name2, mode) {
         super(name2, "boolean", "SQLiteBoolean");
         this.config.mode = mode;
@@ -32030,8 +32118,8 @@ var init_integer2 = __esm({
         );
       }
     };
-    __publicField(SQLiteBooleanBuilder, _a185, "SQLiteBooleanBuilder");
-    SQLiteBoolean = class extends (_b131 = SQLiteBaseInteger, _a186 = entityKind, _b131) {
+    __publicField(SQLiteBooleanBuilder, _a189, "SQLiteBooleanBuilder");
+    SQLiteBoolean = class extends (_b135 = SQLiteBaseInteger, _a190 = entityKind, _b135) {
       constructor() {
         super(...arguments);
         __publicField(this, "mode", this.config.mode);
@@ -32043,21 +32131,24 @@ var init_integer2 = __esm({
         return value ? 1 : 0;
       }
     };
-    __publicField(SQLiteBoolean, _a186, "SQLiteBoolean");
+    __publicField(SQLiteBoolean, _a190, "SQLiteBoolean");
   }
 });
 
 // ../drizzle-orm/dist/sqlite-core/columns/numeric.js
-function numeric2(name2) {
-  return new SQLiteNumericBuilder(name2 ?? "");
+function numeric2(a, b) {
+  const { name: name2, config } = getColumnNameAndConfig(a, b);
+  const mode = config?.mode;
+  return mode === "number" ? new SQLiteNumericNumberBuilder(name2) : mode === "bigint" ? new SQLiteNumericBigIntBuilder(name2) : new SQLiteNumericBuilder(name2);
 }
-var _a187, _b132, SQLiteNumericBuilder, _a188, _b133, SQLiteNumeric;
+var _a191, _b136, SQLiteNumericBuilder, _a192, _b137, SQLiteNumeric, _a193, _b138, SQLiteNumericNumberBuilder, _a194, _b139, SQLiteNumericNumber, _a195, _b140, SQLiteNumericBigIntBuilder, _a196, _b141, SQLiteNumericBigInt;
 var init_numeric2 = __esm({
   "../drizzle-orm/dist/sqlite-core/columns/numeric.js"() {
     "use strict";
     init_entity();
+    init_utils2();
     init_common3();
-    SQLiteNumericBuilder = class extends (_b132 = SQLiteColumnBuilder, _a187 = entityKind, _b132) {
+    SQLiteNumericBuilder = class extends (_b136 = SQLiteColumnBuilder, _a191 = entityKind, _b136) {
       constructor(name2) {
         super(name2, "string", "SQLiteNumeric");
       }
@@ -32069,13 +32160,70 @@ var init_numeric2 = __esm({
         );
       }
     };
-    __publicField(SQLiteNumericBuilder, _a187, "SQLiteNumericBuilder");
-    SQLiteNumeric = class extends (_b133 = SQLiteColumn, _a188 = entityKind, _b133) {
+    __publicField(SQLiteNumericBuilder, _a191, "SQLiteNumericBuilder");
+    SQLiteNumeric = class extends (_b137 = SQLiteColumn, _a192 = entityKind, _b137) {
+      mapFromDriverValue(value) {
+        if (typeof value === "string")
+          return value;
+        return String(value);
+      }
+      getSQLType() {
+        return "numeric";
+      }
+    };
+    __publicField(SQLiteNumeric, _a192, "SQLiteNumeric");
+    SQLiteNumericNumberBuilder = class extends (_b138 = SQLiteColumnBuilder, _a193 = entityKind, _b138) {
+      constructor(name2) {
+        super(name2, "number", "SQLiteNumericNumber");
+      }
+      /** @internal */
+      build(table6) {
+        return new SQLiteNumericNumber(
+          table6,
+          this.config
+        );
+      }
+    };
+    __publicField(SQLiteNumericNumberBuilder, _a193, "SQLiteNumericNumberBuilder");
+    SQLiteNumericNumber = class extends (_b139 = SQLiteColumn, _a194 = entityKind, _b139) {
+      constructor() {
+        super(...arguments);
+        __publicField(this, "mapToDriverValue", String);
+      }
+      mapFromDriverValue(value) {
+        if (typeof value === "number")
+          return value;
+        return Number(value);
+      }
       getSQLType() {
         return "numeric";
       }
     };
-    __publicField(SQLiteNumeric, _a188, "SQLiteNumeric");
+    __publicField(SQLiteNumericNumber, _a194, "SQLiteNumericNumber");
+    SQLiteNumericBigIntBuilder = class extends (_b140 = SQLiteColumnBuilder, _a195 = entityKind, _b140) {
+      constructor(name2) {
+        super(name2, "bigint", "SQLiteNumericBigInt");
+      }
+      /** @internal */
+      build(table6) {
+        return new SQLiteNumericBigInt(
+          table6,
+          this.config
+        );
+      }
+    };
+    __publicField(SQLiteNumericBigIntBuilder, _a195, "SQLiteNumericBigIntBuilder");
+    SQLiteNumericBigInt = class extends (_b141 = SQLiteColumn, _a196 = entityKind, _b141) {
+      constructor() {
+        super(...arguments);
+        __publicField(this, "mapFromDriverValue", BigInt);
+        __publicField(this, "mapToDriverValue", String);
+      }
+      getSQLType() {
+        return "numeric";
+      }
+    };
+    __publicField(SQLiteNumericBigInt, _a196, "SQLiteNumericBigInt");
   }
 });
 
@@ -32083,13 +32231,13 @@ var init_numeric2 = __esm({
 function real2(name2) {
   return new SQLiteRealBuilder(name2 ?? "");
 }
-var _a189, _b134, SQLiteRealBuilder, _a190, _b135, SQLiteReal;
+var _a197, _b142, SQLiteRealBuilder, _a198, _b143, SQLiteReal;
 var init_real2 = __esm({
   "../drizzle-orm/dist/sqlite-core/columns/real.js"() {
     "use strict";
     init_entity();
     init_common3();
-    SQLiteRealBuilder = class extends (_b134 = SQLiteColumnBuilder, _a189 = entityKind, _b134) {
+    SQLiteRealBuilder = class extends (_b142 = SQLiteColumnBuilder, _a197 = entityKind, _b142) {
       constructor(name2) {
         super(name2, "number", "SQLiteReal");
       }
@@ -32098,13 +32246,13 @@ var init_real2 = __esm({
         return new SQLiteReal(table6, this.config);
       }
     };
-    __publicField(SQLiteRealBuilder, _a189, "SQLiteRealBuilder");
-    SQLiteReal = class extends (_b135 = SQLiteColumn, _a190 = entityKind, _b135) {
+    __publicField(SQLiteRealBuilder, _a197, "SQLiteRealBuilder");
+    SQLiteReal = class extends (_b143 = SQLiteColumn, _a198 = entityKind, _b143) {
       getSQLType() {
         return "real";
       }
     };
-    __publicField(SQLiteReal, _a190, "SQLiteReal");
+    __publicField(SQLiteReal, _a198, "SQLiteReal");
   }
 });
 
@@ -32116,14 +32264,14 @@ function text2(a, b = {}) {
   }
   return new SQLiteTextBuilder(name2, config);
 }
-var _a191, _b136, SQLiteTextBuilder, _a192, _b137, SQLiteText, _a193, _b138, SQLiteTextJsonBuilder, _a194, _b139, SQLiteTextJson;
+var _a199, _b144, SQLiteTextBuilder, _a200, _b145, SQLiteText, _a201, _b146, SQLiteTextJsonBuilder, _a202, _b147, SQLiteTextJson;
 var init_text2 = __esm({
   "../drizzle-orm/dist/sqlite-core/columns/text.js"() {
     "use strict";
     init_entity();
     init_utils2();
     init_common3();
-    SQLiteTextBuilder = class extends (_b136 = SQLiteColumnBuilder, _a191 = entityKind, _b136) {
+    SQLiteTextBuilder = class extends (_b144 = SQLiteColumnBuilder, _a199 = entityKind, _b144) {
       constructor(name2, config) {
         super(name2, "string", "SQLiteText");
         this.config.enumValues = config.enum;
@@ -32137,8 +32285,8 @@ var init_text2 = __esm({
         );
       }
     };
-    __publicField(SQLiteTextBuilder, _a191, "SQLiteTextBuilder");
-    SQLiteText = class extends (_b137 = SQLiteColumn, _a192 = entityKind, _b137) {
+    __publicField(SQLiteTextBuilder, _a199, "SQLiteTextBuilder");
+    SQLiteText = class extends (_b145 = SQLiteColumn, _a200 = entityKind, _b145) {
       constructor(table6, config) {
         super(table6, config);
         __publicField(this, "enumValues", this.config.enumValues);
@@ -32148,8 +32296,8 @@ var init_text2 = __esm({
         return `text${this.config.length ? `(${this.config.length})` : ""}`;
       }
     };
-    __publicField(SQLiteText, _a192, "SQLiteText");
-    SQLiteTextJsonBuilder = class extends (_b138 = SQLiteColumnBuilder, _a193 = entityKind, _b138) {
+    __publicField(SQLiteText, _a200, "SQLiteText");
+    SQLiteTextJsonBuilder = class extends (_b146 = SQLiteColumnBuilder, _a201 = entityKind, _b146) {
       constructor(name2) {
         super(name2, "json", "SQLiteTextJson");
       }
@@ -32161,8 +32309,8 @@ var init_text2 = __esm({
         );
       }
     };
-    __publicField(SQLiteTextJsonBuilder, _a193, "SQLiteTextJsonBuilder");
-    SQLiteTextJson = class extends (_b139 = SQLiteColumn, _a194 = entityKind, _b139) {
+    __publicField(SQLiteTextJsonBuilder, _a201, "SQLiteTextJsonBuilder");
+    SQLiteTextJson = class extends (_b147 = SQLiteColumn, _a202 = entityKind, _b147) {
       getSQLType() {
         return "text";
       }
@@ -32173,7 +32321,7 @@ var init_text2 = __esm({
         return JSON.stringify(value);
       }
     };
-    __publicField(SQLiteTextJson, _a194, "SQLiteTextJson");
+    __publicField(SQLiteTextJson, _a202, "SQLiteTextJson");
   }
 });
 
@@ -32235,7 +32383,7 @@ function sqliteTableBase(name2, columns, extraConfig, schema5, baseName = name2)
   }
   return table6;
 }
-var InlineForeignKeys2, _a195, _b140, _c7, _d3, _e3, SQLiteTable, sqliteTable;
+var InlineForeignKeys2, _a203, _b148, _c7, _d3, _e3, SQLiteTable, sqliteTable;
 var init_table3 = __esm({
   "../drizzle-orm/dist/sqlite-core/table.js"() {
     "use strict";
@@ -32243,15 +32391,15 @@ var init_table3 = __esm({
     init_table();
     init_all2();
     InlineForeignKeys2 = Symbol.for("drizzle:SQLiteInlineForeignKeys");
-    SQLiteTable = class extends (_e3 = Table2, _d3 = entityKind, _c7 = Table2.Symbol.Columns, _b140 = InlineForeignKeys2, _a195 = Table2.Symbol.ExtraConfigBuilder, _e3) {
+    SQLiteTable = class extends (_e3 = Table2, _d3 = entityKind, _c7 = Table2.Symbol.Columns, _b148 = InlineForeignKeys2, _a203 = Table2.Symbol.ExtraConfigBuilder, _e3) {
       constructor() {
         super(...arguments);
         /** @internal */
         __publicField(this, _c7);
         /** @internal */
-        __publicField(this, _b140, []);
+        __publicField(this, _b148, []);
         /** @internal */
-        __publicField(this, _a195);
+        __publicField(this, _a203);
       }
     };
     __publicField(SQLiteTable, _d3, "SQLiteTable");
@@ -32266,7 +32414,7 @@ var init_table3 = __esm({
 });
 
 // ../drizzle-orm/dist/sqlite-core/query-builders/delete.js
-var _a196, _b141, SQLiteDeleteBase;
+var _a204, _b149, SQLiteDeleteBase;
 var init_delete2 = __esm({
   "../drizzle-orm/dist/sqlite-core/query-builders/delete.js"() {
     "use strict";
@@ -32276,7 +32424,7 @@ var init_delete2 = __esm({
     init_table3();
     init_table();
     init_utils2();
-    SQLiteDeleteBase = class extends (_b141 = QueryPromise, _a196 = entityKind, _b141) {
+    SQLiteDeleteBase = class extends (_b149 = QueryPromise, _a204 = entityKind, _b149) {
       constructor(table6, session, dialect6, withList) {
         super();
         /** @internal */
@@ -32382,25 +32530,25 @@ var init_delete2 = __esm({
         return this;
       }
     };
-    __publicField(SQLiteDeleteBase, _a196, "SQLiteDelete");
+    __publicField(SQLiteDeleteBase, _a204, "SQLiteDelete");
   }
 });
 
 // ../drizzle-orm/dist/sqlite-core/view-base.js
-var _a197, _b142, SQLiteViewBase;
+var _a205, _b150, SQLiteViewBase;
 var init_view_base2 = __esm({
   "../drizzle-orm/dist/sqlite-core/view-base.js"() {
     "use strict";
     init_entity();
     init_sql();
-    SQLiteViewBase = class extends (_b142 = View3, _a197 = entityKind, _b142) {
+    SQLiteViewBase = class extends (_b150 = View3, _a205 = entityKind, _b150) {
     };
-    __publicField(SQLiteViewBase, _a197, "SQLiteViewBase");
+    __publicField(SQLiteViewBase, _a205, "SQLiteViewBase");
   }
 });
 
 // ../drizzle-orm/dist/sqlite-core/dialect.js
-var _a198, SQLiteDialect, _a199, _b143, SQLiteSyncDialect, _a200, _b144, SQLiteAsyncDialect;
+var _a206, SQLiteDialect, _a207, _b151, SQLiteSyncDialect, _a208, _b152, SQLiteAsyncDialect;
 var init_dialect2 = __esm({
   "../drizzle-orm/dist/sqlite-core/dialect.js"() {
     "use strict";
@@ -32419,7 +32567,7 @@ var init_dialect2 = __esm({
     init_utils2();
     init_view_common();
     init_view_base2();
-    _a198 = entityKind;
+    _a206 = entityKind;
     SQLiteDialect = class {
       constructor(config) {
         /** @internal */
@@ -32521,10 +32669,20 @@ var init_dialect2 = __esm({
             }
           } else if (is(field, Column2)) {
             const tableName = field.table[Table2.Symbol.Name];
-            if (isSingleTable) {
-              chunk.push(sql.identifier(this.casing.getColumnCasing(field)));
+            if (field.columnType === "SQLiteNumericBigInt") {
+              if (isSingleTable) {
+                chunk.push(sql`cast(${sql.identifier(this.casing.getColumnCasing(field))} as text)`);
+              } else {
+                chunk.push(
+                  sql`cast(${sql.identifier(tableName)}.${sql.identifier(this.casing.getColumnCasing(field))} as text)`
+                );
+              }
             } else {
-              chunk.push(sql`${sql.identifier(tableName)}.${sql.identifier(this.casing.getColumnCasing(field))}`);
+              if (isSingleTable) {
+                chunk.push(sql.identifier(this.casing.getColumnCasing(field)));
+              } else {
+                chunk.push(sql`${sql.identifier(tableName)}.${sql.identifier(this.casing.getColumnCasing(field))}`);
+              }
             }
           }
           if (i < columnsLen - 1) {
@@ -32581,8 +32739,8 @@ var init_dialect2 = __esm({
         return orderByList.length > 0 ? sql` order by ${sql.join(orderByList)}` : void 0;
       }
       buildFromTable(table6) {
-        if (is(table6, Table2) && table6[Table2.Symbol.OriginalName] !== table6[Table2.Symbol.Name]) {
-          return sql`${sql.identifier(table6[Table2.Symbol.OriginalName])} ${sql.identifier(table6[Table2.Symbol.Name])}`;
+        if (is(table6, Table2) && table6[Table2.Symbol.IsAlias]) {
+          return sql`${sql`${sql.identifier(table6[Table2.Symbol.Schema] ?? "")}.`.if(table6[Table2.Symbol.Schema])}${sql.identifier(table6[Table2.Symbol.OriginalName])} ${sql.identifier(table6[Table2.Symbol.Name])}`;
         }
         return table6;
       }
@@ -32961,8 +33119,8 @@ var init_dialect2 = __esm({
         };
       }
     };
-    __publicField(SQLiteDialect, _a198, "SQLiteDialect");
-    SQLiteSyncDialect = class extends (_b143 = SQLiteDialect, _a199 = entityKind, _b143) {
+    __publicField(SQLiteDialect, _a206, "SQLiteDialect");
+    SQLiteSyncDialect = class extends (_b151 = SQLiteDialect, _a207 = entityKind, _b151) {
       migrate(migrations, session, config) {
         const migrationsTable = config === void 0 ? "__drizzle_migrations" : typeof config === "string" ? "__drizzle_migrations" : config.migrationsTable ?? "__drizzle_migrations";
         const migrationTableCreate = sql`
@@ -32996,8 +33154,8 @@ var init_dialect2 = __esm({
         }
       }
     };
-    __publicField(SQLiteSyncDialect, _a199, "SQLiteSyncDialect");
-    SQLiteAsyncDialect = class extends (_b144 = SQLiteDialect, _a200 = entityKind, _b144) {
+    __publicField(SQLiteSyncDialect, _a207, "SQLiteSyncDialect");
+    SQLiteAsyncDialect = class extends (_b152 = SQLiteDialect, _a208 = entityKind, _b152) {
       async migrate(migrations, session, config) {
         const migrationsTable = config === void 0 ? "__drizzle_migrations" : typeof config === "string" ? "__drizzle_migrations" : config.migrationsTable ?? "__drizzle_migrations";
         const migrationTableCreate = sql`
@@ -33026,7 +33184,7 @@ var init_dialect2 = __esm({
         });
       }
     };
-    __publicField(SQLiteAsyncDialect, _a200, "SQLiteAsyncDialect");
+    __publicField(SQLiteAsyncDialect, _a208, "SQLiteAsyncDialect");
   }
 });
 
@@ -33048,7 +33206,7 @@ function createSetOperator2(type, isAll) {
     return leftSelect.addSetOperators(setOperators);
   };
 }
-var _a201, SQLiteSelectBuilder, _a202, _b145, SQLiteSelectQueryBuilderBase, _a203, _b146, SQLiteSelectBase, getSQLiteSetOperators, union3, unionAll2, intersect2, except2;
+var _a209, SQLiteSelectBuilder, _a210, _b153, SQLiteSelectQueryBuilderBase, _a211, _b154, SQLiteSelectBase, getSQLiteSetOperators, union3, unionAll2, intersect2, except2;
 var init_select3 = __esm({
   "../drizzle-orm/dist/sqlite-core/query-builders/select.js"() {
     "use strict";
@@ -33062,7 +33220,7 @@ var init_select3 = __esm({
     init_utils2();
     init_view_common();
     init_view_base2();
-    _a201 = entityKind;
+    _a209 = entityKind;
     SQLiteSelectBuilder = class {
       constructor(config) {
         __publicField(this, "fields");
@@ -33103,8 +33261,8 @@ var init_select3 = __esm({
         });
       }
     };
-    __publicField(SQLiteSelectBuilder, _a201, "SQLiteSelectBuilder");
-    SQLiteSelectQueryBuilderBase = class extends (_b145 = TypedQueryBuilder, _a202 = entityKind, _b145) {
+    __publicField(SQLiteSelectBuilder, _a209, "SQLiteSelectBuilder");
+    SQLiteSelectQueryBuilderBase = class extends (_b153 = TypedQueryBuilder, _a210 = entityKind, _b153) {
       constructor({ table: table6, fields, isPartialSelect, session, dialect: dialect6, withList, distinct }) {
         super();
         __publicField(this, "_");
@@ -33351,7 +33509,7 @@ var init_select3 = __esm({
         return (table6, on) => {
           const baseTableName = this.tableName;
           const tableName = getTableLikeName(table6);
-          if (typeof tableName === "string" && this.config.joins?.some((join) => join.alias === tableName)) {
+          if (typeof tableName === "string" && this.config.joins?.some((join2) => join2.alias === tableName)) {
             throw new Error(`Alias "${tableName}" is already used in this query`);
           }
           if (!this.isPartialSelect) {
@@ -33609,8 +33767,8 @@ var init_select3 = __esm({
         return this;
       }
     };
-    __publicField(SQLiteSelectQueryBuilderBase, _a202, "SQLiteSelectQueryBuilder");
-    SQLiteSelectBase = class extends (_b146 = SQLiteSelectQueryBuilderBase, _a203 = entityKind, _b146) {
+    __publicField(SQLiteSelectQueryBuilderBase, _a210, "SQLiteSelectQueryBuilder");
+    SQLiteSelectBase = class extends (_b154 = SQLiteSelectQueryBuilderBase, _a211 = entityKind, _b154) {
       constructor() {
         super(...arguments);
         __publicField(this, "run", (placeholderValues) => {
@@ -33648,7 +33806,7 @@ var init_select3 = __esm({
         return this.all();
       }
     };
-    __publicField(SQLiteSelectBase, _a203, "SQLiteSelect");
+    __publicField(SQLiteSelectBase, _a211, "SQLiteSelect");
     applyMixins(SQLiteSelectBase, [QueryPromise]);
     getSQLiteSetOperators = () => ({
       union: union3,
@@ -33664,7 +33822,7 @@ var init_select3 = __esm({
 });
 
 // ../drizzle-orm/dist/sqlite-core/query-builders/query-builder.js
-var _a204, QueryBuilder2;
+var _a212, QueryBuilder2;
 var init_query_builder3 = __esm({
   "../drizzle-orm/dist/sqlite-core/query-builders/query-builder.js"() {
     "use strict";
@@ -33673,7 +33831,7 @@ var init_query_builder3 = __esm({
     init_dialect2();
     init_subquery();
     init_select3();
-    _a204 = entityKind;
+    _a212 = entityKind;
     QueryBuilder2 = class {
       constructor(dialect6) {
         __publicField(this, "dialect");
@@ -33739,12 +33897,12 @@ var init_query_builder3 = __esm({
         return this.dialect;
       }
     };
-    __publicField(QueryBuilder2, _a204, "SQLiteQueryBuilder");
+    __publicField(QueryBuilder2, _a212, "SQLiteQueryBuilder");
   }
 });
 
 // ../drizzle-orm/dist/sqlite-core/query-builders/insert.js
-var _a205, SQLiteInsertBuilder, _a206, _b147, SQLiteInsertBase;
+var _a213, SQLiteInsertBuilder, _a214, _b155, SQLiteInsertBase;
 var init_insert2 = __esm({
   "../drizzle-orm/dist/sqlite-core/query-builders/insert.js"() {
     "use strict";
@@ -33755,7 +33913,7 @@ var init_insert2 = __esm({
     init_table();
     init_utils2();
     init_query_builder3();
-    _a205 = entityKind;
+    _a213 = entityKind;
     SQLiteInsertBuilder = class {
       constructor(table6, session, dialect6, withList) {
         this.table = table6;
@@ -33789,8 +33947,8 @@ var init_insert2 = __esm({
         return new SQLiteInsertBase(this.table, select, this.session, this.dialect, this.withList, true);
       }
     };
-    __publicField(SQLiteInsertBuilder, _a205, "SQLiteInsertBuilder");
-    SQLiteInsertBase = class extends (_b147 = QueryPromise, _a206 = entityKind, _b147) {
+    __publicField(SQLiteInsertBuilder, _a213, "SQLiteInsertBuilder");
+    SQLiteInsertBase = class extends (_b155 = QueryPromise, _a214 = entityKind, _b155) {
       constructor(table6, values, session, dialect6, withList, select) {
         super();
         /** @internal */
@@ -33923,7 +34081,7 @@ var init_insert2 = __esm({
         return this;
       }
     };
-    __publicField(SQLiteInsertBase, _a206, "SQLiteInsert");
+    __publicField(SQLiteInsertBase, _a214, "SQLiteInsert");
   }
 });
 
@@ -33935,7 +34093,7 @@ var init_select_types2 = __esm({
 });
 
 // ../drizzle-orm/dist/sqlite-core/query-builders/update.js
-var _a207, SQLiteUpdateBuilder, _a208, _b148, SQLiteUpdateBase;
+var _a215, SQLiteUpdateBuilder, _a216, _b156, SQLiteUpdateBase;
 var init_update2 = __esm({
   "../drizzle-orm/dist/sqlite-core/query-builders/update.js"() {
     "use strict";
@@ -33948,7 +34106,7 @@ var init_update2 = __esm({
     init_utils2();
     init_view_common();
     init_view_base2();
-    _a207 = entityKind;
+    _a215 = entityKind;
     SQLiteUpdateBuilder = class {
       constructor(table6, session, dialect6, withList) {
         this.table = table6;
@@ -33966,8 +34124,8 @@ var init_update2 = __esm({
         );
       }
     };
-    __publicField(SQLiteUpdateBuilder, _a207, "SQLiteUpdateBuilder");
-    SQLiteUpdateBase = class extends (_b148 = QueryPromise, _a208 = entityKind, _b148) {
+    __publicField(SQLiteUpdateBuilder, _a215, "SQLiteUpdateBuilder");
+    SQLiteUpdateBase = class extends (_b156 = QueryPromise, _a216 = entityKind, _b156) {
       constructor(table6, set, session, dialect6, withList) {
         super();
         /** @internal */
@@ -33999,7 +34157,7 @@ var init_update2 = __esm({
       createJoin(joinType) {
         return (table6, on) => {
           const tableName = getTableLikeName(table6);
-          if (typeof tableName === "string" && this.config.joins.some((join) => join.alias === tableName)) {
+          if (typeof tableName === "string" && this.config.joins.some((join2) => join2.alias === tableName)) {
             throw new Error(`Alias "${tableName}" is already used in this query`);
           }
           if (typeof on === "function") {
@@ -34107,7 +34265,7 @@ var init_update2 = __esm({
         return this;
       }
     };
-    __publicField(SQLiteUpdateBase, _a208, "SQLiteUpdate");
+    __publicField(SQLiteUpdateBase, _a216, "SQLiteUpdate");
   }
 });
 
@@ -34125,17 +34283,17 @@ var init_query_builders2 = __esm({
 });
 
 // ../drizzle-orm/dist/sqlite-core/query-builders/count.js
-var _a209, _b149, _c8, _SQLiteCountBuilder, SQLiteCountBuilder;
+var _a217, _b157, _c8, _SQLiteCountBuilder, SQLiteCountBuilder;
 var init_count2 = __esm({
   "../drizzle-orm/dist/sqlite-core/query-builders/count.js"() {
     "use strict";
     init_entity();
     init_sql();
-    _SQLiteCountBuilder = class _SQLiteCountBuilder extends (_c8 = SQL, _b149 = entityKind, _a209 = Symbol.toStringTag, _c8) {
+    _SQLiteCountBuilder = class _SQLiteCountBuilder extends (_c8 = SQL, _b157 = entityKind, _a217 = Symbol.toStringTag, _c8) {
       constructor(params) {
         super(_SQLiteCountBuilder.buildEmbeddedCount(params.source, params.filters).queryChunks);
         __publicField(this, "sql");
-        __publicField(this, _a209, "SQLiteCountBuilderAsync");
+        __publicField(this, _a217, "SQLiteCountBuilderAsync");
         __publicField(this, "session");
         this.params = params;
         this.session = params.session;
@@ -34172,20 +34330,20 @@ var init_count2 = __esm({
         );
       }
     };
-    __publicField(_SQLiteCountBuilder, _b149, "SQLiteCountBuilderAsync");
+    __publicField(_SQLiteCountBuilder, _b157, "SQLiteCountBuilderAsync");
     SQLiteCountBuilder = _SQLiteCountBuilder;
   }
 });
 
 // ../drizzle-orm/dist/sqlite-core/query-builders/query.js
-var _a210, RelationalQueryBuilder2, _a211, _b150, SQLiteRelationalQuery, _a212, _b151, SQLiteSyncRelationalQuery;
+var _a218, RelationalQueryBuilder2, _a219, _b158, SQLiteRelationalQuery, _a220, _b159, SQLiteSyncRelationalQuery;
 var init_query2 = __esm({
   "../drizzle-orm/dist/sqlite-core/query-builders/query.js"() {
     "use strict";
     init_entity();
     init_query_promise();
     init_relations();
-    _a210 = entityKind;
+    _a218 = entityKind;
     RelationalQueryBuilder2 = class {
       constructor(mode, fullSchema, schema5, tableNamesMap, table6, tableConfig, dialect6, session) {
         this.mode = mode;
@@ -34244,8 +34402,8 @@ var init_query2 = __esm({
         );
       }
     };
-    __publicField(RelationalQueryBuilder2, _a210, "SQLiteAsyncRelationalQueryBuilder");
-    SQLiteRelationalQuery = class extends (_b150 = QueryPromise, _a211 = entityKind, _b150) {
+    __publicField(RelationalQueryBuilder2, _a218, "SQLiteAsyncRelationalQueryBuilder");
+    SQLiteRelationalQuery = class extends (_b158 = QueryPromise, _a219 = entityKind, _b158) {
       constructor(fullSchema, schema5, tableNamesMap, table6, tableConfig, dialect6, session, config, mode) {
         super();
         /** @internal */
@@ -34321,24 +34479,24 @@ var init_query2 = __esm({
         return this.executeRaw();
       }
     };
-    __publicField(SQLiteRelationalQuery, _a211, "SQLiteAsyncRelationalQuery");
-    SQLiteSyncRelationalQuery = class extends (_b151 = SQLiteRelationalQuery, _a212 = entityKind, _b151) {
+    __publicField(SQLiteRelationalQuery, _a219, "SQLiteAsyncRelationalQuery");
+    SQLiteSyncRelationalQuery = class extends (_b159 = SQLiteRelationalQuery, _a220 = entityKind, _b159) {
       sync() {
         return this.executeRaw();
       }
     };
-    __publicField(SQLiteSyncRelationalQuery, _a212, "SQLiteSyncRelationalQuery");
+    __publicField(SQLiteSyncRelationalQuery, _a220, "SQLiteSyncRelationalQuery");
   }
 });
 
 // ../drizzle-orm/dist/sqlite-core/query-builders/raw.js
-var _a213, _b152, SQLiteRaw;
+var _a221, _b160, SQLiteRaw;
 var init_raw2 = __esm({
   "../drizzle-orm/dist/sqlite-core/query-builders/raw.js"() {
     "use strict";
     init_entity();
     init_query_promise();
-    SQLiteRaw = class extends (_b152 = QueryPromise, _a213 = entityKind, _b152) {
+    SQLiteRaw = class extends (_b160 = QueryPromise, _a221 = entityKind, _b160) {
       constructor(execute, getSQL, action, dialect6, mapBatchResult) {
         super();
         /** @internal */
@@ -34363,12 +34521,12 @@ var init_raw2 = __esm({
         return false;
       }
     };
-    __publicField(SQLiteRaw, _a213, "SQLiteRaw");
+    __publicField(SQLiteRaw, _a221, "SQLiteRaw");
   }
 });
 
 // ../drizzle-orm/dist/sqlite-core/db.js
-var _a214, BaseSQLiteDatabase;
+var _a222, BaseSQLiteDatabase;
 var init_db2 = __esm({
   "../drizzle-orm/dist/sqlite-core/db.js"() {
     "use strict";
@@ -34380,7 +34538,7 @@ var init_db2 = __esm({
     init_count2();
     init_query2();
     init_raw2();
-    _a214 = entityKind;
+    _a222 = entityKind;
     BaseSQLiteDatabase = class {
       constructor(resultKind, dialect6, session, schema5) {
         __publicField(this, "query");
@@ -34666,17 +34824,17 @@ var init_db2 = __esm({
         return this.session.transaction(transaction, config);
       }
     };
-    __publicField(BaseSQLiteDatabase, _a214, "BaseSQLiteDatabase");
+    __publicField(BaseSQLiteDatabase, _a222, "BaseSQLiteDatabase");
   }
 });
 
 // ../drizzle-orm/dist/sqlite-core/indexes.js
-var _a215, IndexBuilderOn2, _a216, IndexBuilder2, _a217, Index4;
+var _a223, IndexBuilderOn2, _a224, IndexBuilder2, _a225, Index4;
 var init_indexes2 = __esm({
   "../drizzle-orm/dist/sqlite-core/indexes.js"() {
     "use strict";
     init_entity();
-    _a215 = entityKind;
+    _a223 = entityKind;
     IndexBuilderOn2 = class {
       constructor(name2, unique) {
         this.name = name2;
@@ -34686,8 +34844,8 @@ var init_indexes2 = __esm({
         return new IndexBuilder2(this.name, columns, this.unique);
       }
     };
-    __publicField(IndexBuilderOn2, _a215, "SQLiteIndexBuilderOn");
-    _a216 = entityKind;
+    __publicField(IndexBuilderOn2, _a223, "SQLiteIndexBuilderOn");
+    _a224 = entityKind;
     IndexBuilder2 = class {
       constructor(name2, columns, unique) {
         /** @internal */
@@ -34711,26 +34869,26 @@ var init_indexes2 = __esm({
         return new Index4(this.config, table6);
       }
     };
-    __publicField(IndexBuilder2, _a216, "SQLiteIndexBuilder");
-    _a217 = entityKind;
+    __publicField(IndexBuilder2, _a224, "SQLiteIndexBuilder");
+    _a225 = entityKind;
     Index4 = class {
       constructor(config, table6) {
         __publicField(this, "config");
         this.config = { ...config, table: table6 };
       }
     };
-    __publicField(Index4, _a217, "SQLiteIndex");
+    __publicField(Index4, _a225, "SQLiteIndex");
   }
 });
 
 // ../drizzle-orm/dist/sqlite-core/primary-keys.js
-var _a218, PrimaryKeyBuilder2, _a219, PrimaryKey2;
+var _a226, PrimaryKeyBuilder2, _a227, PrimaryKey2;
 var init_primary_keys2 = __esm({
   "../drizzle-orm/dist/sqlite-core/primary-keys.js"() {
     "use strict";
     init_entity();
     init_table3();
-    _a218 = entityKind;
+    _a226 = entityKind;
     PrimaryKeyBuilder2 = class {
       constructor(columns, name2) {
         /** @internal */
@@ -34745,8 +34903,8 @@ var init_primary_keys2 = __esm({
         return new PrimaryKey2(table6, this.columns, this.name);
       }
     };
-    __publicField(PrimaryKeyBuilder2, _a218, "SQLitePrimaryKeyBuilder");
-    _a219 = entityKind;
+    __publicField(PrimaryKeyBuilder2, _a226, "SQLitePrimaryKeyBuilder");
+    _a227 = entityKind;
     PrimaryKey2 = class {
       constructor(table6, columns, name2) {
         __publicField(this, "columns");
@@ -34759,12 +34917,12 @@ var init_primary_keys2 = __esm({
         return this.name ?? `${this.table[SQLiteTable.Symbol.Name]}_${this.columns.map((column6) => column6.name).join("_")}_pk`;
       }
     };
-    __publicField(PrimaryKey2, _a219, "SQLitePrimaryKey");
+    __publicField(PrimaryKey2, _a227, "SQLitePrimaryKey");
   }
 });
 
 // ../drizzle-orm/dist/sqlite-core/session.js
-var _a220, _b153, ExecuteResultSync, _a221, SQLitePreparedQuery, _a222, SQLiteSession, _a223, _b154, SQLiteTransaction;
+var _a228, _b161, ExecuteResultSync, _a229, SQLitePreparedQuery, _a230, SQLiteSession, _a231, _b162, SQLiteTransaction;
 var init_session2 = __esm({
   "../drizzle-orm/dist/sqlite-core/session.js"() {
     "use strict";
@@ -34772,7 +34930,7 @@ var init_session2 = __esm({
     init_errors();
     init_query_promise();
     init_db2();
-    ExecuteResultSync = class extends (_b153 = QueryPromise, _a220 = entityKind, _b153) {
+    ExecuteResultSync = class extends (_b161 = QueryPromise, _a228 = entityKind, _b161) {
       constructor(resultCb) {
         super();
         this.resultCb = resultCb;
@@ -34784,8 +34942,8 @@ var init_session2 = __esm({
         return this.resultCb();
       }
     };
-    __publicField(ExecuteResultSync, _a220, "ExecuteResultSync");
-    _a221 = entityKind;
+    __publicField(ExecuteResultSync, _a228, "ExecuteResultSync");
+    _a229 = entityKind;
     SQLitePreparedQuery = class {
       constructor(mode, executeMethod, query) {
         /** @internal */
@@ -34826,8 +34984,8 @@ var init_session2 = __esm({
         }
       }
     };
-    __publicField(SQLitePreparedQuery, _a221, "PreparedQuery");
-    _a222 = entityKind;
+    __publicField(SQLitePreparedQuery, _a229, "PreparedQuery");
+    _a230 = entityKind;
     SQLiteSession = class {
       constructor(dialect6) {
         this.dialect = dialect6;
@@ -34873,8 +35031,8 @@ var init_session2 = __esm({
         throw new Error("Not implemented");
       }
     };
-    __publicField(SQLiteSession, _a222, "SQLiteSession");
-    SQLiteTransaction = class extends (_b154 = BaseSQLiteDatabase, _a223 = entityKind, _b154) {
+    __publicField(SQLiteSession, _a230, "SQLiteSession");
+    SQLiteTransaction = class extends (_b162 = BaseSQLiteDatabase, _a231 = entityKind, _b162) {
       constructor(resultType, dialect6, session, schema5, nestedIndex = 0) {
         super(resultType, dialect6, session, schema5);
         this.schema = schema5;
@@ -34884,7 +35042,7 @@ var init_session2 = __esm({
         throw new TransactionRollbackError();
       }
     };
-    __publicField(SQLiteTransaction, _a223, "SQLiteTransaction");
+    __publicField(SQLiteTransaction, _a231, "SQLiteTransaction");
   }
 });
 
@@ -34954,7 +35112,7 @@ var init_utils7 = __esm({
 });
 
 // ../drizzle-orm/dist/sqlite-core/view.js
-var _a224, ViewBuilderCore, _a225, _b155, ViewBuilder2, _a226, _b156, ManualViewBuilder2, _a227, _b157, SQLiteView2;
+var _a232, ViewBuilderCore, _a233, _b163, ViewBuilder2, _a234, _b164, ManualViewBuilder2, _a235, _b165, SQLiteView2;
 var init_view2 = __esm({
   "../drizzle-orm/dist/sqlite-core/view.js"() {
     "use strict";
@@ -34964,15 +35122,15 @@ var init_view2 = __esm({
     init_query_builder3();
     init_table3();
     init_view_base2();
-    _a224 = entityKind;
+    _a232 = entityKind;
     ViewBuilderCore = class {
       constructor(name2) {
         __publicField(this, "config", {});
         this.name = name2;
       }
     };
-    __publicField(ViewBuilderCore, _a224, "SQLiteViewBuilderCore");
-    ViewBuilder2 = class extends (_b155 = ViewBuilderCore, _a225 = entityKind, _b155) {
+    __publicField(ViewBuilderCore, _a232, "SQLiteViewBuilderCore");
+    ViewBuilder2 = class extends (_b163 = ViewBuilderCore, _a233 = entityKind, _b163) {
       as(qb) {
         if (typeof qb === "function") {
           qb = qb(new QueryBuilder2());
@@ -34998,8 +35156,8 @@ var init_view2 = __esm({
         );
       }
     };
-    __publicField(ViewBuilder2, _a225, "SQLiteViewBuilder");
-    ManualViewBuilder2 = class extends (_b156 = ViewBuilderCore, _a226 = entityKind, _b156) {
+    __publicField(ViewBuilder2, _a233, "SQLiteViewBuilder");
+    ManualViewBuilder2 = class extends (_b164 = ViewBuilderCore, _a234 = entityKind, _b164) {
       constructor(name2, columns) {
         super(name2);
         __publicField(this, "columns");
@@ -35042,13 +35200,13 @@ var init_view2 = __esm({
         );
       }
     };
-    __publicField(ManualViewBuilder2, _a226, "SQLiteManualViewBuilder");
-    SQLiteView2 = class extends (_b157 = SQLiteViewBase, _a227 = entityKind, _b157) {
+    __publicField(ManualViewBuilder2, _a234, "SQLiteManualViewBuilder");
+    SQLiteView2 = class extends (_b165 = SQLiteViewBase, _a235 = entityKind, _b165) {
       constructor({ config }) {
         super(config);
       }
     };
-    __publicField(SQLiteView2, _a227, "SQLiteView");
+    __publicField(SQLiteView2, _a235, "SQLiteView");
   }
 });
 
@@ -35136,6 +35294,10 @@ function extractGeneratedColumns(input) {
   }
   return columns;
 }
+function ignoreTableNames(fieldName) {
+  return `(${fieldName} NOT IN ('sqlite_sequence','_litestream_seq', '_litestream_lock', 'libsql_wasm_func_table', '__drizzle_migrations') 
+		        and ${fieldName} NOT LIKE '_cf_%')`;
+}
 var generateSqliteSnapshot, fromDatabase2;
 var init_sqliteSerializer = __esm({
   "src/serializer/sqliteSerializer.ts"() {
@@ -35443,23 +35605,15 @@ ${withStyle.errorWarning(
         `SELECT 
     m.name as "tableName", p.name as "columnName", p.type as "columnType", p."notnull" as "notNull", p.dflt_value as "defaultValue", p.pk as pk, p.hidden as hidden, m.sql, m.type as type
     FROM sqlite_master AS m JOIN pragma_table_xinfo(m.name) AS p
-    WHERE (m.type = 'table' OR m.type = 'view')
-    and m.tbl_name != 'sqlite_sequence' 
-    and m.tbl_name != 'sqlite_stat1' 
-    and m.tbl_name != '_litestream_seq' 
-    and m.tbl_name != '_litestream_lock' 
-    and m.tbl_name != 'libsql_wasm_func_table' 
-    and m.tbl_name != '__drizzle_migrations' 
-    and m.tbl_name != '_cf_KV';
+    WHERE (m.type = 'table' OR m.type = 'view') 
+	and ${ignoreTableNames("m.tbl_name")};
     `
       );
       const tablesWithSeq = [];
       const seq = await db.query(
         `SELECT * FROM sqlite_master WHERE name != 'sqlite_sequence' 
-    and name != 'sqlite_stat1' 
-    and name != '_litestream_seq' 
-    and name != '_litestream_lock' 
-    and tbl_name != '_cf_KV' 
+    and ${ignoreTableNames("name")}
+    and ${ignoreTableNames("tbl_name")}
     and sql GLOB '*[ *' || CHAR(9) || CHAR(10) || CHAR(13) || ']AUTOINCREMENT[^'']*';`
       );
       for (const s of seq) {
@@ -35558,7 +35712,7 @@ ${withStyle.errorWarning(
         const fks = await db.query(
           `SELECT m.name as "tableFrom", f.id as "id", f."table" as "tableTo", f."from", f."to", f."on_update" as "onUpdate", f."on_delete" as "onDelete", f.seq as "seq"
       FROM sqlite_master m, pragma_foreign_key_list(m.name) as f 
-      where m.tbl_name != '_cf_KV';`
+      where ${ignoreTableNames("m.tbl_name")};`
         );
         const fkByTableName = {};
         for (const fkRow of fks) {
@@ -35618,7 +35772,7 @@ FROM sqlite_master AS m,
 WHERE 
     m.type = 'table' 
     and il.name NOT LIKE 'sqlite_autoindex_%'
-    and m.tbl_name != '_cf_KV';`
+    and ${ignoreTableNames("m.tbl_name")};`
       );
       for (const idxRow of idxs) {
         const tableName = idxRow.tableName;
@@ -35680,7 +35834,7 @@ WHERE
       const checkConstraints = {};
       const checks = await db.query(`SELECT name as "tableName", sql as "sql"
 		FROM sqlite_master 
-		WHERE type = 'table' AND name != 'sqlite_sequence';`);
+		WHERE type = 'table' AND ${ignoreTableNames("name")};`);
       for (const check of checks) {
         if (!tablesFilter(check.tableName)) continue;
         const { tableName, sql: sql2 } = check;
@@ -35766,12 +35920,12 @@ var init_alias4 = __esm({
 });
 
 // ../drizzle-orm/dist/mysql-core/checks.js
-var _a228, CheckBuilder3, _a229, Check3;
+var _a236, CheckBuilder3, _a237, Check3;
 var init_checks3 = __esm({
   "../drizzle-orm/dist/mysql-core/checks.js"() {
     "use strict";
     init_entity();
-    _a228 = entityKind;
+    _a236 = entityKind;
     CheckBuilder3 = class {
       constructor(name2, value) {
         __publicField(this, "brand");
@@ -35783,8 +35937,8 @@ var init_checks3 = __esm({
         return new Check3(table6, this);
       }
     };
-    __publicField(CheckBuilder3, _a228, "MySqlCheckBuilder");
-    _a229 = entityKind;
+    __publicField(CheckBuilder3, _a236, "MySqlCheckBuilder");
+    _a237 = entityKind;
     Check3 = class {
       constructor(table6, builder) {
         __publicField(this, "name");
@@ -35794,18 +35948,18 @@ var init_checks3 = __esm({
         this.value = builder.value;
       }
     };
-    __publicField(Check3, _a229, "MySqlCheck");
+    __publicField(Check3, _a237, "MySqlCheck");
   }
 });
 
 // ../drizzle-orm/dist/mysql-core/foreign-keys.js
-var _a230, ForeignKeyBuilder3, _a231, ForeignKey3;
+var _a238, ForeignKeyBuilder3, _a239, ForeignKey3;
 var init_foreign_keys3 = __esm({
   "../drizzle-orm/dist/mysql-core/foreign-keys.js"() {
     "use strict";
     init_entity();
     init_table_utils();
-    _a230 = entityKind;
+    _a238 = entityKind;
     ForeignKeyBuilder3 = class {
       constructor(config, actions) {
         /** @internal */
@@ -35836,8 +35990,8 @@ var init_foreign_keys3 = __esm({
         return new ForeignKey3(table6, this);
       }
     };
-    __publicField(ForeignKeyBuilder3, _a230, "MySqlForeignKeyBuilder");
-    _a231 = entityKind;
+    __publicField(ForeignKeyBuilder3, _a238, "MySqlForeignKeyBuilder");
+    _a239 = entityKind;
     ForeignKey3 = class {
       constructor(table6, builder) {
         __publicField(this, "reference");
@@ -35861,7 +36015,7 @@ var init_foreign_keys3 = __esm({
         return name2 ?? `${chunks.join("_")}_fk`;
       }
     };
-    __publicField(ForeignKey3, _a231, "MySqlForeignKey");
+    __publicField(ForeignKey3, _a239, "MySqlForeignKey");
   }
 });
 
@@ -35869,13 +36023,13 @@ var init_foreign_keys3 = __esm({
 function uniqueKeyName3(table6, columns) {
   return `${table6[TableName]}_${columns.join("_")}_unique`;
 }
-var _a232, UniqueConstraintBuilder3, _a233, UniqueOnConstraintBuilder3, _a234, UniqueConstraint3;
+var _a240, UniqueConstraintBuilder3, _a241, UniqueOnConstraintBuilder3, _a242, UniqueConstraint3;
 var init_unique_constraint3 = __esm({
   "../drizzle-orm/dist/mysql-core/unique-constraint.js"() {
     "use strict";
     init_entity();
     init_table_utils();
-    _a232 = entityKind;
+    _a240 = entityKind;
     UniqueConstraintBuilder3 = class {
       constructor(columns, name2) {
         /** @internal */
@@ -35888,8 +36042,8 @@ var init_unique_constraint3 = __esm({
         return new UniqueConstraint3(table6, this.columns, this.name);
       }
     };
-    __publicField(UniqueConstraintBuilder3, _a232, "MySqlUniqueConstraintBuilder");
-    _a233 = entityKind;
+    __publicField(UniqueConstraintBuilder3, _a240, "MySqlUniqueConstraintBuilder");
+    _a241 = entityKind;
     UniqueOnConstraintBuilder3 = class {
       constructor(name2) {
         /** @internal */
@@ -35900,8 +36054,8 @@ var init_unique_constraint3 = __esm({
         return new UniqueConstraintBuilder3(columns, this.name);
       }
     };
-    __publicField(UniqueOnConstraintBuilder3, _a233, "MySqlUniqueOnConstraintBuilder");
-    _a234 = entityKind;
+    __publicField(UniqueOnConstraintBuilder3, _a241, "MySqlUniqueOnConstraintBuilder");
+    _a242 = entityKind;
     UniqueConstraint3 = class {
       constructor(table6, columns, name2) {
         __publicField(this, "columns");
@@ -35915,12 +36069,12 @@ var init_unique_constraint3 = __esm({
         return this.name;
       }
     };
-    __publicField(UniqueConstraint3, _a234, "MySqlUniqueConstraint");
+    __publicField(UniqueConstraint3, _a242, "MySqlUniqueConstraint");
   }
 });
 
 // ../drizzle-orm/dist/mysql-core/columns/common.js
-var _a235, _b158, MySqlColumnBuilder, _a236, _b159, MySqlColumn, _a237, _b160, MySqlColumnBuilderWithAutoIncrement, _a238, _b161, MySqlColumnWithAutoIncrement;
+var _a243, _b166, MySqlColumnBuilder, _a244, _b167, MySqlColumn, _a245, _b168, MySqlColumnBuilderWithAutoIncrement, _a246, _b169, MySqlColumnWithAutoIncrement;
 var init_common4 = __esm({
   "../drizzle-orm/dist/mysql-core/columns/common.js"() {
     "use strict";
@@ -35929,7 +36083,7 @@ var init_common4 = __esm({
     init_entity();
     init_foreign_keys3();
     init_unique_constraint3();
-    MySqlColumnBuilder = class extends (_b158 = ColumnBuilder, _a235 = entityKind, _b158) {
+    MySqlColumnBuilder = class extends (_b166 = ColumnBuilder, _a243 = entityKind, _b166) {
       constructor() {
         super(...arguments);
         __publicField(this, "foreignKeyConfigs", []);
@@ -35970,8 +36124,8 @@ var init_common4 = __esm({
         });
       }
     };
-    __publicField(MySqlColumnBuilder, _a235, "MySqlColumnBuilder");
-    MySqlColumn = class extends (_b159 = Column2, _a236 = entityKind, _b159) {
+    __publicField(MySqlColumnBuilder, _a243, "MySqlColumnBuilder");
+    MySqlColumn = class extends (_b167 = Column2, _a244 = entityKind, _b167) {
       constructor(table6, config) {
         if (!config.uniqueName) {
           config.uniqueName = uniqueKeyName3(table6, [config.name]);
@@ -35980,8 +36134,8 @@ var init_common4 = __esm({
         this.table = table6;
       }
     };
-    __publicField(MySqlColumn, _a236, "MySqlColumn");
-    MySqlColumnBuilderWithAutoIncrement = class extends (_b160 = MySqlColumnBuilder, _a237 = entityKind, _b160) {
+    __publicField(MySqlColumn, _a244, "MySqlColumn");
+    MySqlColumnBuilderWithAutoIncrement = class extends (_b168 = MySqlColumnBuilder, _a245 = entityKind, _b168) {
       constructor(name2, dataType, columnType) {
         super(name2, dataType, columnType);
         this.config.autoIncrement = false;
@@ -35992,14 +36146,14 @@ var init_common4 = __esm({
         return this;
       }
     };
-    __publicField(MySqlColumnBuilderWithAutoIncrement, _a237, "MySqlColumnBuilderWithAutoIncrement");
-    MySqlColumnWithAutoIncrement = class extends (_b161 = MySqlColumn, _a238 = entityKind, _b161) {
+    __publicField(MySqlColumnBuilderWithAutoIncrement, _a245, "MySqlColumnBuilderWithAutoIncrement");
+    MySqlColumnWithAutoIncrement = class extends (_b169 = MySqlColumn, _a246 = entityKind, _b169) {
       constructor() {
         super(...arguments);
         __publicField(this, "autoIncrement", this.config.autoIncrement);
       }
     };
-    __publicField(MySqlColumnWithAutoIncrement, _a238, "MySqlColumnWithAutoIncrement");
+    __publicField(MySqlColumnWithAutoIncrement, _a246, "MySqlColumnWithAutoIncrement");
   }
 });
 
@@ -36011,14 +36165,14 @@ function bigint2(a, b) {
   }
   return new MySqlBigInt64Builder(name2, config.unsigned);
 }
-var _a239, _b162, MySqlBigInt53Builder, _a240, _b163, MySqlBigInt53, _a241, _b164, MySqlBigInt64Builder, _a242, _b165, MySqlBigInt64;
+var _a247, _b170, MySqlBigInt53Builder, _a248, _b171, MySqlBigInt53, _a249, _b172, MySqlBigInt64Builder, _a250, _b173, MySqlBigInt64;
 var init_bigint2 = __esm({
   "../drizzle-orm/dist/mysql-core/columns/bigint.js"() {
     "use strict";
     init_entity();
     init_utils2();
     init_common4();
-    MySqlBigInt53Builder = class extends (_b162 = MySqlColumnBuilderWithAutoIncrement, _a239 = entityKind, _b162) {
+    MySqlBigInt53Builder = class extends (_b170 = MySqlColumnBuilderWithAutoIncrement, _a247 = entityKind, _b170) {
       constructor(name2, unsigned = false) {
         super(name2, "number", "MySqlBigInt53");
         this.config.unsigned = unsigned;
@@ -36031,8 +36185,8 @@ var init_bigint2 = __esm({
         );
       }
     };
-    __publicField(MySqlBigInt53Builder, _a239, "MySqlBigInt53Builder");
-    MySqlBigInt53 = class extends (_b163 = MySqlColumnWithAutoIncrement, _a240 = entityKind, _b163) {
+    __publicField(MySqlBigInt53Builder, _a247, "MySqlBigInt53Builder");
+    MySqlBigInt53 = class extends (_b171 = MySqlColumnWithAutoIncrement, _a248 = entityKind, _b171) {
       getSQLType() {
         return `bigint${this.config.unsigned ? " unsigned" : ""}`;
       }
@@ -36043,8 +36197,8 @@ var init_bigint2 = __esm({
         return Number(value);
       }
     };
-    __publicField(MySqlBigInt53, _a240, "MySqlBigInt53");
-    MySqlBigInt64Builder = class extends (_b164 = MySqlColumnBuilderWithAutoIncrement, _a241 = entityKind, _b164) {
+    __publicField(MySqlBigInt53, _a248, "MySqlBigInt53");
+    MySqlBigInt64Builder = class extends (_b172 = MySqlColumnBuilderWithAutoIncrement, _a249 = entityKind, _b172) {
       constructor(name2, unsigned = false) {
         super(name2, "bigint", "MySqlBigInt64");
         this.config.unsigned = unsigned;
@@ -36057,8 +36211,8 @@ var init_bigint2 = __esm({
         );
       }
     };
-    __publicField(MySqlBigInt64Builder, _a241, "MySqlBigInt64Builder");
-    MySqlBigInt64 = class extends (_b165 = MySqlColumnWithAutoIncrement, _a242 = entityKind, _b165) {
+    __publicField(MySqlBigInt64Builder, _a249, "MySqlBigInt64Builder");
+    MySqlBigInt64 = class extends (_b173 = MySqlColumnWithAutoIncrement, _a250 = entityKind, _b173) {
       getSQLType() {
         return `bigint${this.config.unsigned ? " unsigned" : ""}`;
       }
@@ -36067,7 +36221,7 @@ var init_bigint2 = __esm({
         return BigInt(value);
       }
     };
-    __publicField(MySqlBigInt64, _a242, "MySqlBigInt64");
+    __publicField(MySqlBigInt64, _a250, "MySqlBigInt64");
   }
 });
 
@@ -36076,14 +36230,14 @@ function binary(a, b = {}) {
   const { name: name2, config } = getColumnNameAndConfig(a, b);
   return new MySqlBinaryBuilder(name2, config.length);
 }
-var _a243, _b166, MySqlBinaryBuilder, _a244, _b167, MySqlBinary;
+var _a251, _b174, MySqlBinaryBuilder, _a252, _b175, MySqlBinary;
 var init_binary = __esm({
   "../drizzle-orm/dist/mysql-core/columns/binary.js"() {
     "use strict";
     init_entity();
     init_utils2();
     init_common4();
-    MySqlBinaryBuilder = class extends (_b166 = MySqlColumnBuilder, _a243 = entityKind, _b166) {
+    MySqlBinaryBuilder = class extends (_b174 = MySqlColumnBuilder, _a251 = entityKind, _b174) {
       constructor(name2, length) {
         super(name2, "string", "MySqlBinary");
         this.config.length = length;
@@ -36093,17 +36247,28 @@ var init_binary = __esm({
         return new MySqlBinary(table6, this.config);
       }
     };
-    __publicField(MySqlBinaryBuilder, _a243, "MySqlBinaryBuilder");
-    MySqlBinary = class extends (_b167 = MySqlColumn, _a244 = entityKind, _b167) {
+    __publicField(MySqlBinaryBuilder, _a251, "MySqlBinaryBuilder");
+    MySqlBinary = class extends (_b175 = MySqlColumn, _a252 = entityKind, _b175) {
       constructor() {
         super(...arguments);
         __publicField(this, "length", this.config.length);
       }
+      mapFromDriverValue(value) {
+        if (typeof value === "string")
+          return value;
+        if (Buffer.isBuffer(value))
+          return value.toString();
+        const str = [];
+        for (const v of value) {
+          str.push(v === 49 ? "1" : "0");
+        }
+        return str.join("");
+      }
       getSQLType() {
         return this.length === void 0 ? `binary` : `binary(${this.length})`;
       }
     };
-    __publicField(MySqlBinary, _a244, "MySqlBinary");
+    __publicField(MySqlBinary, _a252, "MySqlBinary");
   }
 });
 
@@ -36111,13 +36276,13 @@ var init_binary = __esm({
 function boolean2(name2) {
   return new MySqlBooleanBuilder(name2 ?? "");
 }
-var _a245, _b168, MySqlBooleanBuilder, _a246, _b169, MySqlBoolean;
+var _a253, _b176, MySqlBooleanBuilder, _a254, _b177, MySqlBoolean;
 var init_boolean2 = __esm({
   "../drizzle-orm/dist/mysql-core/columns/boolean.js"() {
     "use strict";
     init_entity();
     init_common4();
-    MySqlBooleanBuilder = class extends (_b168 = MySqlColumnBuilder, _a245 = entityKind, _b168) {
+    MySqlBooleanBuilder = class extends (_b176 = MySqlColumnBuilder, _a253 = entityKind, _b176) {
       constructor(name2) {
         super(name2, "boolean", "MySqlBoolean");
       }
@@ -36129,8 +36294,8 @@ var init_boolean2 = __esm({
         );
       }
     };
-    __publicField(MySqlBooleanBuilder, _a245, "MySqlBooleanBuilder");
-    MySqlBoolean = class extends (_b169 = MySqlColumn, _a246 = entityKind, _b169) {
+    __publicField(MySqlBooleanBuilder, _a253, "MySqlBooleanBuilder");
+    MySqlBoolean = class extends (_b177 = MySqlColumn, _a254 = entityKind, _b177) {
       getSQLType() {
         return "boolean";
       }
@@ -36141,7 +36306,7 @@ var init_boolean2 = __esm({
         return value === 1;
       }
     };
-    __publicField(MySqlBoolean, _a246, "MySqlBoolean");
+    __publicField(MySqlBoolean, _a254, "MySqlBoolean");
   }
 });
 
@@ -36150,14 +36315,14 @@ function char2(a, b = {}) {
   const { name: name2, config } = getColumnNameAndConfig(a, b);
   return new MySqlCharBuilder(name2, config);
 }
-var _a247, _b170, MySqlCharBuilder, _a248, _b171, MySqlChar;
+var _a255, _b178, MySqlCharBuilder, _a256, _b179, MySqlChar;
 var init_char2 = __esm({
   "../drizzle-orm/dist/mysql-core/columns/char.js"() {
     "use strict";
     init_entity();
     init_utils2();
     init_common4();
-    MySqlCharBuilder = class extends (_b170 = MySqlColumnBuilder, _a247 = entityKind, _b170) {
+    MySqlCharBuilder = class extends (_b178 = MySqlColumnBuilder, _a255 = entityKind, _b178) {
       constructor(name2, config) {
         super(name2, "string", "MySqlChar");
         this.config.length = config.length;
@@ -36171,8 +36336,8 @@ var init_char2 = __esm({
         );
       }
     };
-    __publicField(MySqlCharBuilder, _a247, "MySqlCharBuilder");
-    MySqlChar = class extends (_b171 = MySqlColumn, _a248 = entityKind, _b171) {
+    __publicField(MySqlCharBuilder, _a255, "MySqlCharBuilder");
+    MySqlChar = class extends (_b179 = MySqlColumn, _a256 = entityKind, _b179) {
       constructor() {
         super(...arguments);
         __publicField(this, "length", this.config.length);
@@ -36182,7 +36347,7 @@ var init_char2 = __esm({
         return this.length === void 0 ? `char` : `char(${this.length})`;
       }
     };
-    __publicField(MySqlChar, _a248, "MySqlChar");
+    __publicField(MySqlChar, _a256, "MySqlChar");
   }
 });
 
@@ -36193,14 +36358,14 @@ function customType3(customTypeParams) {
     return new MySqlCustomColumnBuilder(name2, config, customTypeParams);
   };
 }
-var _a249, _b172, MySqlCustomColumnBuilder, _a250, _b173, MySqlCustomColumn;
+var _a257, _b180, MySqlCustomColumnBuilder, _a258, _b181, MySqlCustomColumn;
 var init_custom3 = __esm({
   "../drizzle-orm/dist/mysql-core/columns/custom.js"() {
     "use strict";
     init_entity();
     init_utils2();
     init_common4();
-    MySqlCustomColumnBuilder = class extends (_b172 = MySqlColumnBuilder, _a249 = entityKind, _b172) {
+    MySqlCustomColumnBuilder = class extends (_b180 = MySqlColumnBuilder, _a257 = entityKind, _b180) {
       constructor(name2, fieldConfig, customTypeParams) {
         super(name2, "custom", "MySqlCustomColumn");
         this.config.fieldConfig = fieldConfig;
@@ -36214,8 +36379,8 @@ var init_custom3 = __esm({
         );
       }
     };
-    __publicField(MySqlCustomColumnBuilder, _a249, "MySqlCustomColumnBuilder");
-    MySqlCustomColumn = class extends (_b173 = MySqlColumn, _a250 = entityKind, _b173) {
+    __publicField(MySqlCustomColumnBuilder, _a257, "MySqlCustomColumnBuilder");
+    MySqlCustomColumn = class extends (_b181 = MySqlColumn, _a258 = entityKind, _b181) {
       constructor(table6, config) {
         super(table6, config);
         __publicField(this, "sqlName");
@@ -36235,7 +36400,7 @@ var init_custom3 = __esm({
         return typeof this.mapTo === "function" ? this.mapTo(value) : value;
       }
     };
-    __publicField(MySqlCustomColumn, _a250, "MySqlCustomColumn");
+    __publicField(MySqlCustomColumn, _a258, "MySqlCustomColumn");
   }
 });
 
@@ -36247,14 +36412,14 @@ function date2(a, b) {
   }
   return new MySqlDateBuilder(name2);
 }
-var _a251, _b174, MySqlDateBuilder, _a252, _b175, MySqlDate, _a253, _b176, MySqlDateStringBuilder, _a254, _b177, MySqlDateString;
+var _a259, _b182, MySqlDateBuilder, _a260, _b183, MySqlDate, _a261, _b184, MySqlDateStringBuilder, _a262, _b185, MySqlDateString;
 var init_date2 = __esm({
   "../drizzle-orm/dist/mysql-core/columns/date.js"() {
     "use strict";
     init_entity();
     init_utils2();
     init_common4();
-    MySqlDateBuilder = class extends (_b174 = MySqlColumnBuilder, _a251 = entityKind, _b174) {
+    MySqlDateBuilder = class extends (_b182 = MySqlColumnBuilder, _a259 = entityKind, _b182) {
       constructor(name2) {
         super(name2, "date", "MySqlDate");
       }
@@ -36263,8 +36428,8 @@ var init_date2 = __esm({
         return new MySqlDate(table6, this.config);
       }
     };
-    __publicField(MySqlDateBuilder, _a251, "MySqlDateBuilder");
-    MySqlDate = class extends (_b175 = MySqlColumn, _a252 = entityKind, _b175) {
+    __publicField(MySqlDateBuilder, _a259, "MySqlDateBuilder");
+    MySqlDate = class extends (_b183 = MySqlColumn, _a260 = entityKind, _b183) {
       constructor(table6, config) {
         super(table6, config);
       }
@@ -36275,8 +36440,8 @@ var init_date2 = __esm({
         return new Date(value);
       }
     };
-    __publicField(MySqlDate, _a252, "MySqlDate");
-    MySqlDateStringBuilder = class extends (_b176 = MySqlColumnBuilder, _a253 = entityKind, _b176) {
+    __publicField(MySqlDate, _a260, "MySqlDate");
+    MySqlDateStringBuilder = class extends (_b184 = MySqlColumnBuilder, _a261 = entityKind, _b184) {
       constructor(name2) {
         super(name2, "string", "MySqlDateString");
       }
@@ -36288,8 +36453,8 @@ var init_date2 = __esm({
         );
       }
     };
-    __publicField(MySqlDateStringBuilder, _a253, "MySqlDateStringBuilder");
-    MySqlDateString = class extends (_b177 = MySqlColumn, _a254 = entityKind, _b177) {
+    __publicField(MySqlDateStringBuilder, _a261, "MySqlDateStringBuilder");
+    MySqlDateString = class extends (_b185 = MySqlColumn, _a262 = entityKind, _b185) {
       constructor(table6, config) {
         super(table6, config);
       }
@@ -36297,7 +36462,7 @@ var init_date2 = __esm({
         return `date`;
       }
     };
-    __publicField(MySqlDateString, _a254, "MySqlDateString");
+    __publicField(MySqlDateString, _a262, "MySqlDateString");
   }
 });
 
@@ -36309,14 +36474,14 @@ function datetime(a, b) {
   }
   return new MySqlDateTimeBuilder(name2, config);
 }
-var _a255, _b178, MySqlDateTimeBuilder, _a256, _b179, MySqlDateTime, _a257, _b180, MySqlDateTimeStringBuilder, _a258, _b181, MySqlDateTimeString;
+var _a263, _b186, MySqlDateTimeBuilder, _a264, _b187, MySqlDateTime, _a265, _b188, MySqlDateTimeStringBuilder, _a266, _b189, MySqlDateTimeString;
 var init_datetime = __esm({
   "../drizzle-orm/dist/mysql-core/columns/datetime.js"() {
     "use strict";
     init_entity();
     init_utils2();
     init_common4();
-    MySqlDateTimeBuilder = class extends (_b178 = MySqlColumnBuilder, _a255 = entityKind, _b178) {
+    MySqlDateTimeBuilder = class extends (_b186 = MySqlColumnBuilder, _a263 = entityKind, _b186) {
       constructor(name2, config) {
         super(name2, "date", "MySqlDateTime");
         this.config.fsp = config?.fsp;
@@ -36329,8 +36494,8 @@ var init_datetime = __esm({
         );
       }
     };
-    __publicField(MySqlDateTimeBuilder, _a255, "MySqlDateTimeBuilder");
-    MySqlDateTime = class extends (_b179 = MySqlColumn, _a256 = entityKind, _b179) {
+    __publicField(MySqlDateTimeBuilder, _a263, "MySqlDateTimeBuilder");
+    MySqlDateTime = class extends (_b187 = MySqlColumn, _a264 = entityKind, _b187) {
       constructor(table6, config) {
         super(table6, config);
         __publicField(this, "fsp");
@@ -36347,8 +36512,8 @@ var init_datetime = __esm({
         return /* @__PURE__ */ new Date(value.replace(" ", "T") + "Z");
       }
     };
-    __publicField(MySqlDateTime, _a256, "MySqlDateTime");
-    MySqlDateTimeStringBuilder = class extends (_b180 = MySqlColumnBuilder, _a257 = entityKind, _b180) {
+    __publicField(MySqlDateTime, _a264, "MySqlDateTime");
+    MySqlDateTimeStringBuilder = class extends (_b188 = MySqlColumnBuilder, _a265 = entityKind, _b188) {
       constructor(name2, config) {
         super(name2, "string", "MySqlDateTimeString");
         this.config.fsp = config?.fsp;
@@ -36361,8 +36526,8 @@ var init_datetime = __esm({
         );
       }
     };
-    __publicField(MySqlDateTimeStringBuilder, _a257, "MySqlDateTimeStringBuilder");
-    MySqlDateTimeString = class extends (_b181 = MySqlColumn, _a258 = entityKind, _b181) {
+    __publicField(MySqlDateTimeStringBuilder, _a265, "MySqlDateTimeStringBuilder");
+    MySqlDateTimeString = class extends (_b189 = MySqlColumn, _a266 = entityKind, _b189) {
       constructor(table6, config) {
         super(table6, config);
         __publicField(this, "fsp");
@@ -36373,23 +36538,24 @@ var init_datetime = __esm({
         return `datetime${precision}`;
       }
     };
-    __publicField(MySqlDateTimeString, _a258, "MySqlDateTimeString");
+    __publicField(MySqlDateTimeString, _a266, "MySqlDateTimeString");
   }
 });
 
 // ../drizzle-orm/dist/mysql-core/columns/decimal.js
 function decimal(a, b = {}) {
   const { name: name2, config } = getColumnNameAndConfig(a, b);
-  return new MySqlDecimalBuilder(name2, config);
+  const mode = config?.mode;
+  return mode === "number" ? new MySqlDecimalNumberBuilder(name2, config) : mode === "bigint" ? new MySqlDecimalBigIntBuilder(name2, config) : new MySqlDecimalBuilder(name2, config);
 }
-var _a259, _b182, MySqlDecimalBuilder, _a260, _b183, MySqlDecimal;
+var _a267, _b190, MySqlDecimalBuilder, _a268, _b191, MySqlDecimal, _a269, _b192, MySqlDecimalNumberBuilder, _a270, _b193, MySqlDecimalNumber, _a271, _b194, MySqlDecimalBigIntBuilder, _a272, _b195, MySqlDecimalBigInt;
 var init_decimal = __esm({
   "../drizzle-orm/dist/mysql-core/columns/decimal.js"() {
     "use strict";
     init_entity();
     init_utils2();
     init_common4();
-    MySqlDecimalBuilder = class extends (_b182 = MySqlColumnBuilderWithAutoIncrement, _a259 = entityKind, _b182) {
+    MySqlDecimalBuilder = class extends (_b190 = MySqlColumnBuilderWithAutoIncrement, _a267 = entityKind, _b190) {
       constructor(name2, config) {
         super(name2, "string", "MySqlDecimal");
         this.config.precision = config?.precision;
@@ -36404,14 +36570,19 @@ var init_decimal = __esm({
         );
       }
     };
-    __publicField(MySqlDecimalBuilder, _a259, "MySqlDecimalBuilder");
-    MySqlDecimal = class extends (_b183 = MySqlColumnWithAutoIncrement, _a260 = entityKind, _b183) {
+    __publicField(MySqlDecimalBuilder, _a267, "MySqlDecimalBuilder");
+    MySqlDecimal = class extends (_b191 = MySqlColumnWithAutoIncrement, _a268 = entityKind, _b191) {
       constructor() {
         super(...arguments);
         __publicField(this, "precision", this.config.precision);
         __publicField(this, "scale", this.config.scale);
         __publicField(this, "unsigned", this.config.unsigned);
       }
+      mapFromDriverValue(value) {
+        if (typeof value === "string")
+          return value;
+        return String(value);
+      }
       getSQLType() {
         let type = "";
         if (this.precision !== void 0 && this.scale !== void 0) {
@@ -36425,7 +36596,89 @@ var init_decimal = __esm({
         return this.unsigned ? `${type} unsigned` : type;
       }
     };
-    __publicField(MySqlDecimal, _a260, "MySqlDecimal");
+    __publicField(MySqlDecimal, _a268, "MySqlDecimal");
+    MySqlDecimalNumberBuilder = class extends (_b192 = MySqlColumnBuilderWithAutoIncrement, _a269 = entityKind, _b192) {
+      constructor(name2, config) {
+        super(name2, "number", "MySqlDecimalNumber");
+        this.config.precision = config?.precision;
+        this.config.scale = config?.scale;
+        this.config.unsigned = config?.unsigned;
+      }
+      /** @internal */
+      build(table6) {
+        return new MySqlDecimalNumber(
+          table6,
+          this.config
+        );
+      }
+    };
+    __publicField(MySqlDecimalNumberBuilder, _a269, "MySqlDecimalNumberBuilder");
+    MySqlDecimalNumber = class extends (_b193 = MySqlColumnWithAutoIncrement, _a270 = entityKind, _b193) {
+      constructor() {
+        super(...arguments);
+        __publicField(this, "precision", this.config.precision);
+        __publicField(this, "scale", this.config.scale);
+        __publicField(this, "unsigned", this.config.unsigned);
+        __publicField(this, "mapToDriverValue", String);
+      }
+      mapFromDriverValue(value) {
+        if (typeof value === "number")
+          return value;
+        return Number(value);
+      }
+      getSQLType() {
+        let type = "";
+        if (this.precision !== void 0 && this.scale !== void 0) {
+          type += `decimal(${this.precision},${this.scale})`;
+        } else if (this.precision === void 0) {
+          type += "decimal";
+        } else {
+          type += `decimal(${this.precision})`;
+        }
+        type = type === "decimal(10,0)" || type === "decimal(10)" ? "decimal" : type;
+        return this.unsigned ? `${type} unsigned` : type;
+      }
+    };
+    __publicField(MySqlDecimalNumber, _a270, "MySqlDecimalNumber");
+    MySqlDecimalBigIntBuilder = class extends (_b194 = MySqlColumnBuilderWithAutoIncrement, _a271 = entityKind, _b194) {
+      constructor(name2, config) {
+        super(name2, "bigint", "MySqlDecimalBigInt");
+        this.config.precision = config?.precision;
+        this.config.scale = config?.scale;
+        this.config.unsigned = config?.unsigned;
+      }
+      /** @internal */
+      build(table6) {
+        return new MySqlDecimalBigInt(
+          table6,
+          this.config
+        );
+      }
+    };
+    __publicField(MySqlDecimalBigIntBuilder, _a271, "MySqlDecimalBigIntBuilder");
+    MySqlDecimalBigInt = class extends (_b195 = MySqlColumnWithAutoIncrement, _a272 = entityKind, _b195) {
+      constructor() {
+        super(...arguments);
+        __publicField(this, "precision", this.config.precision);
+        __publicField(this, "scale", this.config.scale);
+        __publicField(this, "unsigned", this.config.unsigned);
+        __publicField(this, "mapFromDriverValue", BigInt);
+        __publicField(this, "mapToDriverValue", String);
+      }
+      getSQLType() {
+        let type = "";
+        if (this.precision !== void 0 && this.scale !== void 0) {
+          type += `decimal(${this.precision},${this.scale})`;
+        } else if (this.precision === void 0) {
+          type += "decimal";
+        } else {
+          type += `decimal(${this.precision})`;
+        }
+        type = type === "decimal(10,0)" || type === "decimal(10)" ? "decimal" : type;
+        return this.unsigned ? `${type} unsigned` : type;
+      }
+    };
+    __publicField(MySqlDecimalBigInt, _a272, "MySqlDecimalBigInt");
   }
 });
 
@@ -36434,14 +36687,14 @@ function double(a, b) {
   const { name: name2, config } = getColumnNameAndConfig(a, b);
   return new MySqlDoubleBuilder(name2, config);
 }
-var _a261, _b184, MySqlDoubleBuilder, _a262, _b185, MySqlDouble;
+var _a273, _b196, MySqlDoubleBuilder, _a274, _b197, MySqlDouble;
 var init_double = __esm({
   "../drizzle-orm/dist/mysql-core/columns/double.js"() {
     "use strict";
     init_entity();
     init_utils2();
     init_common4();
-    MySqlDoubleBuilder = class extends (_b184 = MySqlColumnBuilderWithAutoIncrement, _a261 = entityKind, _b184) {
+    MySqlDoubleBuilder = class extends (_b196 = MySqlColumnBuilderWithAutoIncrement, _a273 = entityKind, _b196) {
       constructor(name2, config) {
         super(name2, "number", "MySqlDouble");
         this.config.precision = config?.precision;
@@ -36453,8 +36706,8 @@ var init_double = __esm({
         return new MySqlDouble(table6, this.config);
       }
     };
-    __publicField(MySqlDoubleBuilder, _a261, "MySqlDoubleBuilder");
-    MySqlDouble = class extends (_b185 = MySqlColumnWithAutoIncrement, _a262 = entityKind, _b185) {
+    __publicField(MySqlDoubleBuilder, _a273, "MySqlDoubleBuilder");
+    MySqlDouble = class extends (_b197 = MySqlColumnWithAutoIncrement, _a274 = entityKind, _b197) {
       constructor() {
         super(...arguments);
         __publicField(this, "precision", this.config.precision);
@@ -36473,7 +36726,7 @@ var init_double = __esm({
         return this.unsigned ? `${type} unsigned` : type;
       }
     };
-    __publicField(MySqlDouble, _a262, "MySqlDouble");
+    __publicField(MySqlDouble, _a274, "MySqlDouble");
   }
 });
 
@@ -36485,14 +36738,14 @@ function mysqlEnum(a, b) {
   }
   return new MySqlEnumColumnBuilder(name2, values);
 }
-var _a263, _b186, MySqlEnumColumnBuilder, _a264, _b187, MySqlEnumColumn;
+var _a275, _b198, MySqlEnumColumnBuilder, _a276, _b199, MySqlEnumColumn;
 var init_enum2 = __esm({
   "../drizzle-orm/dist/mysql-core/columns/enum.js"() {
     "use strict";
     init_entity();
     init_utils2();
     init_common4();
-    MySqlEnumColumnBuilder = class extends (_b186 = MySqlColumnBuilder, _a263 = entityKind, _b186) {
+    MySqlEnumColumnBuilder = class extends (_b198 = MySqlColumnBuilder, _a275 = entityKind, _b198) {
       constructor(name2, values) {
         super(name2, "string", "MySqlEnumColumn");
         this.config.enumValues = values;
@@ -36505,8 +36758,8 @@ var init_enum2 = __esm({
         );
       }
     };
-    __publicField(MySqlEnumColumnBuilder, _a263, "MySqlEnumColumnBuilder");
-    MySqlEnumColumn = class extends (_b187 = MySqlColumn, _a264 = entityKind, _b187) {
+    __publicField(MySqlEnumColumnBuilder, _a275, "MySqlEnumColumnBuilder");
+    MySqlEnumColumn = class extends (_b199 = MySqlColumn, _a276 = entityKind, _b199) {
       constructor() {
         super(...arguments);
         __publicField(this, "enumValues", this.config.enumValues);
@@ -36515,7 +36768,7 @@ var init_enum2 = __esm({
         return `enum(${this.enumValues.map((value) => `'${value}'`).join(",")})`;
       }
     };
-    __publicField(MySqlEnumColumn, _a264, "MySqlEnumColumn");
+    __publicField(MySqlEnumColumn, _a276, "MySqlEnumColumn");
   }
 });
 
@@ -36524,14 +36777,14 @@ function float(a, b) {
   const { name: name2, config } = getColumnNameAndConfig(a, b);
   return new MySqlFloatBuilder(name2, config);
 }
-var _a265, _b188, MySqlFloatBuilder, _a266, _b189, MySqlFloat;
+var _a277, _b200, MySqlFloatBuilder, _a278, _b201, MySqlFloat;
 var init_float = __esm({
   "../drizzle-orm/dist/mysql-core/columns/float.js"() {
     "use strict";
     init_entity();
     init_utils2();
     init_common4();
-    MySqlFloatBuilder = class extends (_b188 = MySqlColumnBuilderWithAutoIncrement, _a265 = entityKind, _b188) {
+    MySqlFloatBuilder = class extends (_b200 = MySqlColumnBuilderWithAutoIncrement, _a277 = entityKind, _b200) {
       constructor(name2, config) {
         super(name2, "number", "MySqlFloat");
         this.config.precision = config?.precision;
@@ -36543,8 +36796,8 @@ var init_float = __esm({
         return new MySqlFloat(table6, this.config);
       }
     };
-    __publicField(MySqlFloatBuilder, _a265, "MySqlFloatBuilder");
-    MySqlFloat = class extends (_b189 = MySqlColumnWithAutoIncrement, _a266 = entityKind, _b189) {
+    __publicField(MySqlFloatBuilder, _a277, "MySqlFloatBuilder");
+    MySqlFloat = class extends (_b201 = MySqlColumnWithAutoIncrement, _a278 = entityKind, _b201) {
       constructor() {
         super(...arguments);
         __publicField(this, "precision", this.config.precision);
@@ -36563,7 +36816,7 @@ var init_float = __esm({
         return this.unsigned ? `${type} unsigned` : type;
       }
     };
-    __publicField(MySqlFloat, _a266, "MySqlFloat");
+    __publicField(MySqlFloat, _a278, "MySqlFloat");
   }
 });
 
@@ -36572,14 +36825,14 @@ function int(a, b) {
   const { name: name2, config } = getColumnNameAndConfig(a, b);
   return new MySqlIntBuilder(name2, config);
 }
-var _a267, _b190, MySqlIntBuilder, _a268, _b191, MySqlInt;
+var _a279, _b202, MySqlIntBuilder, _a280, _b203, MySqlInt;
 var init_int = __esm({
   "../drizzle-orm/dist/mysql-core/columns/int.js"() {
     "use strict";
     init_entity();
     init_utils2();
     init_common4();
-    MySqlIntBuilder = class extends (_b190 = MySqlColumnBuilderWithAutoIncrement, _a267 = entityKind, _b190) {
+    MySqlIntBuilder = class extends (_b202 = MySqlColumnBuilderWithAutoIncrement, _a279 = entityKind, _b202) {
       constructor(name2, config) {
         super(name2, "number", "MySqlInt");
         this.config.unsigned = config ? config.unsigned : false;
@@ -36589,8 +36842,8 @@ var init_int = __esm({
         return new MySqlInt(table6, this.config);
       }
     };
-    __publicField(MySqlIntBuilder, _a267, "MySqlIntBuilder");
-    MySqlInt = class extends (_b191 = MySqlColumnWithAutoIncrement, _a268 = entityKind, _b191) {
+    __publicField(MySqlIntBuilder, _a279, "MySqlIntBuilder");
+    MySqlInt = class extends (_b203 = MySqlColumnWithAutoIncrement, _a280 = entityKind, _b203) {
       getSQLType() {
         return `int${this.config.unsigned ? " unsigned" : ""}`;
       }
@@ -36601,7 +36854,7 @@ var init_int = __esm({
         return value;
       }
     };
-    __publicField(MySqlInt, _a268, "MySqlInt");
+    __publicField(MySqlInt, _a280, "MySqlInt");
   }
 });
 
@@ -36609,13 +36862,13 @@ var init_int = __esm({
 function json2(name2) {
   return new MySqlJsonBuilder(name2 ?? "");
 }
-var _a269, _b192, MySqlJsonBuilder, _a270, _b193, MySqlJson;
+var _a281, _b204, MySqlJsonBuilder, _a282, _b205, MySqlJson;
 var init_json2 = __esm({
   "../drizzle-orm/dist/mysql-core/columns/json.js"() {
     "use strict";
     init_entity();
     init_common4();
-    MySqlJsonBuilder = class extends (_b192 = MySqlColumnBuilder, _a269 = entityKind, _b192) {
+    MySqlJsonBuilder = class extends (_b204 = MySqlColumnBuilder, _a281 = entityKind, _b204) {
       constructor(name2) {
         super(name2, "json", "MySqlJson");
       }
@@ -36624,8 +36877,8 @@ var init_json2 = __esm({
         return new MySqlJson(table6, this.config);
       }
     };
-    __publicField(MySqlJsonBuilder, _a269, "MySqlJsonBuilder");
-    MySqlJson = class extends (_b193 = MySqlColumn, _a270 = entityKind, _b193) {
+    __publicField(MySqlJsonBuilder, _a281, "MySqlJsonBuilder");
+    MySqlJson = class extends (_b205 = MySqlColumn, _a282 = entityKind, _b205) {
       getSQLType() {
         return "json";
       }
@@ -36633,7 +36886,7 @@ var init_json2 = __esm({
         return JSON.stringify(value);
       }
     };
-    __publicField(MySqlJson, _a270, "MySqlJson");
+    __publicField(MySqlJson, _a282, "MySqlJson");
   }
 });
 
@@ -36642,14 +36895,14 @@ function mediumint(a, b) {
   const { name: name2, config } = getColumnNameAndConfig(a, b);
   return new MySqlMediumIntBuilder(name2, config);
 }
-var _a271, _b194, MySqlMediumIntBuilder, _a272, _b195, MySqlMediumInt;
+var _a283, _b206, MySqlMediumIntBuilder, _a284, _b207, MySqlMediumInt;
 var init_mediumint = __esm({
   "../drizzle-orm/dist/mysql-core/columns/mediumint.js"() {
     "use strict";
     init_entity();
     init_utils2();
     init_common4();
-    MySqlMediumIntBuilder = class extends (_b194 = MySqlColumnBuilderWithAutoIncrement, _a271 = entityKind, _b194) {
+    MySqlMediumIntBuilder = class extends (_b206 = MySqlColumnBuilderWithAutoIncrement, _a283 = entityKind, _b206) {
       constructor(name2, config) {
         super(name2, "number", "MySqlMediumInt");
         this.config.unsigned = config ? config.unsigned : false;
@@ -36662,8 +36915,8 @@ var init_mediumint = __esm({
         );
       }
     };
-    __publicField(MySqlMediumIntBuilder, _a271, "MySqlMediumIntBuilder");
-    MySqlMediumInt = class extends (_b195 = MySqlColumnWithAutoIncrement, _a272 = entityKind, _b195) {
+    __publicField(MySqlMediumIntBuilder, _a283, "MySqlMediumIntBuilder");
+    MySqlMediumInt = class extends (_b207 = MySqlColumnWithAutoIncrement, _a284 = entityKind, _b207) {
       getSQLType() {
         return `mediumint${this.config.unsigned ? " unsigned" : ""}`;
       }
@@ -36674,7 +36927,7 @@ var init_mediumint = __esm({
         return value;
       }
     };
-    __publicField(MySqlMediumInt, _a272, "MySqlMediumInt");
+    __publicField(MySqlMediumInt, _a284, "MySqlMediumInt");
   }
 });
 
@@ -36683,14 +36936,14 @@ function real3(a, b = {}) {
   const { name: name2, config } = getColumnNameAndConfig(a, b);
   return new MySqlRealBuilder(name2, config);
 }
-var _a273, _b196, MySqlRealBuilder, _a274, _b197, MySqlReal;
+var _a285, _b208, MySqlRealBuilder, _a286, _b209, MySqlReal;
 var init_real3 = __esm({
   "../drizzle-orm/dist/mysql-core/columns/real.js"() {
     "use strict";
     init_entity();
     init_utils2();
     init_common4();
-    MySqlRealBuilder = class extends (_b196 = MySqlColumnBuilderWithAutoIncrement, _a273 = entityKind, _b196) {
+    MySqlRealBuilder = class extends (_b208 = MySqlColumnBuilderWithAutoIncrement, _a285 = entityKind, _b208) {
       constructor(name2, config) {
         super(name2, "number", "MySqlReal");
         this.config.precision = config?.precision;
@@ -36701,8 +36954,8 @@ var init_real3 = __esm({
         return new MySqlReal(table6, this.config);
       }
     };
-    __publicField(MySqlRealBuilder, _a273, "MySqlRealBuilder");
-    MySqlReal = class extends (_b197 = MySqlColumnWithAutoIncrement, _a274 = entityKind, _b197) {
+    __publicField(MySqlRealBuilder, _a285, "MySqlRealBuilder");
+    MySqlReal = class extends (_b209 = MySqlColumnWithAutoIncrement, _a286 = entityKind, _b209) {
       constructor() {
         super(...arguments);
         __publicField(this, "precision", this.config.precision);
@@ -36718,7 +36971,7 @@ var init_real3 = __esm({
         }
       }
     };
-    __publicField(MySqlReal, _a274, "MySqlReal");
+    __publicField(MySqlReal, _a286, "MySqlReal");
   }
 });
 
@@ -36726,13 +36979,13 @@ var init_real3 = __esm({
 function serial2(name2) {
   return new MySqlSerialBuilder(name2 ?? "");
 }
-var _a275, _b198, MySqlSerialBuilder, _a276, _b199, MySqlSerial;
+var _a287, _b210, MySqlSerialBuilder, _a288, _b211, MySqlSerial;
 var init_serial2 = __esm({
   "../drizzle-orm/dist/mysql-core/columns/serial.js"() {
     "use strict";
     init_entity();
     init_common4();
-    MySqlSerialBuilder = class extends (_b198 = MySqlColumnBuilderWithAutoIncrement, _a275 = entityKind, _b198) {
+    MySqlSerialBuilder = class extends (_b210 = MySqlColumnBuilderWithAutoIncrement, _a287 = entityKind, _b210) {
       constructor(name2) {
         super(name2, "number", "MySqlSerial");
         this.config.hasDefault = true;
@@ -36743,8 +36996,8 @@ var init_serial2 = __esm({
         return new MySqlSerial(table6, this.config);
       }
     };
-    __publicField(MySqlSerialBuilder, _a275, "MySqlSerialBuilder");
-    MySqlSerial = class extends (_b199 = MySqlColumnWithAutoIncrement, _a276 = entityKind, _b199) {
+    __publicField(MySqlSerialBuilder, _a287, "MySqlSerialBuilder");
+    MySqlSerial = class extends (_b211 = MySqlColumnWithAutoIncrement, _a288 = entityKind, _b211) {
       getSQLType() {
         return "serial";
       }
@@ -36755,7 +37008,7 @@ var init_serial2 = __esm({
         return value;
       }
     };
-    __publicField(MySqlSerial, _a276, "MySqlSerial");
+    __publicField(MySqlSerial, _a288, "MySqlSerial");
   }
 });
 
@@ -36764,14 +37017,14 @@ function smallint2(a, b) {
   const { name: name2, config } = getColumnNameAndConfig(a, b);
   return new MySqlSmallIntBuilder(name2, config);
 }
-var _a277, _b200, MySqlSmallIntBuilder, _a278, _b201, MySqlSmallInt;
+var _a289, _b212, MySqlSmallIntBuilder, _a290, _b213, MySqlSmallInt;
 var init_smallint2 = __esm({
   "../drizzle-orm/dist/mysql-core/columns/smallint.js"() {
     "use strict";
     init_entity();
     init_utils2();
     init_common4();
-    MySqlSmallIntBuilder = class extends (_b200 = MySqlColumnBuilderWithAutoIncrement, _a277 = entityKind, _b200) {
+    MySqlSmallIntBuilder = class extends (_b212 = MySqlColumnBuilderWithAutoIncrement, _a289 = entityKind, _b212) {
       constructor(name2, config) {
         super(name2, "number", "MySqlSmallInt");
         this.config.unsigned = config ? config.unsigned : false;
@@ -36784,8 +37037,8 @@ var init_smallint2 = __esm({
         );
       }
     };
-    __publicField(MySqlSmallIntBuilder, _a277, "MySqlSmallIntBuilder");
-    MySqlSmallInt = class extends (_b201 = MySqlColumnWithAutoIncrement, _a278 = entityKind, _b201) {
+    __publicField(MySqlSmallIntBuilder, _a289, "MySqlSmallIntBuilder");
+    MySqlSmallInt = class extends (_b213 = MySqlColumnWithAutoIncrement, _a290 = entityKind, _b213) {
       getSQLType() {
         return `smallint${this.config.unsigned ? " unsigned" : ""}`;
       }
@@ -36796,7 +37049,7 @@ var init_smallint2 = __esm({
         return value;
       }
     };
-    __publicField(MySqlSmallInt, _a278, "MySqlSmallInt");
+    __publicField(MySqlSmallInt, _a290, "MySqlSmallInt");
   }
 });
 
@@ -36817,14 +37070,14 @@ function longtext(a, b = {}) {
   const { name: name2, config } = getColumnNameAndConfig(a, b);
   return new MySqlTextBuilder(name2, "longtext", config);
 }
-var _a279, _b202, MySqlTextBuilder, _a280, _b203, MySqlText;
+var _a291, _b214, MySqlTextBuilder, _a292, _b215, MySqlText;
 var init_text3 = __esm({
   "../drizzle-orm/dist/mysql-core/columns/text.js"() {
     "use strict";
     init_entity();
     init_utils2();
     init_common4();
-    MySqlTextBuilder = class extends (_b202 = MySqlColumnBuilder, _a279 = entityKind, _b202) {
+    MySqlTextBuilder = class extends (_b214 = MySqlColumnBuilder, _a291 = entityKind, _b214) {
       constructor(name2, textType, config) {
         super(name2, "string", "MySqlText");
         this.config.textType = textType;
@@ -36835,8 +37088,8 @@ var init_text3 = __esm({
         return new MySqlText(table6, this.config);
       }
     };
-    __publicField(MySqlTextBuilder, _a279, "MySqlTextBuilder");
-    MySqlText = class extends (_b203 = MySqlColumn, _a280 = entityKind, _b203) {
+    __publicField(MySqlTextBuilder, _a291, "MySqlTextBuilder");
+    MySqlText = class extends (_b215 = MySqlColumn, _a292 = entityKind, _b215) {
       constructor() {
         super(...arguments);
         __publicField(this, "textType", this.config.textType);
@@ -36846,7 +37099,7 @@ var init_text3 = __esm({
         return this.textType;
       }
     };
-    __publicField(MySqlText, _a280, "MySqlText");
+    __publicField(MySqlText, _a292, "MySqlText");
   }
 });
 
@@ -36855,14 +37108,14 @@ function time2(a, b) {
   const { name: name2, config } = getColumnNameAndConfig(a, b);
   return new MySqlTimeBuilder(name2, config);
 }
-var _a281, _b204, MySqlTimeBuilder, _a282, _b205, MySqlTime;
+var _a293, _b216, MySqlTimeBuilder, _a294, _b217, MySqlTime;
 var init_time2 = __esm({
   "../drizzle-orm/dist/mysql-core/columns/time.js"() {
     "use strict";
     init_entity();
     init_utils2();
     init_common4();
-    MySqlTimeBuilder = class extends (_b204 = MySqlColumnBuilder, _a281 = entityKind, _b204) {
+    MySqlTimeBuilder = class extends (_b216 = MySqlColumnBuilder, _a293 = entityKind, _b216) {
       constructor(name2, config) {
         super(name2, "string", "MySqlTime");
         this.config.fsp = config?.fsp;
@@ -36872,8 +37125,8 @@ var init_time2 = __esm({
         return new MySqlTime(table6, this.config);
       }
     };
-    __publicField(MySqlTimeBuilder, _a281, "MySqlTimeBuilder");
-    MySqlTime = class extends (_b205 = MySqlColumn, _a282 = entityKind, _b205) {
+    __publicField(MySqlTimeBuilder, _a293, "MySqlTimeBuilder");
+    MySqlTime = class extends (_b217 = MySqlColumn, _a294 = entityKind, _b217) {
       constructor() {
         super(...arguments);
         __publicField(this, "fsp", this.config.fsp);
@@ -36883,19 +37136,19 @@ var init_time2 = __esm({
         return `time${precision}`;
       }
     };
-    __publicField(MySqlTime, _a282, "MySqlTime");
+    __publicField(MySqlTime, _a294, "MySqlTime");
   }
 });
 
 // ../drizzle-orm/dist/mysql-core/columns/date.common.js
-var _a283, _b206, MySqlDateColumnBaseBuilder, _a284, _b207, MySqlDateBaseColumn;
+var _a295, _b218, MySqlDateColumnBaseBuilder, _a296, _b219, MySqlDateBaseColumn;
 var init_date_common2 = __esm({
   "../drizzle-orm/dist/mysql-core/columns/date.common.js"() {
     "use strict";
     init_entity();
     init_sql();
     init_common4();
-    MySqlDateColumnBaseBuilder = class extends (_b206 = MySqlColumnBuilder, _a283 = entityKind, _b206) {
+    MySqlDateColumnBaseBuilder = class extends (_b218 = MySqlColumnBuilder, _a295 = entityKind, _b218) {
       defaultNow() {
         return this.default(sql`(now())`);
       }
@@ -36906,14 +37159,14 @@ var init_date_common2 = __esm({
         return this;
       }
     };
-    __publicField(MySqlDateColumnBaseBuilder, _a283, "MySqlDateColumnBuilder");
-    MySqlDateBaseColumn = class extends (_b207 = MySqlColumn, _a284 = entityKind, _b207) {
+    __publicField(MySqlDateColumnBaseBuilder, _a295, "MySqlDateColumnBuilder");
+    MySqlDateBaseColumn = class extends (_b219 = MySqlColumn, _a296 = entityKind, _b219) {
       constructor() {
         super(...arguments);
         __publicField(this, "hasOnUpdateNow", this.config.hasOnUpdateNow);
       }
     };
-    __publicField(MySqlDateBaseColumn, _a284, "MySqlDateColumn");
+    __publicField(MySqlDateBaseColumn, _a296, "MySqlDateColumn");
   }
 });
 
@@ -36925,14 +37178,14 @@ function timestamp2(a, b = {}) {
   }
   return new MySqlTimestampBuilder(name2, config);
 }
-var _a285, _b208, MySqlTimestampBuilder, _a286, _b209, MySqlTimestamp, _a287, _b210, MySqlTimestampStringBuilder, _a288, _b211, MySqlTimestampString;
+var _a297, _b220, MySqlTimestampBuilder, _a298, _b221, MySqlTimestamp, _a299, _b222, MySqlTimestampStringBuilder, _a300, _b223, MySqlTimestampString;
 var init_timestamp2 = __esm({
   "../drizzle-orm/dist/mysql-core/columns/timestamp.js"() {
     "use strict";
     init_entity();
     init_utils2();
     init_date_common2();
-    MySqlTimestampBuilder = class extends (_b208 = MySqlDateColumnBaseBuilder, _a285 = entityKind, _b208) {
+    MySqlTimestampBuilder = class extends (_b220 = MySqlDateColumnBaseBuilder, _a297 = entityKind, _b220) {
       constructor(name2, config) {
         super(name2, "date", "MySqlTimestamp");
         this.config.fsp = config?.fsp;
@@ -36945,8 +37198,8 @@ var init_timestamp2 = __esm({
         );
       }
     };
-    __publicField(MySqlTimestampBuilder, _a285, "MySqlTimestampBuilder");
-    MySqlTimestamp = class extends (_b209 = MySqlDateBaseColumn, _a286 = entityKind, _b209) {
+    __publicField(MySqlTimestampBuilder, _a297, "MySqlTimestampBuilder");
+    MySqlTimestamp = class extends (_b221 = MySqlDateBaseColumn, _a298 = entityKind, _b221) {
       constructor() {
         super(...arguments);
         __publicField(this, "fsp", this.config.fsp);
@@ -36962,8 +37215,8 @@ var init_timestamp2 = __esm({
         return value.toISOString().slice(0, -1).replace("T", " ");
       }
     };
-    __publicField(MySqlTimestamp, _a286, "MySqlTimestamp");
-    MySqlTimestampStringBuilder = class extends (_b210 = MySqlDateColumnBaseBuilder, _a287 = entityKind, _b210) {
+    __publicField(MySqlTimestamp, _a298, "MySqlTimestamp");
+    MySqlTimestampStringBuilder = class extends (_b222 = MySqlDateColumnBaseBuilder, _a299 = entityKind, _b222) {
       constructor(name2, config) {
         super(name2, "string", "MySqlTimestampString");
         this.config.fsp = config?.fsp;
@@ -36976,8 +37229,8 @@ var init_timestamp2 = __esm({
         );
       }
     };
-    __publicField(MySqlTimestampStringBuilder, _a287, "MySqlTimestampStringBuilder");
-    MySqlTimestampString = class extends (_b211 = MySqlDateBaseColumn, _a288 = entityKind, _b211) {
+    __publicField(MySqlTimestampStringBuilder, _a299, "MySqlTimestampStringBuilder");
+    MySqlTimestampString = class extends (_b223 = MySqlDateBaseColumn, _a300 = entityKind, _b223) {
       constructor() {
         super(...arguments);
         __publicField(this, "fsp", this.config.fsp);
@@ -36987,7 +37240,7 @@ var init_timestamp2 = __esm({
         return `timestamp${precision}`;
       }
     };
-    __publicField(MySqlTimestampString, _a288, "MySqlTimestampString");
+    __publicField(MySqlTimestampString, _a300, "MySqlTimestampString");
   }
 });
 
@@ -36996,14 +37249,14 @@ function tinyint(a, b) {
   const { name: name2, config } = getColumnNameAndConfig(a, b);
   return new MySqlTinyIntBuilder(name2, config);
 }
-var _a289, _b212, MySqlTinyIntBuilder, _a290, _b213, MySqlTinyInt;
+var _a301, _b224, MySqlTinyIntBuilder, _a302, _b225, MySqlTinyInt;
 var init_tinyint = __esm({
   "../drizzle-orm/dist/mysql-core/columns/tinyint.js"() {
     "use strict";
     init_entity();
     init_utils2();
     init_common4();
-    MySqlTinyIntBuilder = class extends (_b212 = MySqlColumnBuilderWithAutoIncrement, _a289 = entityKind, _b212) {
+    MySqlTinyIntBuilder = class extends (_b224 = MySqlColumnBuilderWithAutoIncrement, _a301 = entityKind, _b224) {
       constructor(name2, config) {
         super(name2, "number", "MySqlTinyInt");
         this.config.unsigned = config ? config.unsigned : false;
@@ -37016,8 +37269,8 @@ var init_tinyint = __esm({
         );
       }
     };
-    __publicField(MySqlTinyIntBuilder, _a289, "MySqlTinyIntBuilder");
-    MySqlTinyInt = class extends (_b213 = MySqlColumnWithAutoIncrement, _a290 = entityKind, _b213) {
+    __publicField(MySqlTinyIntBuilder, _a301, "MySqlTinyIntBuilder");
+    MySqlTinyInt = class extends (_b225 = MySqlColumnWithAutoIncrement, _a302 = entityKind, _b225) {
       getSQLType() {
         return `tinyint${this.config.unsigned ? " unsigned" : ""}`;
       }
@@ -37028,7 +37281,7 @@ var init_tinyint = __esm({
         return value;
       }
     };
-    __publicField(MySqlTinyInt, _a290, "MySqlTinyInt");
+    __publicField(MySqlTinyInt, _a302, "MySqlTinyInt");
   }
 });
 
@@ -37037,14 +37290,14 @@ function varbinary(a, b) {
   const { name: name2, config } = getColumnNameAndConfig(a, b);
   return new MySqlVarBinaryBuilder(name2, config);
 }
-var _a291, _b214, MySqlVarBinaryBuilder, _a292, _b215, MySqlVarBinary;
+var _a303, _b226, MySqlVarBinaryBuilder, _a304, _b227, MySqlVarBinary;
 var init_varbinary = __esm({
   "../drizzle-orm/dist/mysql-core/columns/varbinary.js"() {
     "use strict";
     init_entity();
     init_utils2();
     init_common4();
-    MySqlVarBinaryBuilder = class extends (_b214 = MySqlColumnBuilder, _a291 = entityKind, _b214) {
+    MySqlVarBinaryBuilder = class extends (_b226 = MySqlColumnBuilder, _a303 = entityKind, _b226) {
       /** @internal */
       constructor(name2, config) {
         super(name2, "string", "MySqlVarBinary");
@@ -37058,17 +37311,28 @@ var init_varbinary = __esm({
         );
       }
     };
-    __publicField(MySqlVarBinaryBuilder, _a291, "MySqlVarBinaryBuilder");
-    MySqlVarBinary = class extends (_b215 = MySqlColumn, _a292 = entityKind, _b215) {
+    __publicField(MySqlVarBinaryBuilder, _a303, "MySqlVarBinaryBuilder");
+    MySqlVarBinary = class extends (_b227 = MySqlColumn, _a304 = entityKind, _b227) {
       constructor() {
         super(...arguments);
         __publicField(this, "length", this.config.length);
       }
+      mapFromDriverValue(value) {
+        if (typeof value === "string")
+          return value;
+        if (Buffer.isBuffer(value))
+          return value.toString();
+        const str = [];
+        for (const v of value) {
+          str.push(v === 49 ? "1" : "0");
+        }
+        return str.join("");
+      }
       getSQLType() {
         return this.length === void 0 ? `varbinary` : `varbinary(${this.length})`;
       }
     };
-    __publicField(MySqlVarBinary, _a292, "MySqlVarBinary");
+    __publicField(MySqlVarBinary, _a304, "MySqlVarBinary");
   }
 });
 
@@ -37077,14 +37341,14 @@ function varchar2(a, b) {
   const { name: name2, config } = getColumnNameAndConfig(a, b);
   return new MySqlVarCharBuilder(name2, config);
 }
-var _a293, _b216, MySqlVarCharBuilder, _a294, _b217, MySqlVarChar;
+var _a305, _b228, MySqlVarCharBuilder, _a306, _b229, MySqlVarChar;
 var init_varchar2 = __esm({
   "../drizzle-orm/dist/mysql-core/columns/varchar.js"() {
     "use strict";
     init_entity();
     init_utils2();
     init_common4();
-    MySqlVarCharBuilder = class extends (_b216 = MySqlColumnBuilder, _a293 = entityKind, _b216) {
+    MySqlVarCharBuilder = class extends (_b228 = MySqlColumnBuilder, _a305 = entityKind, _b228) {
       /** @internal */
       constructor(name2, config) {
         super(name2, "string", "MySqlVarChar");
@@ -37099,8 +37363,8 @@ var init_varchar2 = __esm({
         );
       }
     };
-    __publicField(MySqlVarCharBuilder, _a293, "MySqlVarCharBuilder");
-    MySqlVarChar = class extends (_b217 = MySqlColumn, _a294 = entityKind, _b217) {
+    __publicField(MySqlVarCharBuilder, _a305, "MySqlVarCharBuilder");
+    MySqlVarChar = class extends (_b229 = MySqlColumn, _a306 = entityKind, _b229) {
       constructor() {
         super(...arguments);
         __publicField(this, "length", this.config.length);
@@ -37110,7 +37374,7 @@ var init_varchar2 = __esm({
         return this.length === void 0 ? `varchar` : `varchar(${this.length})`;
       }
     };
-    __publicField(MySqlVarChar, _a294, "MySqlVarChar");
+    __publicField(MySqlVarChar, _a306, "MySqlVarChar");
   }
 });
 
@@ -37118,13 +37382,13 @@ var init_varchar2 = __esm({
 function year(name2) {
   return new MySqlYearBuilder(name2 ?? "");
 }
-var _a295, _b218, MySqlYearBuilder, _a296, _b219, MySqlYear;
+var _a307, _b230, MySqlYearBuilder, _a308, _b231, MySqlYear;
 var init_year = __esm({
   "../drizzle-orm/dist/mysql-core/columns/year.js"() {
     "use strict";
     init_entity();
     init_common4();
-    MySqlYearBuilder = class extends (_b218 = MySqlColumnBuilder, _a295 = entityKind, _b218) {
+    MySqlYearBuilder = class extends (_b230 = MySqlColumnBuilder, _a307 = entityKind, _b230) {
       constructor(name2) {
         super(name2, "number", "MySqlYear");
       }
@@ -37133,13 +37397,13 @@ var init_year = __esm({
         return new MySqlYear(table6, this.config);
       }
     };
-    __publicField(MySqlYearBuilder, _a295, "MySqlYearBuilder");
-    MySqlYear = class extends (_b219 = MySqlColumn, _a296 = entityKind, _b219) {
+    __publicField(MySqlYearBuilder, _a307, "MySqlYearBuilder");
+    MySqlYear = class extends (_b231 = MySqlColumn, _a308 = entityKind, _b231) {
       getSQLType() {
         return `year`;
       }
     };
-    __publicField(MySqlYear, _a296, "MySqlYear");
+    __publicField(MySqlYear, _a308, "MySqlYear");
   }
 });
 
@@ -37176,17 +37440,17 @@ var init_columns3 = __esm({
 });
 
 // ../drizzle-orm/dist/mysql-core/query-builders/count.js
-var _a297, _b220, _c9, _MySqlCountBuilder, MySqlCountBuilder;
+var _a309, _b232, _c9, _MySqlCountBuilder, MySqlCountBuilder;
 var init_count3 = __esm({
   "../drizzle-orm/dist/mysql-core/query-builders/count.js"() {
     "use strict";
     init_entity();
     init_sql();
-    _MySqlCountBuilder = class _MySqlCountBuilder extends (_c9 = SQL, _b220 = entityKind, _a297 = Symbol.toStringTag, _c9) {
+    _MySqlCountBuilder = class _MySqlCountBuilder extends (_c9 = SQL, _b232 = entityKind, _a309 = Symbol.toStringTag, _c9) {
       constructor(params) {
         super(_MySqlCountBuilder.buildEmbeddedCount(params.source, params.filters).queryChunks);
         __publicField(this, "sql");
-        __publicField(this, _a297, "MySqlCountBuilder");
+        __publicField(this, _a309, "MySqlCountBuilder");
         __publicField(this, "session");
         this.params = params;
         this.mapWith(Number);
@@ -37224,13 +37488,13 @@ var init_count3 = __esm({
         );
       }
     };
-    __publicField(_MySqlCountBuilder, _b220, "MySqlCountBuilder");
+    __publicField(_MySqlCountBuilder, _b232, "MySqlCountBuilder");
     MySqlCountBuilder = _MySqlCountBuilder;
   }
 });
 
 // ../drizzle-orm/dist/mysql-core/query-builders/delete.js
-var _a298, _b221, MySqlDeleteBase;
+var _a310, _b233, MySqlDeleteBase;
 var init_delete3 = __esm({
   "../drizzle-orm/dist/mysql-core/query-builders/delete.js"() {
     "use strict";
@@ -37238,7 +37502,7 @@ var init_delete3 = __esm({
     init_query_promise();
     init_selection_proxy();
     init_table();
-    MySqlDeleteBase = class extends (_b221 = QueryPromise, _a298 = entityKind, _b221) {
+    MySqlDeleteBase = class extends (_b233 = QueryPromise, _a310 = entityKind, _b233) {
       constructor(table6, session, dialect6, withList) {
         super();
         __publicField(this, "config");
@@ -37328,7 +37592,7 @@ var init_delete3 = __esm({
         return this;
       }
     };
-    __publicField(MySqlDeleteBase, _a298, "MySqlDelete");
+    __publicField(MySqlDeleteBase, _a310, "MySqlDelete");
   }
 });
 
@@ -37415,7 +37679,7 @@ function mysqlTableWithSchema(name2, columns, extraConfig, schema5, baseName = n
   }
   return table6;
 }
-var InlineForeignKeys3, _a299, _b222, _c10, _d4, _e4, MySqlTable, mysqlTable;
+var InlineForeignKeys3, _a311, _b234, _c10, _d4, _e4, MySqlTable, mysqlTable;
 var init_table4 = __esm({
   "../drizzle-orm/dist/mysql-core/table.js"() {
     "use strict";
@@ -37423,15 +37687,15 @@ var init_table4 = __esm({
     init_table();
     init_all3();
     InlineForeignKeys3 = Symbol.for("drizzle:MySqlInlineForeignKeys");
-    MySqlTable = class extends (_e4 = Table2, _d4 = entityKind, _c10 = Table2.Symbol.Columns, _b222 = InlineForeignKeys3, _a299 = Table2.Symbol.ExtraConfigBuilder, _e4) {
+    MySqlTable = class extends (_e4 = Table2, _d4 = entityKind, _c10 = Table2.Symbol.Columns, _b234 = InlineForeignKeys3, _a311 = Table2.Symbol.ExtraConfigBuilder, _e4) {
       constructor() {
         super(...arguments);
         /** @internal */
         __publicField(this, _c10);
         /** @internal */
-        __publicField(this, _b222, []);
+        __publicField(this, _b234, []);
         /** @internal */
-        __publicField(this, _a299);
+        __publicField(this, _a311);
       }
     };
     __publicField(MySqlTable, _d4, "MySqlTable");
@@ -37446,20 +37710,20 @@ var init_table4 = __esm({
 });
 
 // ../drizzle-orm/dist/mysql-core/view-base.js
-var _a300, _b223, MySqlViewBase;
+var _a312, _b235, MySqlViewBase;
 var init_view_base3 = __esm({
   "../drizzle-orm/dist/mysql-core/view-base.js"() {
     "use strict";
     init_entity();
     init_sql();
-    MySqlViewBase = class extends (_b223 = View3, _a300 = entityKind, _b223) {
+    MySqlViewBase = class extends (_b235 = View3, _a312 = entityKind, _b235) {
     };
-    __publicField(MySqlViewBase, _a300, "MySqlViewBase");
+    __publicField(MySqlViewBase, _a312, "MySqlViewBase");
   }
 });
 
 // ../drizzle-orm/dist/mysql-core/dialect.js
-var _a301, MySqlDialect;
+var _a313, MySqlDialect;
 var init_dialect3 = __esm({
   "../drizzle-orm/dist/mysql-core/dialect.js"() {
     "use strict";
@@ -37478,7 +37742,7 @@ var init_dialect3 = __esm({
     init_common4();
     init_table4();
     init_view_base3();
-    _a301 = entityKind;
+    _a313 = entityKind;
     MySqlDialect = class {
       constructor(config) {
         /** @internal */
@@ -37664,8 +37928,8 @@ var init_dialect3 = __esm({
         const distinctSql = distinct ? sql` distinct` : void 0;
         const selection = this.buildSelection(fieldsList, { isSingleTable });
         const tableSql = (() => {
-          if (is(table6, Table2) && table6[Table2.Symbol.OriginalName] !== table6[Table2.Symbol.Name]) {
-            return sql`${sql.identifier(table6[Table2.Symbol.OriginalName])} ${sql.identifier(table6[Table2.Symbol.Name])}`;
+          if (is(table6, Table2) && table6[Table2.Symbol.IsAlias]) {
+            return sql`${sql`${sql.identifier(table6[Table2.Symbol.Schema] ?? "")}.`.if(table6[Table2.Symbol.Schema])}${sql.identifier(table6[Table2.Symbol.OriginalName])} ${sql.identifier(table6[Table2.Symbol.Name])}`;
           }
           return table6;
         })();
@@ -38290,17 +38554,17 @@ var init_dialect3 = __esm({
         };
       }
     };
-    __publicField(MySqlDialect, _a301, "MySqlDialect");
+    __publicField(MySqlDialect, _a313, "MySqlDialect");
   }
 });
 
 // ../drizzle-orm/dist/mysql-core/indexes.js
-var _a302, IndexBuilderOn3, _a303, IndexBuilder3, _a304, Index5;
+var _a314, IndexBuilderOn3, _a315, IndexBuilder3, _a316, Index5;
 var init_indexes3 = __esm({
   "../drizzle-orm/dist/mysql-core/indexes.js"() {
     "use strict";
     init_entity();
-    _a302 = entityKind;
+    _a314 = entityKind;
     IndexBuilderOn3 = class {
       constructor(name2, unique) {
         this.name = name2;
@@ -38310,8 +38574,8 @@ var init_indexes3 = __esm({
         return new IndexBuilder3(this.name, columns, this.unique);
       }
     };
-    __publicField(IndexBuilderOn3, _a302, "MySqlIndexBuilderOn");
-    _a303 = entityKind;
+    __publicField(IndexBuilderOn3, _a314, "MySqlIndexBuilderOn");
+    _a315 = entityKind;
     IndexBuilder3 = class {
       constructor(name2, columns, unique) {
         /** @internal */
@@ -38339,26 +38603,26 @@ var init_indexes3 = __esm({
         return new Index5(this.config, table6);
       }
     };
-    __publicField(IndexBuilder3, _a303, "MySqlIndexBuilder");
-    _a304 = entityKind;
+    __publicField(IndexBuilder3, _a315, "MySqlIndexBuilder");
+    _a316 = entityKind;
     Index5 = class {
       constructor(config, table6) {
         __publicField(this, "config");
         this.config = { ...config, table: table6 };
       }
     };
-    __publicField(Index5, _a304, "MySqlIndex");
+    __publicField(Index5, _a316, "MySqlIndex");
   }
 });
 
 // ../drizzle-orm/dist/mysql-core/primary-keys.js
-var _a305, PrimaryKeyBuilder3, _a306, PrimaryKey3;
+var _a317, PrimaryKeyBuilder3, _a318, PrimaryKey3;
 var init_primary_keys3 = __esm({
   "../drizzle-orm/dist/mysql-core/primary-keys.js"() {
     "use strict";
     init_entity();
     init_table4();
-    _a305 = entityKind;
+    _a317 = entityKind;
     PrimaryKeyBuilder3 = class {
       constructor(columns, name2) {
         /** @internal */
@@ -38373,8 +38637,8 @@ var init_primary_keys3 = __esm({
         return new PrimaryKey3(table6, this.columns, this.name);
       }
     };
-    __publicField(PrimaryKeyBuilder3, _a305, "MySqlPrimaryKeyBuilder");
-    _a306 = entityKind;
+    __publicField(PrimaryKeyBuilder3, _a317, "MySqlPrimaryKeyBuilder");
+    _a318 = entityKind;
     PrimaryKey3 = class {
       constructor(table6, columns, name2) {
         __publicField(this, "columns");
@@ -38387,7 +38651,7 @@ var init_primary_keys3 = __esm({
         return this.name ?? `${this.table[MySqlTable.Symbol.Name]}_${this.columns.map((column6) => column6.name).join("_")}_pk`;
       }
     };
-    __publicField(PrimaryKey3, _a306, "MySqlPrimaryKey");
+    __publicField(PrimaryKey3, _a318, "MySqlPrimaryKey");
   }
 });
 
@@ -38489,7 +38753,7 @@ function createSetOperator3(type, isAll) {
     return leftSelect.addSetOperators(setOperators);
   };
 }
-var _a307, MySqlSelectBuilder, _a308, _b224, MySqlSelectQueryBuilderBase, _a309, _b225, MySqlSelectBase, getMySqlSetOperators, union4, unionAll3, intersect3, intersectAll2, except3, exceptAll2;
+var _a319, MySqlSelectBuilder, _a320, _b236, MySqlSelectQueryBuilderBase, _a321, _b237, MySqlSelectBase, getMySqlSetOperators, union4, unionAll3, intersect3, intersectAll2, except3, exceptAll2;
 var init_select4 = __esm({
   "../drizzle-orm/dist/mysql-core/query-builders/select.js"() {
     "use strict";
@@ -38505,7 +38769,7 @@ var init_select4 = __esm({
     init_view_common();
     init_utils8();
     init_view_base3();
-    _a307 = entityKind;
+    _a319 = entityKind;
     MySqlSelectBuilder = class {
       constructor(config) {
         __publicField(this, "fields");
@@ -38567,8 +38831,8 @@ var init_select4 = __esm({
         );
       }
     };
-    __publicField(MySqlSelectBuilder, _a307, "MySqlSelectBuilder");
-    MySqlSelectQueryBuilderBase = class extends (_b224 = TypedQueryBuilder, _a308 = entityKind, _b224) {
+    __publicField(MySqlSelectBuilder, _a319, "MySqlSelectBuilder");
+    MySqlSelectQueryBuilderBase = class extends (_b236 = TypedQueryBuilder, _a320 = entityKind, _b236) {
       constructor({ table: table6, fields, isPartialSelect, session, dialect: dialect6, withList, distinct, useIndex, forceIndex, ignoreIndex }) {
         super();
         __publicField(this, "_");
@@ -38940,7 +39204,7 @@ var init_select4 = __esm({
         return (table6, on, onIndex) => {
           const baseTableName = this.tableName;
           const tableName = getTableLikeName(table6);
-          if (typeof tableName === "string" && this.config.joins?.some((join) => join.alias === tableName)) {
+          if (typeof tableName === "string" && this.config.joins?.some((join2) => join2.alias === tableName)) {
             throw new Error(`Alias "${tableName}" is already used in this query`);
           }
           if (!this.isPartialSelect) {
@@ -39226,8 +39490,8 @@ var init_select4 = __esm({
         return this;
       }
     };
-    __publicField(MySqlSelectQueryBuilderBase, _a308, "MySqlSelectQueryBuilder");
-    MySqlSelectBase = class extends (_b225 = MySqlSelectQueryBuilderBase, _a309 = entityKind, _b225) {
+    __publicField(MySqlSelectQueryBuilderBase, _a320, "MySqlSelectQueryBuilder");
+    MySqlSelectBase = class extends (_b237 = MySqlSelectQueryBuilderBase, _a321 = entityKind, _b237) {
       constructor() {
         super(...arguments);
         __publicField(this, "execute", (placeholderValues) => {
@@ -39251,7 +39515,7 @@ var init_select4 = __esm({
         return query;
       }
     };
-    __publicField(MySqlSelectBase, _a309, "MySqlSelect");
+    __publicField(MySqlSelectBase, _a321, "MySqlSelect");
     applyMixins(MySqlSelectBase, [QueryPromise]);
     getMySqlSetOperators = () => ({
       union: union4,
@@ -39271,7 +39535,7 @@ var init_select4 = __esm({
 });
 
 // ../drizzle-orm/dist/mysql-core/query-builders/query-builder.js
-var _a310, QueryBuilder3;
+var _a322, QueryBuilder3;
 var init_query_builder4 = __esm({
   "../drizzle-orm/dist/mysql-core/query-builders/query-builder.js"() {
     "use strict";
@@ -39280,7 +39544,7 @@ var init_query_builder4 = __esm({
     init_selection_proxy();
     init_subquery();
     init_select4();
-    _a310 = entityKind;
+    _a322 = entityKind;
     QueryBuilder3 = class {
       constructor(dialect6) {
         __publicField(this, "dialect");
@@ -39346,12 +39610,12 @@ var init_query_builder4 = __esm({
         return this.dialect;
       }
     };
-    __publicField(QueryBuilder3, _a310, "MySqlQueryBuilder");
+    __publicField(QueryBuilder3, _a322, "MySqlQueryBuilder");
   }
 });
 
 // ../drizzle-orm/dist/mysql-core/query-builders/insert.js
-var _a311, MySqlInsertBuilder, _a312, _b226, MySqlInsertBase;
+var _a323, MySqlInsertBuilder, _a324, _b238, MySqlInsertBase;
 var init_insert3 = __esm({
   "../drizzle-orm/dist/mysql-core/query-builders/insert.js"() {
     "use strict";
@@ -39361,7 +39625,7 @@ var init_insert3 = __esm({
     init_table();
     init_utils2();
     init_query_builder4();
-    _a311 = entityKind;
+    _a323 = entityKind;
     MySqlInsertBuilder = class {
       constructor(table6, session, dialect6) {
         __publicField(this, "shouldIgnore", false);
@@ -39399,8 +39663,8 @@ var init_insert3 = __esm({
         return new MySqlInsertBase(this.table, select, this.shouldIgnore, this.session, this.dialect, true);
       }
     };
-    __publicField(MySqlInsertBuilder, _a311, "MySqlInsertBuilder");
-    MySqlInsertBase = class extends (_b226 = QueryPromise, _a312 = entityKind, _b226) {
+    __publicField(MySqlInsertBuilder, _a323, "MySqlInsertBuilder");
+    MySqlInsertBase = class extends (_b238 = QueryPromise, _a324 = entityKind, _b238) {
       constructor(table6, values, ignore, session, dialect6, select) {
         super();
         __publicField(this, "config");
@@ -39481,7 +39745,7 @@ var init_insert3 = __esm({
         return this;
       }
     };
-    __publicField(MySqlInsertBase, _a312, "MySqlInsert");
+    __publicField(MySqlInsertBase, _a324, "MySqlInsert");
   }
 });
 
@@ -39493,7 +39757,7 @@ var init_select_types3 = __esm({
 });
 
 // ../drizzle-orm/dist/mysql-core/query-builders/update.js
-var _a313, MySqlUpdateBuilder, _a314, _b227, MySqlUpdateBase;
+var _a325, MySqlUpdateBuilder, _a326, _b239, MySqlUpdateBase;
 var init_update3 = __esm({
   "../drizzle-orm/dist/mysql-core/query-builders/update.js"() {
     "use strict";
@@ -39502,7 +39766,7 @@ var init_update3 = __esm({
     init_selection_proxy();
     init_table();
     init_utils2();
-    _a313 = entityKind;
+    _a325 = entityKind;
     MySqlUpdateBuilder = class {
       constructor(table6, session, dialect6, withList) {
         this.table = table6;
@@ -39514,8 +39778,8 @@ var init_update3 = __esm({
         return new MySqlUpdateBase(this.table, mapUpdateSet(this.table, values), this.session, this.dialect, this.withList);
       }
     };
-    __publicField(MySqlUpdateBuilder, _a313, "MySqlUpdateBuilder");
-    MySqlUpdateBase = class extends (_b227 = QueryPromise, _a314 = entityKind, _b227) {
+    __publicField(MySqlUpdateBuilder, _a325, "MySqlUpdateBuilder");
+    MySqlUpdateBase = class extends (_b239 = QueryPromise, _a326 = entityKind, _b239) {
       constructor(table6, set, session, dialect6, withList) {
         super();
         __publicField(this, "config");
@@ -39608,7 +39872,7 @@ var init_update3 = __esm({
         return this;
       }
     };
-    __publicField(MySqlUpdateBase, _a314, "MySqlUpdate");
+    __publicField(MySqlUpdateBase, _a326, "MySqlUpdate");
   }
 });
 
@@ -39626,14 +39890,14 @@ var init_query_builders3 = __esm({
 });
 
 // ../drizzle-orm/dist/mysql-core/query-builders/query.js
-var _a315, RelationalQueryBuilder3, _a316, _b228, MySqlRelationalQuery;
+var _a327, RelationalQueryBuilder3, _a328, _b240, MySqlRelationalQuery;
 var init_query3 = __esm({
   "../drizzle-orm/dist/mysql-core/query-builders/query.js"() {
     "use strict";
     init_entity();
     init_query_promise();
     init_relations();
-    _a315 = entityKind;
+    _a327 = entityKind;
     RelationalQueryBuilder3 = class {
       constructor(fullSchema, schema5, tableNamesMap, table6, tableConfig, dialect6, session, mode) {
         this.fullSchema = fullSchema;
@@ -39674,8 +39938,8 @@ var init_query3 = __esm({
         );
       }
     };
-    __publicField(RelationalQueryBuilder3, _a315, "MySqlRelationalQueryBuilder");
-    MySqlRelationalQuery = class extends (_b228 = QueryPromise, _a316 = entityKind, _b228) {
+    __publicField(RelationalQueryBuilder3, _a327, "MySqlRelationalQueryBuilder");
+    MySqlRelationalQuery = class extends (_b240 = QueryPromise, _a328 = entityKind, _b240) {
       constructor(fullSchema, schema5, tableNamesMap, table6, tableConfig, dialect6, session, config, queryMode, mode) {
         super();
         this.fullSchema = fullSchema;
@@ -39739,12 +40003,12 @@ var init_query3 = __esm({
         return this.prepare().execute();
       }
     };
-    __publicField(MySqlRelationalQuery, _a316, "MySqlRelationalQuery");
+    __publicField(MySqlRelationalQuery, _a328, "MySqlRelationalQuery");
   }
 });
 
 // ../drizzle-orm/dist/mysql-core/db.js
-var _a317, MySqlDatabase;
+var _a329, MySqlDatabase;
 var init_db3 = __esm({
   "../drizzle-orm/dist/mysql-core/db.js"() {
     "use strict";
@@ -39755,7 +40019,7 @@ var init_db3 = __esm({
     init_count3();
     init_query_builders3();
     init_query3();
-    _a317 = entityKind;
+    _a329 = entityKind;
     MySqlDatabase = class {
       constructor(dialect6, session, schema5, mode) {
         __publicField(this, "query");
@@ -39972,7 +40236,7 @@ var init_db3 = __esm({
         return this.session.transaction(transaction, config);
       }
     };
-    __publicField(MySqlDatabase, _a317, "MySqlDatabase");
+    __publicField(MySqlDatabase, _a329, "MySqlDatabase");
   }
 });
 
@@ -39983,7 +40247,7 @@ function mysqlViewWithSchema(name2, selection, schema5) {
   }
   return new ViewBuilder3(name2, schema5);
 }
-var _a318, ViewBuilderCore2, _a319, _b229, ViewBuilder3, _a320, _b230, ManualViewBuilder3, _a321, _b231, _c11, MySqlView2;
+var _a330, ViewBuilderCore2, _a331, _b241, ViewBuilder3, _a332, _b242, ManualViewBuilder3, _a333, _b243, _c11, MySqlView2;
 var init_view3 = __esm({
   "../drizzle-orm/dist/mysql-core/view.js"() {
     "use strict";
@@ -39994,7 +40258,7 @@ var init_view3 = __esm({
     init_table4();
     init_view_base3();
     init_view_common3();
-    _a318 = entityKind;
+    _a330 = entityKind;
     ViewBuilderCore2 = class {
       constructor(name2, schema5) {
         __publicField(this, "config", {});
@@ -40014,8 +40278,8 @@ var init_view3 = __esm({
         return this;
       }
     };
-    __publicField(ViewBuilderCore2, _a318, "MySqlViewBuilder");
-    ViewBuilder3 = class extends (_b229 = ViewBuilderCore2, _a319 = entityKind, _b229) {
+    __publicField(ViewBuilderCore2, _a330, "MySqlViewBuilder");
+    ViewBuilder3 = class extends (_b241 = ViewBuilderCore2, _a331 = entityKind, _b241) {
       as(qb) {
         if (typeof qb === "function") {
           qb = qb(new QueryBuilder3());
@@ -40041,8 +40305,8 @@ var init_view3 = __esm({
         );
       }
     };
-    __publicField(ViewBuilder3, _a319, "MySqlViewBuilder");
-    ManualViewBuilder3 = class extends (_b230 = ViewBuilderCore2, _a320 = entityKind, _b230) {
+    __publicField(ViewBuilder3, _a331, "MySqlViewBuilder");
+    ManualViewBuilder3 = class extends (_b242 = ViewBuilderCore2, _a332 = entityKind, _b242) {
       constructor(name2, columns, schema5) {
         super(name2, schema5);
         __publicField(this, "columns");
@@ -40087,27 +40351,27 @@ var init_view3 = __esm({
         );
       }
     };
-    __publicField(ManualViewBuilder3, _a320, "MySqlManualViewBuilder");
-    MySqlView2 = class extends (_c11 = MySqlViewBase, _b231 = entityKind, _a321 = MySqlViewConfig, _c11) {
+    __publicField(ManualViewBuilder3, _a332, "MySqlManualViewBuilder");
+    MySqlView2 = class extends (_c11 = MySqlViewBase, _b243 = entityKind, _a333 = MySqlViewConfig, _c11) {
       constructor({ mysqlConfig, config }) {
         super(config);
-        __publicField(this, _a321);
+        __publicField(this, _a333);
         this[MySqlViewConfig] = mysqlConfig;
       }
     };
-    __publicField(MySqlView2, _b231, "MySqlView");
+    __publicField(MySqlView2, _b243, "MySqlView");
   }
 });
 
 // ../drizzle-orm/dist/mysql-core/schema.js
-var _a322, MySqlSchema5;
+var _a334, MySqlSchema5;
 var init_schema2 = __esm({
   "../drizzle-orm/dist/mysql-core/schema.js"() {
     "use strict";
     init_entity();
     init_table4();
     init_view3();
-    _a322 = entityKind;
+    _a334 = entityKind;
     MySqlSchema5 = class {
       constructor(schemaName) {
         __publicField(this, "table", (name2, columns, extraConfig) => {
@@ -40119,12 +40383,12 @@ var init_schema2 = __esm({
         this.schemaName = schemaName;
       }
     };
-    __publicField(MySqlSchema5, _a322, "MySqlSchema");
+    __publicField(MySqlSchema5, _a334, "MySqlSchema");
   }
 });
 
 // ../drizzle-orm/dist/mysql-core/session.js
-var _a323, MySqlPreparedQuery, _a324, MySqlSession, _a325, _b232, MySqlTransaction;
+var _a335, MySqlPreparedQuery, _a336, MySqlSession, _a337, _b244, MySqlTransaction;
 var init_session3 = __esm({
   "../drizzle-orm/dist/mysql-core/session.js"() {
     "use strict";
@@ -40132,15 +40396,15 @@ var init_session3 = __esm({
     init_errors();
     init_sql();
     init_db3();
-    _a323 = entityKind;
+    _a335 = entityKind;
     MySqlPreparedQuery = class {
       constructor() {
         /** @internal */
         __publicField(this, "joinsNotNullableMap");
       }
     };
-    __publicField(MySqlPreparedQuery, _a323, "MySqlPreparedQuery");
-    _a324 = entityKind;
+    __publicField(MySqlPreparedQuery, _a335, "MySqlPreparedQuery");
+    _a336 = entityKind;
     MySqlSession = class {
       constructor(dialect6) {
         this.dialect = dialect6;
@@ -40175,8 +40439,8 @@ var init_session3 = __esm({
         return parts.length ? sql`start transaction ${sql.raw(parts.join(" "))}` : void 0;
       }
     };
-    __publicField(MySqlSession, _a324, "MySqlSession");
-    MySqlTransaction = class extends (_b232 = MySqlDatabase, _a325 = entityKind, _b232) {
+    __publicField(MySqlSession, _a336, "MySqlSession");
+    MySqlTransaction = class extends (_b244 = MySqlDatabase, _a337 = entityKind, _b244) {
       constructor(dialect6, session, schema5, nestedIndex, mode) {
         super(dialect6, session, schema5, mode);
         this.schema = schema5;
@@ -40186,7 +40450,7 @@ var init_session3 = __esm({
         throw new TransactionRollbackError();
       }
     };
-    __publicField(MySqlTransaction, _a325, "MySqlTransaction");
+    __publicField(MySqlTransaction, _a337, "MySqlTransaction");
   }
 });
 
@@ -41432,13 +41696,13 @@ var init_alias5 = __esm({
 function uniqueKeyName4(table6, columns) {
   return `${table6[TableName]}_${columns.join("_")}_unique`;
 }
-var _a326, UniqueConstraintBuilder4, _a327, UniqueOnConstraintBuilder4, _a328, UniqueConstraint4;
+var _a338, UniqueConstraintBuilder4, _a339, UniqueOnConstraintBuilder4, _a340, UniqueConstraint4;
 var init_unique_constraint4 = __esm({
   "../drizzle-orm/dist/singlestore-core/unique-constraint.js"() {
     "use strict";
     init_entity();
     init_table_utils();
-    _a326 = entityKind;
+    _a338 = entityKind;
     UniqueConstraintBuilder4 = class {
       constructor(columns, name2) {
         /** @internal */
@@ -41451,8 +41715,8 @@ var init_unique_constraint4 = __esm({
         return new UniqueConstraint4(table6, this.columns, this.name);
       }
     };
-    __publicField(UniqueConstraintBuilder4, _a326, "SingleStoreUniqueConstraintBuilder");
-    _a327 = entityKind;
+    __publicField(UniqueConstraintBuilder4, _a338, "SingleStoreUniqueConstraintBuilder");
+    _a339 = entityKind;
     UniqueOnConstraintBuilder4 = class {
       constructor(name2) {
         /** @internal */
@@ -41463,8 +41727,8 @@ var init_unique_constraint4 = __esm({
         return new UniqueConstraintBuilder4(columns, this.name);
       }
     };
-    __publicField(UniqueOnConstraintBuilder4, _a327, "SingleStoreUniqueOnConstraintBuilder");
-    _a328 = entityKind;
+    __publicField(UniqueOnConstraintBuilder4, _a339, "SingleStoreUniqueOnConstraintBuilder");
+    _a340 = entityKind;
     UniqueConstraint4 = class {
       constructor(table6, columns, name2) {
         __publicField(this, "columns");
@@ -41478,12 +41742,12 @@ var init_unique_constraint4 = __esm({
         return this.name;
       }
     };
-    __publicField(UniqueConstraint4, _a328, "SingleStoreUniqueConstraint");
+    __publicField(UniqueConstraint4, _a340, "SingleStoreUniqueConstraint");
   }
 });
 
 // ../drizzle-orm/dist/singlestore-core/columns/common.js
-var _a329, _b233, SingleStoreColumnBuilder, _a330, _b234, SingleStoreColumn, _a331, _b235, SingleStoreColumnBuilderWithAutoIncrement, _a332, _b236, SingleStoreColumnWithAutoIncrement;
+var _a341, _b245, SingleStoreColumnBuilder, _a342, _b246, SingleStoreColumn, _a343, _b247, SingleStoreColumnBuilderWithAutoIncrement, _a344, _b248, SingleStoreColumnWithAutoIncrement;
 var init_common5 = __esm({
   "../drizzle-orm/dist/singlestore-core/columns/common.js"() {
     "use strict";
@@ -41491,7 +41755,7 @@ var init_common5 = __esm({
     init_column();
     init_entity();
     init_unique_constraint4();
-    SingleStoreColumnBuilder = class extends (_b233 = ColumnBuilder, _a329 = entityKind, _b233) {
+    SingleStoreColumnBuilder = class extends (_b245 = ColumnBuilder, _a341 = entityKind, _b245) {
       unique(name2) {
         this.config.isUnique = true;
         this.config.uniqueName = name2;
@@ -41508,8 +41772,8 @@ var init_common5 = __esm({
         return this;
       }
     };
-    __publicField(SingleStoreColumnBuilder, _a329, "SingleStoreColumnBuilder");
-    SingleStoreColumn = class extends (_b234 = Column2, _a330 = entityKind, _b234) {
+    __publicField(SingleStoreColumnBuilder, _a341, "SingleStoreColumnBuilder");
+    SingleStoreColumn = class extends (_b246 = Column2, _a342 = entityKind, _b246) {
       constructor(table6, config) {
         if (!config.uniqueName) {
           config.uniqueName = uniqueKeyName4(table6, [config.name]);
@@ -41518,8 +41782,8 @@ var init_common5 = __esm({
         this.table = table6;
       }
     };
-    __publicField(SingleStoreColumn, _a330, "SingleStoreColumn");
-    SingleStoreColumnBuilderWithAutoIncrement = class extends (_b235 = SingleStoreColumnBuilder, _a331 = entityKind, _b235) {
+    __publicField(SingleStoreColumn, _a342, "SingleStoreColumn");
+    SingleStoreColumnBuilderWithAutoIncrement = class extends (_b247 = SingleStoreColumnBuilder, _a343 = entityKind, _b247) {
       constructor(name2, dataType, columnType) {
         super(name2, dataType, columnType);
         this.config.autoIncrement = false;
@@ -41530,14 +41794,14 @@ var init_common5 = __esm({
         return this;
       }
     };
-    __publicField(SingleStoreColumnBuilderWithAutoIncrement, _a331, "SingleStoreColumnBuilderWithAutoIncrement");
-    SingleStoreColumnWithAutoIncrement = class extends (_b236 = SingleStoreColumn, _a332 = entityKind, _b236) {
+    __publicField(SingleStoreColumnBuilderWithAutoIncrement, _a343, "SingleStoreColumnBuilderWithAutoIncrement");
+    SingleStoreColumnWithAutoIncrement = class extends (_b248 = SingleStoreColumn, _a344 = entityKind, _b248) {
       constructor() {
         super(...arguments);
         __publicField(this, "autoIncrement", this.config.autoIncrement);
       }
     };
-    __publicField(SingleStoreColumnWithAutoIncrement, _a332, "SingleStoreColumnWithAutoIncrement");
+    __publicField(SingleStoreColumnWithAutoIncrement, _a344, "SingleStoreColumnWithAutoIncrement");
   }
 });
 
@@ -41549,14 +41813,14 @@ function bigint3(a, b) {
   }
   return new SingleStoreBigInt64Builder(name2, config.unsigned);
 }
-var _a333, _b237, SingleStoreBigInt53Builder, _a334, _b238, SingleStoreBigInt53, _a335, _b239, SingleStoreBigInt64Builder, _a336, _b240, SingleStoreBigInt64;
+var _a345, _b249, SingleStoreBigInt53Builder, _a346, _b250, SingleStoreBigInt53, _a347, _b251, SingleStoreBigInt64Builder, _a348, _b252, SingleStoreBigInt64;
 var init_bigint3 = __esm({
   "../drizzle-orm/dist/singlestore-core/columns/bigint.js"() {
     "use strict";
     init_entity();
     init_utils2();
     init_common5();
-    SingleStoreBigInt53Builder = class extends (_b237 = SingleStoreColumnBuilderWithAutoIncrement, _a333 = entityKind, _b237) {
+    SingleStoreBigInt53Builder = class extends (_b249 = SingleStoreColumnBuilderWithAutoIncrement, _a345 = entityKind, _b249) {
       constructor(name2, unsigned = false) {
         super(name2, "number", "SingleStoreBigInt53");
         this.config.unsigned = unsigned;
@@ -41569,8 +41833,8 @@ var init_bigint3 = __esm({
         );
       }
     };
-    __publicField(SingleStoreBigInt53Builder, _a333, "SingleStoreBigInt53Builder");
-    SingleStoreBigInt53 = class extends (_b238 = SingleStoreColumnWithAutoIncrement, _a334 = entityKind, _b238) {
+    __publicField(SingleStoreBigInt53Builder, _a345, "SingleStoreBigInt53Builder");
+    SingleStoreBigInt53 = class extends (_b250 = SingleStoreColumnWithAutoIncrement, _a346 = entityKind, _b250) {
       getSQLType() {
         return `bigint${this.config.unsigned ? " unsigned" : ""}`;
       }
@@ -41581,8 +41845,8 @@ var init_bigint3 = __esm({
         return Number(value);
       }
     };
-    __publicField(SingleStoreBigInt53, _a334, "SingleStoreBigInt53");
-    SingleStoreBigInt64Builder = class extends (_b239 = SingleStoreColumnBuilderWithAutoIncrement, _a335 = entityKind, _b239) {
+    __publicField(SingleStoreBigInt53, _a346, "SingleStoreBigInt53");
+    SingleStoreBigInt64Builder = class extends (_b251 = SingleStoreColumnBuilderWithAutoIncrement, _a347 = entityKind, _b251) {
       constructor(name2, unsigned = false) {
         super(name2, "bigint", "SingleStoreBigInt64");
         this.config.unsigned = unsigned;
@@ -41595,8 +41859,8 @@ var init_bigint3 = __esm({
         );
       }
     };
-    __publicField(SingleStoreBigInt64Builder, _a335, "SingleStoreBigInt64Builder");
-    SingleStoreBigInt64 = class extends (_b240 = SingleStoreColumnWithAutoIncrement, _a336 = entityKind, _b240) {
+    __publicField(SingleStoreBigInt64Builder, _a347, "SingleStoreBigInt64Builder");
+    SingleStoreBigInt64 = class extends (_b252 = SingleStoreColumnWithAutoIncrement, _a348 = entityKind, _b252) {
       getSQLType() {
         return `bigint${this.config.unsigned ? " unsigned" : ""}`;
       }
@@ -41605,7 +41869,7 @@ var init_bigint3 = __esm({
         return BigInt(value);
       }
     };
-    __publicField(SingleStoreBigInt64, _a336, "SingleStoreBigInt64");
+    __publicField(SingleStoreBigInt64, _a348, "SingleStoreBigInt64");
   }
 });
 
@@ -41614,14 +41878,14 @@ function binary2(a, b = {}) {
   const { name: name2, config } = getColumnNameAndConfig(a, b);
   return new SingleStoreBinaryBuilder(name2, config.length);
 }
-var _a337, _b241, SingleStoreBinaryBuilder, _a338, _b242, SingleStoreBinary;
+var _a349, _b253, SingleStoreBinaryBuilder, _a350, _b254, SingleStoreBinary;
 var init_binary2 = __esm({
   "../drizzle-orm/dist/singlestore-core/columns/binary.js"() {
     "use strict";
     init_entity();
     init_utils2();
     init_common5();
-    SingleStoreBinaryBuilder = class extends (_b241 = SingleStoreColumnBuilder, _a337 = entityKind, _b241) {
+    SingleStoreBinaryBuilder = class extends (_b253 = SingleStoreColumnBuilder, _a349 = entityKind, _b253) {
       constructor(name2, length) {
         super(name2, "string", "SingleStoreBinary");
         this.config.length = length;
@@ -41634,17 +41898,28 @@ var init_binary2 = __esm({
         );
       }
     };
-    __publicField(SingleStoreBinaryBuilder, _a337, "SingleStoreBinaryBuilder");
-    SingleStoreBinary = class extends (_b242 = SingleStoreColumn, _a338 = entityKind, _b242) {
+    __publicField(SingleStoreBinaryBuilder, _a349, "SingleStoreBinaryBuilder");
+    SingleStoreBinary = class extends (_b254 = SingleStoreColumn, _a350 = entityKind, _b254) {
       constructor() {
         super(...arguments);
         __publicField(this, "length", this.config.length);
       }
+      mapFromDriverValue(value) {
+        if (typeof value === "string")
+          return value;
+        if (Buffer.isBuffer(value))
+          return value.toString();
+        const str = [];
+        for (const v of value) {
+          str.push(v === 49 ? "1" : "0");
+        }
+        return str.join("");
+      }
       getSQLType() {
         return this.length === void 0 ? `binary` : `binary(${this.length})`;
       }
     };
-    __publicField(SingleStoreBinary, _a338, "SingleStoreBinary");
+    __publicField(SingleStoreBinary, _a350, "SingleStoreBinary");
   }
 });
 
@@ -41652,13 +41927,13 @@ var init_binary2 = __esm({
 function boolean3(name2) {
   return new SingleStoreBooleanBuilder(name2 ?? "");
 }
-var _a339, _b243, SingleStoreBooleanBuilder, _a340, _b244, SingleStoreBoolean;
+var _a351, _b255, SingleStoreBooleanBuilder, _a352, _b256, SingleStoreBoolean;
 var init_boolean3 = __esm({
   "../drizzle-orm/dist/singlestore-core/columns/boolean.js"() {
     "use strict";
     init_entity();
     init_common5();
-    SingleStoreBooleanBuilder = class extends (_b243 = SingleStoreColumnBuilder, _a339 = entityKind, _b243) {
+    SingleStoreBooleanBuilder = class extends (_b255 = SingleStoreColumnBuilder, _a351 = entityKind, _b255) {
       constructor(name2) {
         super(name2, "boolean", "SingleStoreBoolean");
       }
@@ -41670,8 +41945,8 @@ var init_boolean3 = __esm({
         );
       }
     };
-    __publicField(SingleStoreBooleanBuilder, _a339, "SingleStoreBooleanBuilder");
-    SingleStoreBoolean = class extends (_b244 = SingleStoreColumn, _a340 = entityKind, _b244) {
+    __publicField(SingleStoreBooleanBuilder, _a351, "SingleStoreBooleanBuilder");
+    SingleStoreBoolean = class extends (_b256 = SingleStoreColumn, _a352 = entityKind, _b256) {
       getSQLType() {
         return "boolean";
       }
@@ -41682,7 +41957,7 @@ var init_boolean3 = __esm({
         return value === 1;
       }
     };
-    __publicField(SingleStoreBoolean, _a340, "SingleStoreBoolean");
+    __publicField(SingleStoreBoolean, _a352, "SingleStoreBoolean");
   }
 });
 
@@ -41691,14 +41966,14 @@ function char3(a, b = {}) {
   const { name: name2, config } = getColumnNameAndConfig(a, b);
   return new SingleStoreCharBuilder(name2, config);
 }
-var _a341, _b245, SingleStoreCharBuilder, _a342, _b246, SingleStoreChar;
+var _a353, _b257, SingleStoreCharBuilder, _a354, _b258, SingleStoreChar;
 var init_char3 = __esm({
   "../drizzle-orm/dist/singlestore-core/columns/char.js"() {
     "use strict";
     init_entity();
     init_utils2();
     init_common5();
-    SingleStoreCharBuilder = class extends (_b245 = SingleStoreColumnBuilder, _a341 = entityKind, _b245) {
+    SingleStoreCharBuilder = class extends (_b257 = SingleStoreColumnBuilder, _a353 = entityKind, _b257) {
       constructor(name2, config) {
         super(name2, "string", "SingleStoreChar");
         this.config.length = config.length;
@@ -41712,8 +41987,8 @@ var init_char3 = __esm({
         );
       }
     };
-    __publicField(SingleStoreCharBuilder, _a341, "SingleStoreCharBuilder");
-    SingleStoreChar = class extends (_b246 = SingleStoreColumn, _a342 = entityKind, _b246) {
+    __publicField(SingleStoreCharBuilder, _a353, "SingleStoreCharBuilder");
+    SingleStoreChar = class extends (_b258 = SingleStoreColumn, _a354 = entityKind, _b258) {
       constructor() {
         super(...arguments);
         __publicField(this, "length", this.config.length);
@@ -41723,7 +41998,7 @@ var init_char3 = __esm({
         return this.length === void 0 ? `char` : `char(${this.length})`;
       }
     };
-    __publicField(SingleStoreChar, _a342, "SingleStoreChar");
+    __publicField(SingleStoreChar, _a354, "SingleStoreChar");
   }
 });
 
@@ -41734,14 +42009,14 @@ function customType4(customTypeParams) {
     return new SingleStoreCustomColumnBuilder(name2, config, customTypeParams);
   };
 }
-var _a343, _b247, SingleStoreCustomColumnBuilder, _a344, _b248, SingleStoreCustomColumn;
+var _a355, _b259, SingleStoreCustomColumnBuilder, _a356, _b260, SingleStoreCustomColumn;
 var init_custom4 = __esm({
   "../drizzle-orm/dist/singlestore-core/columns/custom.js"() {
     "use strict";
     init_entity();
     init_utils2();
     init_common5();
-    SingleStoreCustomColumnBuilder = class extends (_b247 = SingleStoreColumnBuilder, _a343 = entityKind, _b247) {
+    SingleStoreCustomColumnBuilder = class extends (_b259 = SingleStoreColumnBuilder, _a355 = entityKind, _b259) {
       constructor(name2, fieldConfig, customTypeParams) {
         super(name2, "custom", "SingleStoreCustomColumn");
         this.config.fieldConfig = fieldConfig;
@@ -41755,8 +42030,8 @@ var init_custom4 = __esm({
         );
       }
     };
-    __publicField(SingleStoreCustomColumnBuilder, _a343, "SingleStoreCustomColumnBuilder");
-    SingleStoreCustomColumn = class extends (_b248 = SingleStoreColumn, _a344 = entityKind, _b248) {
+    __publicField(SingleStoreCustomColumnBuilder, _a355, "SingleStoreCustomColumnBuilder");
+    SingleStoreCustomColumn = class extends (_b260 = SingleStoreColumn, _a356 = entityKind, _b260) {
       constructor(table6, config) {
         super(table6, config);
         __publicField(this, "sqlName");
@@ -41776,7 +42051,7 @@ var init_custom4 = __esm({
         return typeof this.mapTo === "function" ? this.mapTo(value) : value;
       }
     };
-    __publicField(SingleStoreCustomColumn, _a344, "SingleStoreCustomColumn");
+    __publicField(SingleStoreCustomColumn, _a356, "SingleStoreCustomColumn");
   }
 });
 
@@ -41788,14 +42063,14 @@ function date3(a, b) {
   }
   return new SingleStoreDateBuilder(name2);
 }
-var _a345, _b249, SingleStoreDateBuilder, _a346, _b250, SingleStoreDate, _a347, _b251, SingleStoreDateStringBuilder, _a348, _b252, SingleStoreDateString;
+var _a357, _b261, SingleStoreDateBuilder, _a358, _b262, SingleStoreDate, _a359, _b263, SingleStoreDateStringBuilder, _a360, _b264, SingleStoreDateString;
 var init_date3 = __esm({
   "../drizzle-orm/dist/singlestore-core/columns/date.js"() {
     "use strict";
     init_entity();
     init_utils2();
     init_common5();
-    SingleStoreDateBuilder = class extends (_b249 = SingleStoreColumnBuilder, _a345 = entityKind, _b249) {
+    SingleStoreDateBuilder = class extends (_b261 = SingleStoreColumnBuilder, _a357 = entityKind, _b261) {
       constructor(name2) {
         super(name2, "date", "SingleStoreDate");
       }
@@ -41807,8 +42082,8 @@ var init_date3 = __esm({
         );
       }
     };
-    __publicField(SingleStoreDateBuilder, _a345, "SingleStoreDateBuilder");
-    SingleStoreDate = class extends (_b250 = SingleStoreColumn, _a346 = entityKind, _b250) {
+    __publicField(SingleStoreDateBuilder, _a357, "SingleStoreDateBuilder");
+    SingleStoreDate = class extends (_b262 = SingleStoreColumn, _a358 = entityKind, _b262) {
       constructor(table6, config) {
         super(table6, config);
       }
@@ -41819,8 +42094,8 @@ var init_date3 = __esm({
         return new Date(value);
       }
     };
-    __publicField(SingleStoreDate, _a346, "SingleStoreDate");
-    SingleStoreDateStringBuilder = class extends (_b251 = SingleStoreColumnBuilder, _a347 = entityKind, _b251) {
+    __publicField(SingleStoreDate, _a358, "SingleStoreDate");
+    SingleStoreDateStringBuilder = class extends (_b263 = SingleStoreColumnBuilder, _a359 = entityKind, _b263) {
       constructor(name2) {
         super(name2, "string", "SingleStoreDateString");
       }
@@ -41832,8 +42107,8 @@ var init_date3 = __esm({
         );
       }
     };
-    __publicField(SingleStoreDateStringBuilder, _a347, "SingleStoreDateStringBuilder");
-    SingleStoreDateString = class extends (_b252 = SingleStoreColumn, _a348 = entityKind, _b252) {
+    __publicField(SingleStoreDateStringBuilder, _a359, "SingleStoreDateStringBuilder");
+    SingleStoreDateString = class extends (_b264 = SingleStoreColumn, _a360 = entityKind, _b264) {
       constructor(table6, config) {
         super(table6, config);
       }
@@ -41841,7 +42116,7 @@ var init_date3 = __esm({
         return `date`;
       }
     };
-    __publicField(SingleStoreDateString, _a348, "SingleStoreDateString");
+    __publicField(SingleStoreDateString, _a360, "SingleStoreDateString");
   }
 });
 
@@ -41853,14 +42128,14 @@ function datetime2(a, b) {
   }
   return new SingleStoreDateTimeBuilder(name2);
 }
-var _a349, _b253, SingleStoreDateTimeBuilder, _a350, _b254, SingleStoreDateTime, _a351, _b255, SingleStoreDateTimeStringBuilder, _a352, _b256, SingleStoreDateTimeString;
+var _a361, _b265, SingleStoreDateTimeBuilder, _a362, _b266, SingleStoreDateTime, _a363, _b267, SingleStoreDateTimeStringBuilder, _a364, _b268, SingleStoreDateTimeString;
 var init_datetime2 = __esm({
   "../drizzle-orm/dist/singlestore-core/columns/datetime.js"() {
     "use strict";
     init_entity();
     init_utils2();
     init_common5();
-    SingleStoreDateTimeBuilder = class extends (_b253 = SingleStoreColumnBuilder, _a349 = entityKind, _b253) {
+    SingleStoreDateTimeBuilder = class extends (_b265 = SingleStoreColumnBuilder, _a361 = entityKind, _b265) {
       /** @internal */
       // TODO: we need to add a proper support for SingleStore
       generatedAlwaysAs(_as, _config) {
@@ -41877,8 +42152,8 @@ var init_datetime2 = __esm({
         );
       }
     };
-    __publicField(SingleStoreDateTimeBuilder, _a349, "SingleStoreDateTimeBuilder");
-    SingleStoreDateTime = class extends (_b254 = SingleStoreColumn, _a350 = entityKind, _b254) {
+    __publicField(SingleStoreDateTimeBuilder, _a361, "SingleStoreDateTimeBuilder");
+    SingleStoreDateTime = class extends (_b266 = SingleStoreColumn, _a362 = entityKind, _b266) {
       constructor(table6, config) {
         super(table6, config);
       }
@@ -41892,8 +42167,8 @@ var init_datetime2 = __esm({
         return /* @__PURE__ */ new Date(value.replace(" ", "T") + "Z");
       }
     };
-    __publicField(SingleStoreDateTime, _a350, "SingleStoreDateTime");
-    SingleStoreDateTimeStringBuilder = class extends (_b255 = SingleStoreColumnBuilder, _a351 = entityKind, _b255) {
+    __publicField(SingleStoreDateTime, _a362, "SingleStoreDateTime");
+    SingleStoreDateTimeStringBuilder = class extends (_b267 = SingleStoreColumnBuilder, _a363 = entityKind, _b267) {
       /** @internal */
       // TODO: we need to add a proper support for SingleStore
       generatedAlwaysAs(_as, _config) {
@@ -41910,8 +42185,8 @@ var init_datetime2 = __esm({
         );
       }
     };
-    __publicField(SingleStoreDateTimeStringBuilder, _a351, "SingleStoreDateTimeStringBuilder");
-    SingleStoreDateTimeString = class extends (_b256 = SingleStoreColumn, _a352 = entityKind, _b256) {
+    __publicField(SingleStoreDateTimeStringBuilder, _a363, "SingleStoreDateTimeStringBuilder");
+    SingleStoreDateTimeString = class extends (_b268 = SingleStoreColumn, _a364 = entityKind, _b268) {
       constructor(table6, config) {
         super(table6, config);
       }
@@ -41919,26 +42194,24 @@ var init_datetime2 = __esm({
         return `datetime`;
       }
     };
-    __publicField(SingleStoreDateTimeString, _a352, "SingleStoreDateTimeString");
+    __publicField(SingleStoreDateTimeString, _a364, "SingleStoreDateTimeString");
   }
 });
 
 // ../drizzle-orm/dist/singlestore-core/columns/decimal.js
 function decimal2(a, b = {}) {
-  const { name: name2, config } = getColumnNameAndConfig(
-    a,
-    b
-  );
-  return new SingleStoreDecimalBuilder(name2, config);
+  const { name: name2, config } = getColumnNameAndConfig(a, b);
+  const mode = config?.mode;
+  return mode === "number" ? new SingleStoreDecimalNumberBuilder(name2, config) : mode === "bigint" ? new SingleStoreDecimalBigIntBuilder(name2, config) : new SingleStoreDecimalBuilder(name2, config);
 }
-var _a353, _b257, SingleStoreDecimalBuilder, _a354, _b258, SingleStoreDecimal;
+var _a365, _b269, SingleStoreDecimalBuilder, _a366, _b270, SingleStoreDecimal, _a367, _b271, SingleStoreDecimalNumberBuilder, _a368, _b272, SingleStoreDecimalNumber, _a369, _b273, SingleStoreDecimalBigIntBuilder, _a370, _b274, SingleStoreDecimalBigInt;
 var init_decimal2 = __esm({
   "../drizzle-orm/dist/singlestore-core/columns/decimal.js"() {
     "use strict";
     init_entity();
     init_utils2();
     init_common5();
-    SingleStoreDecimalBuilder = class extends (_b257 = SingleStoreColumnBuilderWithAutoIncrement, _a353 = entityKind, _b257) {
+    SingleStoreDecimalBuilder = class extends (_b269 = SingleStoreColumnBuilderWithAutoIncrement, _a365 = entityKind, _b269) {
       constructor(name2, config) {
         super(name2, "string", "SingleStoreDecimal");
         this.config.precision = config?.precision;
@@ -41953,14 +42226,19 @@ var init_decimal2 = __esm({
         );
       }
     };
-    __publicField(SingleStoreDecimalBuilder, _a353, "SingleStoreDecimalBuilder");
-    SingleStoreDecimal = class extends (_b258 = SingleStoreColumnWithAutoIncrement, _a354 = entityKind, _b258) {
+    __publicField(SingleStoreDecimalBuilder, _a365, "SingleStoreDecimalBuilder");
+    SingleStoreDecimal = class extends (_b270 = SingleStoreColumnWithAutoIncrement, _a366 = entityKind, _b270) {
       constructor() {
         super(...arguments);
         __publicField(this, "precision", this.config.precision);
         __publicField(this, "scale", this.config.scale);
         __publicField(this, "unsigned", this.config.unsigned);
       }
+      mapFromDriverValue(value) {
+        if (typeof value === "string")
+          return value;
+        return String(value);
+      }
       getSQLType() {
         let type = "";
         if (this.precision !== void 0 && this.scale !== void 0) {
@@ -41974,7 +42252,89 @@ var init_decimal2 = __esm({
         return this.unsigned ? `${type} unsigned` : type;
       }
     };
-    __publicField(SingleStoreDecimal, _a354, "SingleStoreDecimal");
+    __publicField(SingleStoreDecimal, _a366, "SingleStoreDecimal");
+    SingleStoreDecimalNumberBuilder = class extends (_b271 = SingleStoreColumnBuilderWithAutoIncrement, _a367 = entityKind, _b271) {
+      constructor(name2, config) {
+        super(name2, "number", "SingleStoreDecimalNumber");
+        this.config.precision = config?.precision;
+        this.config.scale = config?.scale;
+        this.config.unsigned = config?.unsigned;
+      }
+      /** @internal */
+      build(table6) {
+        return new SingleStoreDecimalNumber(
+          table6,
+          this.config
+        );
+      }
+    };
+    __publicField(SingleStoreDecimalNumberBuilder, _a367, "SingleStoreDecimalNumberBuilder");
+    SingleStoreDecimalNumber = class extends (_b272 = SingleStoreColumnWithAutoIncrement, _a368 = entityKind, _b272) {
+      constructor() {
+        super(...arguments);
+        __publicField(this, "precision", this.config.precision);
+        __publicField(this, "scale", this.config.scale);
+        __publicField(this, "unsigned", this.config.unsigned);
+        __publicField(this, "mapToDriverValue", String);
+      }
+      mapFromDriverValue(value) {
+        if (typeof value === "number")
+          return value;
+        return Number(value);
+      }
+      getSQLType() {
+        let type = "";
+        if (this.precision !== void 0 && this.scale !== void 0) {
+          type += `decimal(${this.precision},${this.scale})`;
+        } else if (this.precision === void 0) {
+          type += "decimal";
+        } else {
+          type += `decimal(${this.precision})`;
+        }
+        type = type === "decimal(10,0)" || type === "decimal(10)" ? "decimal" : type;
+        return this.unsigned ? `${type} unsigned` : type;
+      }
+    };
+    __publicField(SingleStoreDecimalNumber, _a368, "SingleStoreDecimalNumber");
+    SingleStoreDecimalBigIntBuilder = class extends (_b273 = SingleStoreColumnBuilderWithAutoIncrement, _a369 = entityKind, _b273) {
+      constructor(name2, config) {
+        super(name2, "bigint", "SingleStoreDecimalBigInt");
+        this.config.precision = config?.precision;
+        this.config.scale = config?.scale;
+        this.config.unsigned = config?.unsigned;
+      }
+      /** @internal */
+      build(table6) {
+        return new SingleStoreDecimalBigInt(
+          table6,
+          this.config
+        );
+      }
+    };
+    __publicField(SingleStoreDecimalBigIntBuilder, _a369, "SingleStoreDecimalBigIntBuilder");
+    SingleStoreDecimalBigInt = class extends (_b274 = SingleStoreColumnWithAutoIncrement, _a370 = entityKind, _b274) {
+      constructor() {
+        super(...arguments);
+        __publicField(this, "precision", this.config.precision);
+        __publicField(this, "scale", this.config.scale);
+        __publicField(this, "unsigned", this.config.unsigned);
+        __publicField(this, "mapFromDriverValue", BigInt);
+        __publicField(this, "mapToDriverValue", String);
+      }
+      getSQLType() {
+        let type = "";
+        if (this.precision !== void 0 && this.scale !== void 0) {
+          type += `decimal(${this.precision},${this.scale})`;
+        } else if (this.precision === void 0) {
+          type += "decimal";
+        } else {
+          type += `decimal(${this.precision})`;
+        }
+        type = type === "decimal(10,0)" || type === "decimal(10)" ? "decimal" : type;
+        return this.unsigned ? `${type} unsigned` : type;
+      }
+    };
+    __publicField(SingleStoreDecimalBigInt, _a370, "SingleStoreDecimalBigInt");
   }
 });
 
@@ -41983,14 +42343,14 @@ function double2(a, b) {
   const { name: name2, config } = getColumnNameAndConfig(a, b);
   return new SingleStoreDoubleBuilder(name2, config);
 }
-var _a355, _b259, SingleStoreDoubleBuilder, _a356, _b260, SingleStoreDouble;
+var _a371, _b275, SingleStoreDoubleBuilder, _a372, _b276, SingleStoreDouble;
 var init_double2 = __esm({
   "../drizzle-orm/dist/singlestore-core/columns/double.js"() {
     "use strict";
     init_entity();
     init_utils2();
     init_common5();
-    SingleStoreDoubleBuilder = class extends (_b259 = SingleStoreColumnBuilderWithAutoIncrement, _a355 = entityKind, _b259) {
+    SingleStoreDoubleBuilder = class extends (_b275 = SingleStoreColumnBuilderWithAutoIncrement, _a371 = entityKind, _b275) {
       constructor(name2, config) {
         super(name2, "number", "SingleStoreDouble");
         this.config.precision = config?.precision;
@@ -42005,8 +42365,8 @@ var init_double2 = __esm({
         );
       }
     };
-    __publicField(SingleStoreDoubleBuilder, _a355, "SingleStoreDoubleBuilder");
-    SingleStoreDouble = class extends (_b260 = SingleStoreColumnWithAutoIncrement, _a356 = entityKind, _b260) {
+    __publicField(SingleStoreDoubleBuilder, _a371, "SingleStoreDoubleBuilder");
+    SingleStoreDouble = class extends (_b276 = SingleStoreColumnWithAutoIncrement, _a372 = entityKind, _b276) {
       constructor() {
         super(...arguments);
         __publicField(this, "precision", this.config.precision);
@@ -42025,7 +42385,7 @@ var init_double2 = __esm({
         return this.unsigned ? `${type} unsigned` : type;
       }
     };
-    __publicField(SingleStoreDouble, _a356, "SingleStoreDouble");
+    __publicField(SingleStoreDouble, _a372, "SingleStoreDouble");
   }
 });
 
@@ -42037,14 +42397,14 @@ function singlestoreEnum(a, b) {
   }
   return new SingleStoreEnumColumnBuilder(name2, values);
 }
-var _a357, _b261, SingleStoreEnumColumnBuilder, _a358, _b262, SingleStoreEnumColumn;
+var _a373, _b277, SingleStoreEnumColumnBuilder, _a374, _b278, SingleStoreEnumColumn;
 var init_enum3 = __esm({
   "../drizzle-orm/dist/singlestore-core/columns/enum.js"() {
     "use strict";
     init_entity();
     init_utils2();
     init_common5();
-    SingleStoreEnumColumnBuilder = class extends (_b261 = SingleStoreColumnBuilder, _a357 = entityKind, _b261) {
+    SingleStoreEnumColumnBuilder = class extends (_b277 = SingleStoreColumnBuilder, _a373 = entityKind, _b277) {
       // eslint-disable-next-line @typescript-eslint/no-unused-vars
       generatedAlwaysAs(as, config) {
         throw new Error("Method not implemented.");
@@ -42061,8 +42421,8 @@ var init_enum3 = __esm({
         );
       }
     };
-    __publicField(SingleStoreEnumColumnBuilder, _a357, "SingleStoreEnumColumnBuilder");
-    SingleStoreEnumColumn = class extends (_b262 = SingleStoreColumn, _a358 = entityKind, _b262) {
+    __publicField(SingleStoreEnumColumnBuilder, _a373, "SingleStoreEnumColumnBuilder");
+    SingleStoreEnumColumn = class extends (_b278 = SingleStoreColumn, _a374 = entityKind, _b278) {
       constructor() {
         super(...arguments);
         __publicField(this, "enumValues", this.config.enumValues);
@@ -42071,7 +42431,7 @@ var init_enum3 = __esm({
         return `enum(${this.enumValues.map((value) => `'${value}'`).join(",")})`;
       }
     };
-    __publicField(SingleStoreEnumColumn, _a358, "SingleStoreEnumColumn");
+    __publicField(SingleStoreEnumColumn, _a374, "SingleStoreEnumColumn");
   }
 });
 
@@ -42080,14 +42440,14 @@ function float2(a, b) {
   const { name: name2, config } = getColumnNameAndConfig(a, b);
   return new SingleStoreFloatBuilder(name2, config);
 }
-var _a359, _b263, SingleStoreFloatBuilder, _a360, _b264, SingleStoreFloat;
+var _a375, _b279, SingleStoreFloatBuilder, _a376, _b280, SingleStoreFloat;
 var init_float2 = __esm({
   "../drizzle-orm/dist/singlestore-core/columns/float.js"() {
     "use strict";
     init_entity();
     init_utils2();
     init_common5();
-    SingleStoreFloatBuilder = class extends (_b263 = SingleStoreColumnBuilderWithAutoIncrement, _a359 = entityKind, _b263) {
+    SingleStoreFloatBuilder = class extends (_b279 = SingleStoreColumnBuilderWithAutoIncrement, _a375 = entityKind, _b279) {
       constructor(name2, config) {
         super(name2, "number", "SingleStoreFloat");
         this.config.precision = config?.precision;
@@ -42102,8 +42462,8 @@ var init_float2 = __esm({
         );
       }
     };
-    __publicField(SingleStoreFloatBuilder, _a359, "SingleStoreFloatBuilder");
-    SingleStoreFloat = class extends (_b264 = SingleStoreColumnWithAutoIncrement, _a360 = entityKind, _b264) {
+    __publicField(SingleStoreFloatBuilder, _a375, "SingleStoreFloatBuilder");
+    SingleStoreFloat = class extends (_b280 = SingleStoreColumnWithAutoIncrement, _a376 = entityKind, _b280) {
       constructor() {
         super(...arguments);
         __publicField(this, "precision", this.config.precision);
@@ -42122,7 +42482,7 @@ var init_float2 = __esm({
         return this.unsigned ? `${type} unsigned` : type;
       }
     };
-    __publicField(SingleStoreFloat, _a360, "SingleStoreFloat");
+    __publicField(SingleStoreFloat, _a376, "SingleStoreFloat");
   }
 });
 
@@ -42131,14 +42491,14 @@ function int2(a, b) {
   const { name: name2, config } = getColumnNameAndConfig(a, b);
   return new SingleStoreIntBuilder(name2, config);
 }
-var _a361, _b265, SingleStoreIntBuilder, _a362, _b266, SingleStoreInt;
+var _a377, _b281, SingleStoreIntBuilder, _a378, _b282, SingleStoreInt;
 var init_int2 = __esm({
   "../drizzle-orm/dist/singlestore-core/columns/int.js"() {
     "use strict";
     init_entity();
     init_utils2();
     init_common5();
-    SingleStoreIntBuilder = class extends (_b265 = SingleStoreColumnBuilderWithAutoIncrement, _a361 = entityKind, _b265) {
+    SingleStoreIntBuilder = class extends (_b281 = SingleStoreColumnBuilderWithAutoIncrement, _a377 = entityKind, _b281) {
       constructor(name2, config) {
         super(name2, "number", "SingleStoreInt");
         this.config.unsigned = config ? config.unsigned : false;
@@ -42151,8 +42511,8 @@ var init_int2 = __esm({
         );
       }
     };
-    __publicField(SingleStoreIntBuilder, _a361, "SingleStoreIntBuilder");
-    SingleStoreInt = class extends (_b266 = SingleStoreColumnWithAutoIncrement, _a362 = entityKind, _b266) {
+    __publicField(SingleStoreIntBuilder, _a377, "SingleStoreIntBuilder");
+    SingleStoreInt = class extends (_b282 = SingleStoreColumnWithAutoIncrement, _a378 = entityKind, _b282) {
       getSQLType() {
         return `int${this.config.unsigned ? " unsigned" : ""}`;
       }
@@ -42163,7 +42523,7 @@ var init_int2 = __esm({
         return value;
       }
     };
-    __publicField(SingleStoreInt, _a362, "SingleStoreInt");
+    __publicField(SingleStoreInt, _a378, "SingleStoreInt");
   }
 });
 
@@ -42171,13 +42531,13 @@ var init_int2 = __esm({
 function json3(name2) {
   return new SingleStoreJsonBuilder(name2 ?? "");
 }
-var _a363, _b267, SingleStoreJsonBuilder, _a364, _b268, SingleStoreJson;
+var _a379, _b283, SingleStoreJsonBuilder, _a380, _b284, SingleStoreJson;
 var init_json3 = __esm({
   "../drizzle-orm/dist/singlestore-core/columns/json.js"() {
     "use strict";
     init_entity();
     init_common5();
-    SingleStoreJsonBuilder = class extends (_b267 = SingleStoreColumnBuilder, _a363 = entityKind, _b267) {
+    SingleStoreJsonBuilder = class extends (_b283 = SingleStoreColumnBuilder, _a379 = entityKind, _b283) {
       constructor(name2) {
         super(name2, "json", "SingleStoreJson");
       }
@@ -42189,8 +42549,8 @@ var init_json3 = __esm({
         );
       }
     };
-    __publicField(SingleStoreJsonBuilder, _a363, "SingleStoreJsonBuilder");
-    SingleStoreJson = class extends (_b268 = SingleStoreColumn, _a364 = entityKind, _b268) {
+    __publicField(SingleStoreJsonBuilder, _a379, "SingleStoreJsonBuilder");
+    SingleStoreJson = class extends (_b284 = SingleStoreColumn, _a380 = entityKind, _b284) {
       getSQLType() {
         return "json";
       }
@@ -42198,7 +42558,7 @@ var init_json3 = __esm({
         return JSON.stringify(value);
       }
     };
-    __publicField(SingleStoreJson, _a364, "SingleStoreJson");
+    __publicField(SingleStoreJson, _a380, "SingleStoreJson");
   }
 });
 
@@ -42207,14 +42567,14 @@ function mediumint2(a, b) {
   const { name: name2, config } = getColumnNameAndConfig(a, b);
   return new SingleStoreMediumIntBuilder(name2, config);
 }
-var _a365, _b269, SingleStoreMediumIntBuilder, _a366, _b270, SingleStoreMediumInt;
+var _a381, _b285, SingleStoreMediumIntBuilder, _a382, _b286, SingleStoreMediumInt;
 var init_mediumint2 = __esm({
   "../drizzle-orm/dist/singlestore-core/columns/mediumint.js"() {
     "use strict";
     init_entity();
     init_utils2();
     init_common5();
-    SingleStoreMediumIntBuilder = class extends (_b269 = SingleStoreColumnBuilderWithAutoIncrement, _a365 = entityKind, _b269) {
+    SingleStoreMediumIntBuilder = class extends (_b285 = SingleStoreColumnBuilderWithAutoIncrement, _a381 = entityKind, _b285) {
       constructor(name2, config) {
         super(name2, "number", "SingleStoreMediumInt");
         this.config.unsigned = config ? config.unsigned : false;
@@ -42227,8 +42587,8 @@ var init_mediumint2 = __esm({
         );
       }
     };
-    __publicField(SingleStoreMediumIntBuilder, _a365, "SingleStoreMediumIntBuilder");
-    SingleStoreMediumInt = class extends (_b270 = SingleStoreColumnWithAutoIncrement, _a366 = entityKind, _b270) {
+    __publicField(SingleStoreMediumIntBuilder, _a381, "SingleStoreMediumIntBuilder");
+    SingleStoreMediumInt = class extends (_b286 = SingleStoreColumnWithAutoIncrement, _a382 = entityKind, _b286) {
       getSQLType() {
         return `mediumint${this.config.unsigned ? " unsigned" : ""}`;
       }
@@ -42239,7 +42599,7 @@ var init_mediumint2 = __esm({
         return value;
       }
     };
-    __publicField(SingleStoreMediumInt, _a366, "SingleStoreMediumInt");
+    __publicField(SingleStoreMediumInt, _a382, "SingleStoreMediumInt");
   }
 });
 
@@ -42248,14 +42608,14 @@ function real4(a, b = {}) {
   const { name: name2, config } = getColumnNameAndConfig(a, b);
   return new SingleStoreRealBuilder(name2, config);
 }
-var _a367, _b271, SingleStoreRealBuilder, _a368, _b272, SingleStoreReal;
+var _a383, _b287, SingleStoreRealBuilder, _a384, _b288, SingleStoreReal;
 var init_real4 = __esm({
   "../drizzle-orm/dist/singlestore-core/columns/real.js"() {
     "use strict";
     init_entity();
     init_utils2();
     init_common5();
-    SingleStoreRealBuilder = class extends (_b271 = SingleStoreColumnBuilderWithAutoIncrement, _a367 = entityKind, _b271) {
+    SingleStoreRealBuilder = class extends (_b287 = SingleStoreColumnBuilderWithAutoIncrement, _a383 = entityKind, _b287) {
       constructor(name2, config) {
         super(name2, "number", "SingleStoreReal");
         this.config.precision = config?.precision;
@@ -42269,8 +42629,8 @@ var init_real4 = __esm({
         );
       }
     };
-    __publicField(SingleStoreRealBuilder, _a367, "SingleStoreRealBuilder");
-    SingleStoreReal = class extends (_b272 = SingleStoreColumnWithAutoIncrement, _a368 = entityKind, _b272) {
+    __publicField(SingleStoreRealBuilder, _a383, "SingleStoreRealBuilder");
+    SingleStoreReal = class extends (_b288 = SingleStoreColumnWithAutoIncrement, _a384 = entityKind, _b288) {
       constructor() {
         super(...arguments);
         __publicField(this, "precision", this.config.precision);
@@ -42286,7 +42646,7 @@ var init_real4 = __esm({
         }
       }
     };
-    __publicField(SingleStoreReal, _a368, "SingleStoreReal");
+    __publicField(SingleStoreReal, _a384, "SingleStoreReal");
   }
 });
 
@@ -42294,13 +42654,13 @@ var init_real4 = __esm({
 function serial3(name2) {
   return new SingleStoreSerialBuilder(name2 ?? "");
 }
-var _a369, _b273, SingleStoreSerialBuilder, _a370, _b274, SingleStoreSerial;
+var _a385, _b289, SingleStoreSerialBuilder, _a386, _b290, SingleStoreSerial;
 var init_serial3 = __esm({
   "../drizzle-orm/dist/singlestore-core/columns/serial.js"() {
     "use strict";
     init_entity();
     init_common5();
-    SingleStoreSerialBuilder = class extends (_b273 = SingleStoreColumnBuilderWithAutoIncrement, _a369 = entityKind, _b273) {
+    SingleStoreSerialBuilder = class extends (_b289 = SingleStoreColumnBuilderWithAutoIncrement, _a385 = entityKind, _b289) {
       constructor(name2) {
         super(name2, "number", "SingleStoreSerial");
         this.config.hasDefault = true;
@@ -42314,8 +42674,8 @@ var init_serial3 = __esm({
         );
       }
     };
-    __publicField(SingleStoreSerialBuilder, _a369, "SingleStoreSerialBuilder");
-    SingleStoreSerial = class extends (_b274 = SingleStoreColumnWithAutoIncrement, _a370 = entityKind, _b274) {
+    __publicField(SingleStoreSerialBuilder, _a385, "SingleStoreSerialBuilder");
+    SingleStoreSerial = class extends (_b290 = SingleStoreColumnWithAutoIncrement, _a386 = entityKind, _b290) {
       getSQLType() {
         return "serial";
       }
@@ -42326,7 +42686,7 @@ var init_serial3 = __esm({
         return value;
       }
     };
-    __publicField(SingleStoreSerial, _a370, "SingleStoreSerial");
+    __publicField(SingleStoreSerial, _a386, "SingleStoreSerial");
   }
 });
 
@@ -42335,14 +42695,14 @@ function smallint3(a, b) {
   const { name: name2, config } = getColumnNameAndConfig(a, b);
   return new SingleStoreSmallIntBuilder(name2, config);
 }
-var _a371, _b275, SingleStoreSmallIntBuilder, _a372, _b276, SingleStoreSmallInt;
+var _a387, _b291, SingleStoreSmallIntBuilder, _a388, _b292, SingleStoreSmallInt;
 var init_smallint3 = __esm({
   "../drizzle-orm/dist/singlestore-core/columns/smallint.js"() {
     "use strict";
     init_entity();
     init_utils2();
     init_common5();
-    SingleStoreSmallIntBuilder = class extends (_b275 = SingleStoreColumnBuilderWithAutoIncrement, _a371 = entityKind, _b275) {
+    SingleStoreSmallIntBuilder = class extends (_b291 = SingleStoreColumnBuilderWithAutoIncrement, _a387 = entityKind, _b291) {
       constructor(name2, config) {
         super(name2, "number", "SingleStoreSmallInt");
         this.config.unsigned = config ? config.unsigned : false;
@@ -42355,8 +42715,8 @@ var init_smallint3 = __esm({
         );
       }
     };
-    __publicField(SingleStoreSmallIntBuilder, _a371, "SingleStoreSmallIntBuilder");
-    SingleStoreSmallInt = class extends (_b276 = SingleStoreColumnWithAutoIncrement, _a372 = entityKind, _b276) {
+    __publicField(SingleStoreSmallIntBuilder, _a387, "SingleStoreSmallIntBuilder");
+    SingleStoreSmallInt = class extends (_b292 = SingleStoreColumnWithAutoIncrement, _a388 = entityKind, _b292) {
       getSQLType() {
         return `smallint${this.config.unsigned ? " unsigned" : ""}`;
       }
@@ -42367,7 +42727,7 @@ var init_smallint3 = __esm({
         return value;
       }
     };
-    __publicField(SingleStoreSmallInt, _a372, "SingleStoreSmallInt");
+    __publicField(SingleStoreSmallInt, _a388, "SingleStoreSmallInt");
   }
 });
 
@@ -42388,14 +42748,14 @@ function longtext2(a, b = {}) {
   const { name: name2, config } = getColumnNameAndConfig(a, b);
   return new SingleStoreTextBuilder(name2, "longtext", config);
 }
-var _a373, _b277, SingleStoreTextBuilder, _a374, _b278, SingleStoreText;
+var _a389, _b293, SingleStoreTextBuilder, _a390, _b294, SingleStoreText;
 var init_text4 = __esm({
   "../drizzle-orm/dist/singlestore-core/columns/text.js"() {
     "use strict";
     init_entity();
     init_utils2();
     init_common5();
-    SingleStoreTextBuilder = class extends (_b277 = SingleStoreColumnBuilder, _a373 = entityKind, _b277) {
+    SingleStoreTextBuilder = class extends (_b293 = SingleStoreColumnBuilder, _a389 = entityKind, _b293) {
       constructor(name2, textType, config) {
         super(name2, "string", "SingleStoreText");
         this.config.textType = textType;
@@ -42409,8 +42769,8 @@ var init_text4 = __esm({
         );
       }
     };
-    __publicField(SingleStoreTextBuilder, _a373, "SingleStoreTextBuilder");
-    SingleStoreText = class extends (_b278 = SingleStoreColumn, _a374 = entityKind, _b278) {
+    __publicField(SingleStoreTextBuilder, _a389, "SingleStoreTextBuilder");
+    SingleStoreText = class extends (_b294 = SingleStoreColumn, _a390 = entityKind, _b294) {
       constructor() {
         super(...arguments);
         __publicField(this, "textType", this.config.textType);
@@ -42420,7 +42780,7 @@ var init_text4 = __esm({
         return this.textType;
       }
     };
-    __publicField(SingleStoreText, _a374, "SingleStoreText");
+    __publicField(SingleStoreText, _a390, "SingleStoreText");
   }
 });
 
@@ -42428,13 +42788,13 @@ var init_text4 = __esm({
 function time3(name2) {
   return new SingleStoreTimeBuilder(name2 ?? "");
 }
-var _a375, _b279, SingleStoreTimeBuilder, _a376, _b280, SingleStoreTime;
+var _a391, _b295, SingleStoreTimeBuilder, _a392, _b296, SingleStoreTime;
 var init_time3 = __esm({
   "../drizzle-orm/dist/singlestore-core/columns/time.js"() {
     "use strict";
     init_entity();
     init_common5();
-    SingleStoreTimeBuilder = class extends (_b279 = SingleStoreColumnBuilder, _a375 = entityKind, _b279) {
+    SingleStoreTimeBuilder = class extends (_b295 = SingleStoreColumnBuilder, _a391 = entityKind, _b295) {
       constructor(name2) {
         super(name2, "string", "SingleStoreTime");
       }
@@ -42446,25 +42806,25 @@ var init_time3 = __esm({
         );
       }
     };
-    __publicField(SingleStoreTimeBuilder, _a375, "SingleStoreTimeBuilder");
-    SingleStoreTime = class extends (_b280 = SingleStoreColumn, _a376 = entityKind, _b280) {
+    __publicField(SingleStoreTimeBuilder, _a391, "SingleStoreTimeBuilder");
+    SingleStoreTime = class extends (_b296 = SingleStoreColumn, _a392 = entityKind, _b296) {
       getSQLType() {
         return `time`;
       }
     };
-    __publicField(SingleStoreTime, _a376, "SingleStoreTime");
+    __publicField(SingleStoreTime, _a392, "SingleStoreTime");
   }
 });
 
 // ../drizzle-orm/dist/singlestore-core/columns/date.common.js
-var _a377, _b281, SingleStoreDateColumnBaseBuilder, _a378, _b282, SingleStoreDateBaseColumn;
+var _a393, _b297, SingleStoreDateColumnBaseBuilder, _a394, _b298, SingleStoreDateBaseColumn;
 var init_date_common3 = __esm({
   "../drizzle-orm/dist/singlestore-core/columns/date.common.js"() {
     "use strict";
     init_entity();
     init_sql();
     init_common5();
-    SingleStoreDateColumnBaseBuilder = class extends (_b281 = SingleStoreColumnBuilder, _a377 = entityKind, _b281) {
+    SingleStoreDateColumnBaseBuilder = class extends (_b297 = SingleStoreColumnBuilder, _a393 = entityKind, _b297) {
       defaultNow() {
         return this.default(sql`now()`);
       }
@@ -42474,14 +42834,14 @@ var init_date_common3 = __esm({
         return this;
       }
     };
-    __publicField(SingleStoreDateColumnBaseBuilder, _a377, "SingleStoreDateColumnBuilder");
-    SingleStoreDateBaseColumn = class extends (_b282 = SingleStoreColumn, _a378 = entityKind, _b282) {
+    __publicField(SingleStoreDateColumnBaseBuilder, _a393, "SingleStoreDateColumnBuilder");
+    SingleStoreDateBaseColumn = class extends (_b298 = SingleStoreColumn, _a394 = entityKind, _b298) {
       constructor() {
         super(...arguments);
         __publicField(this, "hasOnUpdateNow", this.config.hasOnUpdateNow);
       }
     };
-    __publicField(SingleStoreDateBaseColumn, _a378, "SingleStoreDateColumn");
+    __publicField(SingleStoreDateBaseColumn, _a394, "SingleStoreDateColumn");
   }
 });
 
@@ -42493,7 +42853,7 @@ function timestamp3(a, b = {}) {
   }
   return new SingleStoreTimestampBuilder(name2);
 }
-var _a379, _b283, SingleStoreTimestampBuilder, _a380, _b284, SingleStoreTimestamp, _a381, _b285, SingleStoreTimestampStringBuilder, _a382, _b286, SingleStoreTimestampString;
+var _a395, _b299, SingleStoreTimestampBuilder, _a396, _b300, SingleStoreTimestamp, _a397, _b301, SingleStoreTimestampStringBuilder, _a398, _b302, SingleStoreTimestampString;
 var init_timestamp3 = __esm({
   "../drizzle-orm/dist/singlestore-core/columns/timestamp.js"() {
     "use strict";
@@ -42501,7 +42861,7 @@ var init_timestamp3 = __esm({
     init_sql();
     init_utils2();
     init_date_common3();
-    SingleStoreTimestampBuilder = class extends (_b283 = SingleStoreDateColumnBaseBuilder, _a379 = entityKind, _b283) {
+    SingleStoreTimestampBuilder = class extends (_b299 = SingleStoreDateColumnBaseBuilder, _a395 = entityKind, _b299) {
       constructor(name2) {
         super(name2, "date", "SingleStoreTimestamp");
       }
@@ -42516,8 +42876,8 @@ var init_timestamp3 = __esm({
         return this.default(sql`CURRENT_TIMESTAMP`);
       }
     };
-    __publicField(SingleStoreTimestampBuilder, _a379, "SingleStoreTimestampBuilder");
-    SingleStoreTimestamp = class extends (_b284 = SingleStoreDateBaseColumn, _a380 = entityKind, _b284) {
+    __publicField(SingleStoreTimestampBuilder, _a395, "SingleStoreTimestampBuilder");
+    SingleStoreTimestamp = class extends (_b300 = SingleStoreDateBaseColumn, _a396 = entityKind, _b300) {
       getSQLType() {
         return `timestamp`;
       }
@@ -42528,8 +42888,8 @@ var init_timestamp3 = __esm({
         return value.toISOString().slice(0, -1).replace("T", " ");
       }
     };
-    __publicField(SingleStoreTimestamp, _a380, "SingleStoreTimestamp");
-    SingleStoreTimestampStringBuilder = class extends (_b285 = SingleStoreDateColumnBaseBuilder, _a381 = entityKind, _b285) {
+    __publicField(SingleStoreTimestamp, _a396, "SingleStoreTimestamp");
+    SingleStoreTimestampStringBuilder = class extends (_b301 = SingleStoreDateColumnBaseBuilder, _a397 = entityKind, _b301) {
       constructor(name2) {
         super(name2, "string", "SingleStoreTimestampString");
       }
@@ -42544,13 +42904,13 @@ var init_timestamp3 = __esm({
         return this.default(sql`CURRENT_TIMESTAMP`);
       }
     };
-    __publicField(SingleStoreTimestampStringBuilder, _a381, "SingleStoreTimestampStringBuilder");
-    SingleStoreTimestampString = class extends (_b286 = SingleStoreDateBaseColumn, _a382 = entityKind, _b286) {
+    __publicField(SingleStoreTimestampStringBuilder, _a397, "SingleStoreTimestampStringBuilder");
+    SingleStoreTimestampString = class extends (_b302 = SingleStoreDateBaseColumn, _a398 = entityKind, _b302) {
       getSQLType() {
         return `timestamp`;
       }
     };
-    __publicField(SingleStoreTimestampString, _a382, "SingleStoreTimestampString");
+    __publicField(SingleStoreTimestampString, _a398, "SingleStoreTimestampString");
   }
 });
 
@@ -42559,14 +42919,14 @@ function tinyint2(a, b) {
   const { name: name2, config } = getColumnNameAndConfig(a, b);
   return new SingleStoreTinyIntBuilder(name2, config);
 }
-var _a383, _b287, SingleStoreTinyIntBuilder, _a384, _b288, SingleStoreTinyInt;
+var _a399, _b303, SingleStoreTinyIntBuilder, _a400, _b304, SingleStoreTinyInt;
 var init_tinyint2 = __esm({
   "../drizzle-orm/dist/singlestore-core/columns/tinyint.js"() {
     "use strict";
     init_entity();
     init_utils2();
     init_common5();
-    SingleStoreTinyIntBuilder = class extends (_b287 = SingleStoreColumnBuilderWithAutoIncrement, _a383 = entityKind, _b287) {
+    SingleStoreTinyIntBuilder = class extends (_b303 = SingleStoreColumnBuilderWithAutoIncrement, _a399 = entityKind, _b303) {
       constructor(name2, config) {
         super(name2, "number", "SingleStoreTinyInt");
         this.config.unsigned = config ? config.unsigned : false;
@@ -42579,8 +42939,8 @@ var init_tinyint2 = __esm({
         );
       }
     };
-    __publicField(SingleStoreTinyIntBuilder, _a383, "SingleStoreTinyIntBuilder");
-    SingleStoreTinyInt = class extends (_b288 = SingleStoreColumnWithAutoIncrement, _a384 = entityKind, _b288) {
+    __publicField(SingleStoreTinyIntBuilder, _a399, "SingleStoreTinyIntBuilder");
+    SingleStoreTinyInt = class extends (_b304 = SingleStoreColumnWithAutoIncrement, _a400 = entityKind, _b304) {
       getSQLType() {
         return `tinyint${this.config.unsigned ? " unsigned" : ""}`;
       }
@@ -42591,7 +42951,7 @@ var init_tinyint2 = __esm({
         return value;
       }
     };
-    __publicField(SingleStoreTinyInt, _a384, "SingleStoreTinyInt");
+    __publicField(SingleStoreTinyInt, _a400, "SingleStoreTinyInt");
   }
 });
 
@@ -42600,14 +42960,14 @@ function varbinary2(a, b) {
   const { name: name2, config } = getColumnNameAndConfig(a, b);
   return new SingleStoreVarBinaryBuilder(name2, config);
 }
-var _a385, _b289, SingleStoreVarBinaryBuilder, _a386, _b290, SingleStoreVarBinary;
+var _a401, _b305, SingleStoreVarBinaryBuilder, _a402, _b306, SingleStoreVarBinary;
 var init_varbinary2 = __esm({
   "../drizzle-orm/dist/singlestore-core/columns/varbinary.js"() {
     "use strict";
     init_entity();
     init_utils2();
     init_common5();
-    SingleStoreVarBinaryBuilder = class extends (_b289 = SingleStoreColumnBuilder, _a385 = entityKind, _b289) {
+    SingleStoreVarBinaryBuilder = class extends (_b305 = SingleStoreColumnBuilder, _a401 = entityKind, _b305) {
       /** @internal */
       constructor(name2, config) {
         super(name2, "string", "SingleStoreVarBinary");
@@ -42621,17 +42981,28 @@ var init_varbinary2 = __esm({
         );
       }
     };
-    __publicField(SingleStoreVarBinaryBuilder, _a385, "SingleStoreVarBinaryBuilder");
-    SingleStoreVarBinary = class extends (_b290 = SingleStoreColumn, _a386 = entityKind, _b290) {
+    __publicField(SingleStoreVarBinaryBuilder, _a401, "SingleStoreVarBinaryBuilder");
+    SingleStoreVarBinary = class extends (_b306 = SingleStoreColumn, _a402 = entityKind, _b306) {
       constructor() {
         super(...arguments);
         __publicField(this, "length", this.config.length);
       }
+      mapFromDriverValue(value) {
+        if (typeof value === "string")
+          return value;
+        if (Buffer.isBuffer(value))
+          return value.toString();
+        const str = [];
+        for (const v of value) {
+          str.push(v === 49 ? "1" : "0");
+        }
+        return str.join("");
+      }
       getSQLType() {
         return this.length === void 0 ? `varbinary` : `varbinary(${this.length})`;
       }
     };
-    __publicField(SingleStoreVarBinary, _a386, "SingleStoreVarBinary");
+    __publicField(SingleStoreVarBinary, _a402, "SingleStoreVarBinary");
   }
 });
 
@@ -42640,14 +43011,14 @@ function varchar3(a, b) {
   const { name: name2, config } = getColumnNameAndConfig(a, b);
   return new SingleStoreVarCharBuilder(name2, config);
 }
-var _a387, _b291, SingleStoreVarCharBuilder, _a388, _b292, SingleStoreVarChar;
+var _a403, _b307, SingleStoreVarCharBuilder, _a404, _b308, SingleStoreVarChar;
 var init_varchar3 = __esm({
   "../drizzle-orm/dist/singlestore-core/columns/varchar.js"() {
     "use strict";
     init_entity();
     init_utils2();
     init_common5();
-    SingleStoreVarCharBuilder = class extends (_b291 = SingleStoreColumnBuilder, _a387 = entityKind, _b291) {
+    SingleStoreVarCharBuilder = class extends (_b307 = SingleStoreColumnBuilder, _a403 = entityKind, _b307) {
       /** @internal */
       constructor(name2, config) {
         super(name2, "string", "SingleStoreVarChar");
@@ -42662,8 +43033,8 @@ var init_varchar3 = __esm({
         );
       }
     };
-    __publicField(SingleStoreVarCharBuilder, _a387, "SingleStoreVarCharBuilder");
-    SingleStoreVarChar = class extends (_b292 = SingleStoreColumn, _a388 = entityKind, _b292) {
+    __publicField(SingleStoreVarCharBuilder, _a403, "SingleStoreVarCharBuilder");
+    SingleStoreVarChar = class extends (_b308 = SingleStoreColumn, _a404 = entityKind, _b308) {
       constructor() {
         super(...arguments);
         __publicField(this, "length", this.config.length);
@@ -42673,7 +43044,7 @@ var init_varchar3 = __esm({
         return this.length === void 0 ? `varchar` : `varchar(${this.length})`;
       }
     };
-    __publicField(SingleStoreVarChar, _a388, "SingleStoreVarChar");
+    __publicField(SingleStoreVarChar, _a404, "SingleStoreVarChar");
   }
 });
 
@@ -42682,14 +43053,14 @@ function vector2(a, b) {
   const { name: name2, config } = getColumnNameAndConfig(a, b);
   return new SingleStoreVectorBuilder(name2, config);
 }
-var _a389, _b293, SingleStoreVectorBuilder, _a390, _b294, SingleStoreVector;
+var _a405, _b309, SingleStoreVectorBuilder, _a406, _b310, SingleStoreVector;
 var init_vector4 = __esm({
   "../drizzle-orm/dist/singlestore-core/columns/vector.js"() {
     "use strict";
     init_entity();
     init_utils2();
     init_common5();
-    SingleStoreVectorBuilder = class extends (_b293 = SingleStoreColumnBuilder, _a389 = entityKind, _b293) {
+    SingleStoreVectorBuilder = class extends (_b309 = SingleStoreColumnBuilder, _a405 = entityKind, _b309) {
       constructor(name2, config) {
         super(name2, "array", "SingleStoreVector");
         this.config.dimensions = config.dimensions;
@@ -42707,8 +43078,8 @@ var init_vector4 = __esm({
         throw new Error("not implemented");
       }
     };
-    __publicField(SingleStoreVectorBuilder, _a389, "SingleStoreVectorBuilder");
-    SingleStoreVector = class extends (_b294 = SingleStoreColumn, _a390 = entityKind, _b294) {
+    __publicField(SingleStoreVectorBuilder, _a405, "SingleStoreVectorBuilder");
+    SingleStoreVector = class extends (_b310 = SingleStoreColumn, _a406 = entityKind, _b310) {
       constructor() {
         super(...arguments);
         __publicField(this, "dimensions", this.config.dimensions);
@@ -42724,7 +43095,7 @@ var init_vector4 = __esm({
         return JSON.parse(value);
       }
     };
-    __publicField(SingleStoreVector, _a390, "SingleStoreVector");
+    __publicField(SingleStoreVector, _a406, "SingleStoreVector");
   }
 });
 
@@ -42732,13 +43103,13 @@ var init_vector4 = __esm({
 function year2(name2) {
   return new SingleStoreYearBuilder(name2 ?? "");
 }
-var _a391, _b295, SingleStoreYearBuilder, _a392, _b296, SingleStoreYear;
+var _a407, _b311, SingleStoreYearBuilder, _a408, _b312, SingleStoreYear;
 var init_year2 = __esm({
   "../drizzle-orm/dist/singlestore-core/columns/year.js"() {
     "use strict";
     init_entity();
     init_common5();
-    SingleStoreYearBuilder = class extends (_b295 = SingleStoreColumnBuilder, _a391 = entityKind, _b295) {
+    SingleStoreYearBuilder = class extends (_b311 = SingleStoreColumnBuilder, _a407 = entityKind, _b311) {
       constructor(name2) {
         super(name2, "number", "SingleStoreYear");
       }
@@ -42750,13 +43121,13 @@ var init_year2 = __esm({
         );
       }
     };
-    __publicField(SingleStoreYearBuilder, _a391, "SingleStoreYearBuilder");
-    SingleStoreYear = class extends (_b296 = SingleStoreColumn, _a392 = entityKind, _b296) {
+    __publicField(SingleStoreYearBuilder, _a407, "SingleStoreYearBuilder");
+    SingleStoreYear = class extends (_b312 = SingleStoreColumn, _a408 = entityKind, _b312) {
       getSQLType() {
         return `year`;
       }
     };
-    __publicField(SingleStoreYear, _a392, "SingleStoreYear");
+    __publicField(SingleStoreYear, _a408, "SingleStoreYear");
   }
 });
 
@@ -42794,17 +43165,17 @@ var init_columns4 = __esm({
 });
 
 // ../drizzle-orm/dist/singlestore-core/query-builders/count.js
-var _a393, _b297, _c12, _SingleStoreCountBuilder, SingleStoreCountBuilder;
+var _a409, _b313, _c12, _SingleStoreCountBuilder, SingleStoreCountBuilder;
 var init_count4 = __esm({
   "../drizzle-orm/dist/singlestore-core/query-builders/count.js"() {
     "use strict";
     init_entity();
     init_sql();
-    _SingleStoreCountBuilder = class _SingleStoreCountBuilder extends (_c12 = SQL, _b297 = entityKind, _a393 = Symbol.toStringTag, _c12) {
+    _SingleStoreCountBuilder = class _SingleStoreCountBuilder extends (_c12 = SQL, _b313 = entityKind, _a409 = Symbol.toStringTag, _c12) {
       constructor(params) {
         super(_SingleStoreCountBuilder.buildEmbeddedCount(params.source, params.filters).queryChunks);
         __publicField(this, "sql");
-        __publicField(this, _a393, "SingleStoreCountBuilder");
+        __publicField(this, _a409, "SingleStoreCountBuilder");
         __publicField(this, "session");
         this.params = params;
         this.mapWith(Number);
@@ -42842,13 +43213,13 @@ var init_count4 = __esm({
         );
       }
     };
-    __publicField(_SingleStoreCountBuilder, _b297, "SingleStoreCountBuilder");
+    __publicField(_SingleStoreCountBuilder, _b313, "SingleStoreCountBuilder");
     SingleStoreCountBuilder = _SingleStoreCountBuilder;
   }
 });
 
 // ../drizzle-orm/dist/singlestore-core/query-builders/delete.js
-var _a394, _b298, SingleStoreDeleteBase;
+var _a410, _b314, SingleStoreDeleteBase;
 var init_delete4 = __esm({
   "../drizzle-orm/dist/singlestore-core/query-builders/delete.js"() {
     "use strict";
@@ -42856,7 +43227,7 @@ var init_delete4 = __esm({
     init_query_promise();
     init_selection_proxy();
     init_table();
-    SingleStoreDeleteBase = class extends (_b298 = QueryPromise, _a394 = entityKind, _b298) {
+    SingleStoreDeleteBase = class extends (_b314 = QueryPromise, _a410 = entityKind, _b314) {
       constructor(table6, session, dialect6, withList) {
         super();
         __publicField(this, "config");
@@ -42946,12 +43317,12 @@ var init_delete4 = __esm({
         return this;
       }
     };
-    __publicField(SingleStoreDeleteBase, _a394, "SingleStoreDelete");
+    __publicField(SingleStoreDeleteBase, _a410, "SingleStoreDelete");
   }
 });
 
 // ../drizzle-orm/dist/singlestore-core/query-builders/insert.js
-var _a395, SingleStoreInsertBuilder, _a396, _b299, SingleStoreInsertBase;
+var _a411, SingleStoreInsertBuilder, _a412, _b315, SingleStoreInsertBase;
 var init_insert4 = __esm({
   "../drizzle-orm/dist/singlestore-core/query-builders/insert.js"() {
     "use strict";
@@ -42960,7 +43331,7 @@ var init_insert4 = __esm({
     init_sql();
     init_table();
     init_utils2();
-    _a395 = entityKind;
+    _a411 = entityKind;
     SingleStoreInsertBuilder = class {
       constructor(table6, session, dialect6) {
         __publicField(this, "shouldIgnore", false);
@@ -42989,8 +43360,8 @@ var init_insert4 = __esm({
         return new SingleStoreInsertBase(this.table, mappedValues, this.shouldIgnore, this.session, this.dialect);
       }
     };
-    __publicField(SingleStoreInsertBuilder, _a395, "SingleStoreInsertBuilder");
-    SingleStoreInsertBase = class extends (_b299 = QueryPromise, _a396 = entityKind, _b299) {
+    __publicField(SingleStoreInsertBuilder, _a411, "SingleStoreInsertBuilder");
+    SingleStoreInsertBase = class extends (_b315 = QueryPromise, _a412 = entityKind, _b315) {
       constructor(table6, values, ignore, session, dialect6) {
         super();
         __publicField(this, "config");
@@ -43071,7 +43442,7 @@ var init_insert4 = __esm({
         return this;
       }
     };
-    __publicField(SingleStoreInsertBase, _a396, "SingleStoreInsert");
+    __publicField(SingleStoreInsertBase, _a412, "SingleStoreInsert");
   }
 });
 
@@ -43159,20 +43530,20 @@ function singlestoreTableWithSchema(name2, columns, extraConfig, schema5, baseNa
   }
   return table6;
 }
-var _a397, _b300, _c13, _d5, SingleStoreTable;
+var _a413, _b316, _c13, _d5, SingleStoreTable;
 var init_table5 = __esm({
   "../drizzle-orm/dist/singlestore-core/table.js"() {
     "use strict";
     init_entity();
     init_table();
     init_all4();
-    SingleStoreTable = class extends (_d5 = Table2, _c13 = entityKind, _b300 = Table2.Symbol.Columns, _a397 = Table2.Symbol.ExtraConfigBuilder, _d5) {
+    SingleStoreTable = class extends (_d5 = Table2, _c13 = entityKind, _b316 = Table2.Symbol.Columns, _a413 = Table2.Symbol.ExtraConfigBuilder, _d5) {
       constructor() {
         super(...arguments);
         /** @internal */
-        __publicField(this, _b300);
+        __publicField(this, _b316);
         /** @internal */
-        __publicField(this, _a397);
+        __publicField(this, _a413);
       }
     };
     __publicField(SingleStoreTable, _c13, "SingleStoreTable");
@@ -43182,7 +43553,7 @@ var init_table5 = __esm({
 });
 
 // ../drizzle-orm/dist/singlestore-core/dialect.js
-var _a398, SingleStoreDialect;
+var _a414, SingleStoreDialect;
 var init_dialect4 = __esm({
   "../drizzle-orm/dist/singlestore-core/dialect.js"() {
     "use strict";
@@ -43200,7 +43571,7 @@ var init_dialect4 = __esm({
     init_view_common();
     init_common5();
     init_table5();
-    _a398 = entityKind;
+    _a414 = entityKind;
     SingleStoreDialect = class {
       constructor(config) {
         /** @internal */
@@ -43377,8 +43748,8 @@ var init_dialect4 = __esm({
         const distinctSql = distinct ? sql` distinct` : void 0;
         const selection = this.buildSelection(fieldsList, { isSingleTable });
         const tableSql = (() => {
-          if (is(table6, Table2) && table6[Table2.Symbol.OriginalName] !== table6[Table2.Symbol.Name]) {
-            return sql`${sql.identifier(table6[Table2.Symbol.OriginalName])} ${sql.identifier(table6[Table2.Symbol.Name])}`;
+          if (is(table6, Table2) && table6[Table2.Symbol.IsAlias]) {
+            return sql`${sql`${sql.identifier(table6[Table2.Symbol.Schema] ?? "")}.`.if(table6[Table2.Symbol.Schema])}${sql.identifier(table6[Table2.Symbol.OriginalName])} ${sql.identifier(table6[Table2.Symbol.Name])}`;
           }
           return table6;
         })();
@@ -43765,7 +44136,7 @@ var init_dialect4 = __esm({
         };
       }
     };
-    __publicField(SingleStoreDialect, _a398, "SingleStoreDialect");
+    __publicField(SingleStoreDialect, _a414, "SingleStoreDialect");
   }
 });
 
@@ -43787,7 +44158,7 @@ function createSetOperator4(type, isAll) {
     return leftSelect.addSetOperators(setOperators);
   };
 }
-var _a399, SingleStoreSelectBuilder, _a400, _b301, SingleStoreSelectQueryBuilderBase, _a401, _b302, SingleStoreSelectBase, getSingleStoreSetOperators, union5, unionAll4, intersect4, except4, minus;
+var _a415, SingleStoreSelectBuilder, _a416, _b317, SingleStoreSelectQueryBuilderBase, _a417, _b318, SingleStoreSelectBase, getSingleStoreSetOperators, union5, unionAll4, intersect4, except4, minus;
 var init_select5 = __esm({
   "../drizzle-orm/dist/singlestore-core/query-builders/select.js"() {
     "use strict";
@@ -43799,7 +44170,7 @@ var init_select5 = __esm({
     init_subquery();
     init_table();
     init_utils2();
-    _a399 = entityKind;
+    _a415 = entityKind;
     SingleStoreSelectBuilder = class {
       constructor(config) {
         __publicField(this, "fields");
@@ -43842,8 +44213,8 @@ var init_select5 = __esm({
         );
       }
     };
-    __publicField(SingleStoreSelectBuilder, _a399, "SingleStoreSelectBuilder");
-    SingleStoreSelectQueryBuilderBase = class extends (_b301 = TypedQueryBuilder, _a400 = entityKind, _b301) {
+    __publicField(SingleStoreSelectBuilder, _a415, "SingleStoreSelectBuilder");
+    SingleStoreSelectQueryBuilderBase = class extends (_b317 = TypedQueryBuilder, _a416 = entityKind, _b317) {
       constructor({ table: table6, fields, isPartialSelect, session, dialect: dialect6, withList, distinct }) {
         super();
         __publicField(this, "_");
@@ -44114,7 +44485,7 @@ var init_select5 = __esm({
         return (table6, on) => {
           const baseTableName = this.tableName;
           const tableName = getTableLikeName(table6);
-          if (typeof tableName === "string" && this.config.joins?.some((join) => join.alias === tableName)) {
+          if (typeof tableName === "string" && this.config.joins?.some((join2) => join2.alias === tableName)) {
             throw new Error(`Alias "${tableName}" is already used in this query`);
           }
           if (!this.isPartialSelect) {
@@ -44384,8 +44755,8 @@ var init_select5 = __esm({
         return this;
       }
     };
-    __publicField(SingleStoreSelectQueryBuilderBase, _a400, "SingleStoreSelectQueryBuilder");
-    SingleStoreSelectBase = class extends (_b302 = SingleStoreSelectQueryBuilderBase, _a401 = entityKind, _b302) {
+    __publicField(SingleStoreSelectQueryBuilderBase, _a416, "SingleStoreSelectQueryBuilder");
+    SingleStoreSelectBase = class extends (_b318 = SingleStoreSelectQueryBuilderBase, _a417 = entityKind, _b318) {
       constructor() {
         super(...arguments);
         __publicField(this, "execute", (placeholderValues) => {
@@ -44409,7 +44780,7 @@ var init_select5 = __esm({
         return query;
       }
     };
-    __publicField(SingleStoreSelectBase, _a401, "SingleStoreSelect");
+    __publicField(SingleStoreSelectBase, _a417, "SingleStoreSelect");
     applyMixins(SingleStoreSelectBase, [QueryPromise]);
     getSingleStoreSetOperators = () => ({
       union: union5,
@@ -44427,7 +44798,7 @@ var init_select5 = __esm({
 });
 
 // ../drizzle-orm/dist/singlestore-core/query-builders/query-builder.js
-var _a402, QueryBuilder4;
+var _a418, QueryBuilder4;
 var init_query_builder5 = __esm({
   "../drizzle-orm/dist/singlestore-core/query-builders/query-builder.js"() {
     "use strict";
@@ -44436,7 +44807,7 @@ var init_query_builder5 = __esm({
     init_dialect4();
     init_subquery();
     init_select5();
-    _a402 = entityKind;
+    _a418 = entityKind;
     QueryBuilder4 = class {
       constructor(dialect6) {
         __publicField(this, "dialect");
@@ -44506,7 +44877,7 @@ var init_query_builder5 = __esm({
         return this.dialect;
       }
     };
-    __publicField(QueryBuilder4, _a402, "SingleStoreQueryBuilder");
+    __publicField(QueryBuilder4, _a418, "SingleStoreQueryBuilder");
   }
 });
 
@@ -44518,7 +44889,7 @@ var init_select_types4 = __esm({
 });
 
 // ../drizzle-orm/dist/singlestore-core/query-builders/update.js
-var _a403, SingleStoreUpdateBuilder, _a404, _b303, SingleStoreUpdateBase;
+var _a419, SingleStoreUpdateBuilder, _a420, _b319, SingleStoreUpdateBase;
 var init_update4 = __esm({
   "../drizzle-orm/dist/singlestore-core/query-builders/update.js"() {
     "use strict";
@@ -44527,7 +44898,7 @@ var init_update4 = __esm({
     init_selection_proxy();
     init_table();
     init_utils2();
-    _a403 = entityKind;
+    _a419 = entityKind;
     SingleStoreUpdateBuilder = class {
       constructor(table6, session, dialect6, withList) {
         this.table = table6;
@@ -44545,8 +44916,8 @@ var init_update4 = __esm({
         );
       }
     };
-    __publicField(SingleStoreUpdateBuilder, _a403, "SingleStoreUpdateBuilder");
-    SingleStoreUpdateBase = class extends (_b303 = QueryPromise, _a404 = entityKind, _b303) {
+    __publicField(SingleStoreUpdateBuilder, _a419, "SingleStoreUpdateBuilder");
+    SingleStoreUpdateBase = class extends (_b319 = QueryPromise, _a420 = entityKind, _b319) {
       constructor(table6, set, session, dialect6, withList) {
         super();
         __publicField(this, "config");
@@ -44639,7 +45010,7 @@ var init_update4 = __esm({
         return this;
       }
     };
-    __publicField(SingleStoreUpdateBase, _a404, "SingleStoreUpdate");
+    __publicField(SingleStoreUpdateBase, _a420, "SingleStoreUpdate");
   }
 });
 
@@ -44657,7 +45028,7 @@ var init_query_builders4 = __esm({
 });
 
 // ../drizzle-orm/dist/singlestore-core/db.js
-var _a405, SingleStoreDatabase;
+var _a421, SingleStoreDatabase;
 var init_db4 = __esm({
   "../drizzle-orm/dist/singlestore-core/db.js"() {
     "use strict";
@@ -44667,7 +45038,7 @@ var init_db4 = __esm({
     init_subquery();
     init_count4();
     init_query_builders4();
-    _a405 = entityKind;
+    _a421 = entityKind;
     SingleStoreDatabase = class {
       constructor(dialect6, session, schema5) {
         // We are waiting for SingleStore support for `json_array` function
@@ -44871,17 +45242,17 @@ var init_db4 = __esm({
         return this.session.transaction(transaction, config);
       }
     };
-    __publicField(SingleStoreDatabase, _a405, "SingleStoreDatabase");
+    __publicField(SingleStoreDatabase, _a421, "SingleStoreDatabase");
   }
 });
 
 // ../drizzle-orm/dist/singlestore-core/indexes.js
-var _a406, IndexBuilderOn4, _a407, IndexBuilder4, _a408, Index6;
+var _a422, IndexBuilderOn4, _a423, IndexBuilder4, _a424, Index6;
 var init_indexes4 = __esm({
   "../drizzle-orm/dist/singlestore-core/indexes.js"() {
     "use strict";
     init_entity();
-    _a406 = entityKind;
+    _a422 = entityKind;
     IndexBuilderOn4 = class {
       constructor(name2, unique) {
         this.name = name2;
@@ -44891,8 +45262,8 @@ var init_indexes4 = __esm({
         return new IndexBuilder4(this.name, columns, this.unique);
       }
     };
-    __publicField(IndexBuilderOn4, _a406, "SingleStoreIndexBuilderOn");
-    _a407 = entityKind;
+    __publicField(IndexBuilderOn4, _a422, "SingleStoreIndexBuilderOn");
+    _a423 = entityKind;
     IndexBuilder4 = class {
       constructor(name2, columns, unique) {
         /** @internal */
@@ -44920,26 +45291,26 @@ var init_indexes4 = __esm({
         return new Index6(this.config, table6);
       }
     };
-    __publicField(IndexBuilder4, _a407, "SingleStoreIndexBuilder");
-    _a408 = entityKind;
+    __publicField(IndexBuilder4, _a423, "SingleStoreIndexBuilder");
+    _a424 = entityKind;
     Index6 = class {
       constructor(config, table6) {
         __publicField(this, "config");
         this.config = { ...config, table: table6 };
       }
     };
-    __publicField(Index6, _a408, "SingleStoreIndex");
+    __publicField(Index6, _a424, "SingleStoreIndex");
   }
 });
 
 // ../drizzle-orm/dist/singlestore-core/primary-keys.js
-var _a409, PrimaryKeyBuilder4, _a410, PrimaryKey4;
+var _a425, PrimaryKeyBuilder4, _a426, PrimaryKey4;
 var init_primary_keys4 = __esm({
   "../drizzle-orm/dist/singlestore-core/primary-keys.js"() {
     "use strict";
     init_entity();
     init_table5();
-    _a409 = entityKind;
+    _a425 = entityKind;
     PrimaryKeyBuilder4 = class {
       constructor(columns, name2) {
         /** @internal */
@@ -44954,8 +45325,8 @@ var init_primary_keys4 = __esm({
         return new PrimaryKey4(table6, this.columns, this.name);
       }
     };
-    __publicField(PrimaryKeyBuilder4, _a409, "SingleStorePrimaryKeyBuilder");
-    _a410 = entityKind;
+    __publicField(PrimaryKeyBuilder4, _a425, "SingleStorePrimaryKeyBuilder");
+    _a426 = entityKind;
     PrimaryKey4 = class {
       constructor(table6, columns, name2) {
         __publicField(this, "columns");
@@ -44968,18 +45339,18 @@ var init_primary_keys4 = __esm({
         return this.name ?? `${this.table[SingleStoreTable.Symbol.Name]}_${this.columns.map((column6) => column6.name).join("_")}_pk`;
       }
     };
-    __publicField(PrimaryKey4, _a410, "SingleStorePrimaryKey");
+    __publicField(PrimaryKey4, _a426, "SingleStorePrimaryKey");
   }
 });
 
 // ../drizzle-orm/dist/singlestore-core/schema.js
-var _a411, SingleStoreSchema5;
+var _a427, SingleStoreSchema5;
 var init_schema3 = __esm({
   "../drizzle-orm/dist/singlestore-core/schema.js"() {
     "use strict";
     init_entity();
     init_table5();
-    _a411 = entityKind;
+    _a427 = entityKind;
     SingleStoreSchema5 = class {
       constructor(schemaName) {
         __publicField(this, "table", (name2, columns, extraConfig) => {
@@ -44992,12 +45363,12 @@ var init_schema3 = __esm({
       	return singlestoreViewWithSchema(name, columns, this.schemaName);
       }) as typeof singlestoreView; */
     };
-    __publicField(SingleStoreSchema5, _a411, "SingleStoreSchema");
+    __publicField(SingleStoreSchema5, _a427, "SingleStoreSchema");
   }
 });
 
 // ../drizzle-orm/dist/singlestore-core/session.js
-var _a412, SingleStorePreparedQuery, _a413, SingleStoreSession, _a414, _b304, SingleStoreTransaction;
+var _a428, SingleStorePreparedQuery, _a429, SingleStoreSession, _a430, _b320, SingleStoreTransaction;
 var init_session4 = __esm({
   "../drizzle-orm/dist/singlestore-core/session.js"() {
     "use strict";
@@ -45005,15 +45376,15 @@ var init_session4 = __esm({
     init_errors();
     init_sql();
     init_db4();
-    _a412 = entityKind;
+    _a428 = entityKind;
     SingleStorePreparedQuery = class {
       constructor() {
         /** @internal */
         __publicField(this, "joinsNotNullableMap");
       }
     };
-    __publicField(SingleStorePreparedQuery, _a412, "SingleStorePreparedQuery");
-    _a413 = entityKind;
+    __publicField(SingleStorePreparedQuery, _a428, "SingleStorePreparedQuery");
+    _a429 = entityKind;
     SingleStoreSession = class {
       constructor(dialect6) {
         this.dialect = dialect6;
@@ -45048,8 +45419,8 @@ var init_session4 = __esm({
         return parts.length ? sql`start transaction ${sql.raw(parts.join(" "))}` : void 0;
       }
     };
-    __publicField(SingleStoreSession, _a413, "SingleStoreSession");
-    SingleStoreTransaction = class extends (_b304 = SingleStoreDatabase, _a414 = entityKind, _b304) {
+    __publicField(SingleStoreSession, _a429, "SingleStoreSession");
+    SingleStoreTransaction = class extends (_b320 = SingleStoreDatabase, _a430 = entityKind, _b320) {
       constructor(dialect6, session, schema5, nestedIndex) {
         super(dialect6, session, schema5);
         this.schema = schema5;
@@ -45059,7 +45430,7 @@ var init_session4 = __esm({
         throw new TransactionRollbackError();
       }
     };
-    __publicField(SingleStoreTransaction, _a414, "SingleStoreTransaction");
+    __publicField(SingleStoreTransaction, _a430, "SingleStoreTransaction");
   }
 });
 
@@ -45573,12 +45944,16 @@ __export(sqliteImports_exports, {
   prepareFromExports: () => prepareFromExports2,
   prepareFromSqliteImports: () => prepareFromSqliteImports
 });
-var prepareFromExports2, prepareFromSqliteImports;
+var esbuild, import_promises, import_path, prepareFromExports2, prepareFromSqliteImports;
 var init_sqliteImports = __esm({
   "src/serializer/sqliteImports.ts"() {
     "use strict";
+    init_source();
     init_dist();
     init_sqlite_core();
+    esbuild = __toESM(require("esbuild"));
+    import_promises = require("fs/promises");
+    import_path = require("path");
     init_utils9();
     prepareFromExports2 = (exports2) => {
       const tables = [];
@@ -45598,13 +45973,20 @@ var init_sqliteImports = __esm({
       const tables = [];
       const views = [];
       const { unregister } = await safeRegister();
-      for (let i = 0; i < imports.length; i++) {
-        const it = imports[i];
-        const i0 = require(`${it}`);
-        const prepared = prepareFromExports2(i0);
-        tables.push(...prepared.tables);
-        views.push(...prepared.views);
-      }
+      const outDir = await (0, import_promises.mkdtemp)(".drizzle-kit.sqlite-imports-");
+      let outFile = (0, import_path.resolve)((0, import_path.join)(outDir, "schema.js"));
+      console.log(source_default.grey(`Reading schema files '${JSON.stringify(imports)}'`));
+      const res = esbuild.buildSync({
+        entryPoints: imports,
+        bundle: true,
+        format: "cjs",
+        outfile: outFile
+      });
+      const i0 = require(outFile);
+      const prepared = prepareFromExports2(i0);
+      await (0, import_promises.rm)(outDir, { recursive: true });
+      tables.push(...prepared.tables);
+      views.push(...prepared.views);
       unregister();
       return { tables: Array.from(new Set(tables)), views };
     };
diff --git a/api.mjs b/api.mjs
index d52ed68b1a8da7e334b1d2e08b4298cd3a9597df..7e1708067ca1378870cdac624c302f1ff482237e 100644
--- a/api.mjs
+++ b/api.mjs
@@ -3129,11 +3129,11 @@ var require_hanji = __commonJS({
     "use strict";
     var __awaiter = exports && exports.__awaiter || function(thisArg, _arguments, P, generator) {
       function adopt(value) {
-        return value instanceof P ? value : new P(function(resolve) {
-          resolve(value);
+        return value instanceof P ? value : new P(function(resolve2) {
+          resolve2(value);
         });
       }
-      return new (P || (P = Promise))(function(resolve, reject) {
+      return new (P || (P = Promise))(function(resolve2, reject) {
         function fulfilled(value) {
           try {
             step(generator.next(value));
@@ -3149,7 +3149,7 @@ var require_hanji = __commonJS({
           }
         }
         function step(result) {
-          result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
+          result.done ? resolve2(result.value) : adopt(result.value).then(fulfilled, rejected);
         }
         step((generator = generator.apply(thisArg, _arguments || [])).next());
       });
@@ -3223,14 +3223,14 @@ var require_hanji = __commonJS({
     };
     exports.SelectState = SelectState3;
     var deferred = () => {
-      let resolve;
+      let resolve2;
       let reject;
       const promise = new Promise((res, rej) => {
-        resolve = res;
+        resolve2 = res;
         reject = rej;
       });
       return {
-        resolve,
+        resolve: resolve2,
         reject,
         promise
       };
@@ -3280,8 +3280,8 @@ var require_hanji = __commonJS({
         };
         this.stdin.on("keypress", keypress);
         this.view.attach(this);
-        const { resolve, promise } = (0, exports.deferred)();
-        this.resolve = resolve;
+        const { resolve: resolve2, promise } = (0, exports.deferred)();
+        this.resolve = resolve2;
         this.promise = promise;
         this.renderFunc = (0, lodash_throttle_1.default)((str) => {
           this.stdout.write(str);
@@ -3474,17 +3474,17 @@ function processCreateParams(params) {
   if (errorMap2)
     return { errorMap: errorMap2, description };
   const customMap = (iss, ctx) => {
-    var _a415, _b305;
+    var _a431, _b321;
     const { message } = params;
     if (iss.code === "invalid_enum_value") {
       return { message: message !== null && message !== void 0 ? message : ctx.defaultError };
     }
     if (typeof ctx.data === "undefined") {
-      return { message: (_a415 = message !== null && message !== void 0 ? message : required_error) !== null && _a415 !== void 0 ? _a415 : ctx.defaultError };
+      return { message: (_a431 = message !== null && message !== void 0 ? message : required_error) !== null && _a431 !== void 0 ? _a431 : ctx.defaultError };
     }
     if (iss.code !== "invalid_type")
       return { message: ctx.defaultError };
-    return { message: (_b305 = message !== null && message !== void 0 ? message : invalid_type_error) !== null && _b305 !== void 0 ? _b305 : ctx.defaultError };
+    return { message: (_b321 = message !== null && message !== void 0 ? message : invalid_type_error) !== null && _b321 !== void 0 ? _b321 : ctx.defaultError };
   };
   return { errorMap: customMap, description };
 }
@@ -4146,11 +4146,11 @@ var init_lib = __esm({
         throw result.error;
       }
       safeParse(data, params) {
-        var _a415;
+        var _a431;
         const ctx = {
           common: {
             issues: [],
-            async: (_a415 = params === null || params === void 0 ? void 0 : params.async) !== null && _a415 !== void 0 ? _a415 : false,
+            async: (_a431 = params === null || params === void 0 ? void 0 : params.async) !== null && _a431 !== void 0 ? _a431 : false,
             contextualErrorMap: params === null || params === void 0 ? void 0 : params.errorMap
           },
           path: (params === null || params === void 0 ? void 0 : params.path) || [],
@@ -4472,7 +4472,7 @@ var init_lib = __esm({
           } else if (check.kind === "url") {
             try {
               new URL(input.data);
-            } catch (_a415) {
+            } catch (_a431) {
               ctx = this._getOrReturnCtx(input, ctx);
               addIssueToContext(ctx, {
                 validation: "url",
@@ -4642,7 +4642,7 @@ var init_lib = __esm({
         return this._addCheck({ kind: "ip", ...errorUtil.errToObj(options) });
       }
       datetime(options) {
-        var _a415, _b305;
+        var _a431, _b321;
         if (typeof options === "string") {
           return this._addCheck({
             kind: "datetime",
@@ -4655,8 +4655,8 @@ var init_lib = __esm({
         return this._addCheck({
           kind: "datetime",
           precision: typeof (options === null || options === void 0 ? void 0 : options.precision) === "undefined" ? null : options === null || options === void 0 ? void 0 : options.precision,
-          offset: (_a415 = options === null || options === void 0 ? void 0 : options.offset) !== null && _a415 !== void 0 ? _a415 : false,
-          local: (_b305 = options === null || options === void 0 ? void 0 : options.local) !== null && _b305 !== void 0 ? _b305 : false,
+          offset: (_a431 = options === null || options === void 0 ? void 0 : options.offset) !== null && _a431 !== void 0 ? _a431 : false,
+          local: (_b321 = options === null || options === void 0 ? void 0 : options.local) !== null && _b321 !== void 0 ? _b321 : false,
           ...errorUtil.errToObj(options === null || options === void 0 ? void 0 : options.message)
         });
       }
@@ -4819,11 +4819,11 @@ var init_lib = __esm({
       }
     };
     ZodString.create = (params) => {
-      var _a415;
+      var _a431;
       return new ZodString({
         checks: [],
         typeName: ZodFirstPartyTypeKind.ZodString,
-        coerce: (_a415 = params === null || params === void 0 ? void 0 : params.coerce) !== null && _a415 !== void 0 ? _a415 : false,
+        coerce: (_a431 = params === null || params === void 0 ? void 0 : params.coerce) !== null && _a431 !== void 0 ? _a431 : false,
         ...processCreateParams(params)
       });
     };
@@ -5216,11 +5216,11 @@ var init_lib = __esm({
       }
     };
     ZodBigInt.create = (params) => {
-      var _a415;
+      var _a431;
       return new ZodBigInt({
         checks: [],
         typeName: ZodFirstPartyTypeKind.ZodBigInt,
-        coerce: (_a415 = params === null || params === void 0 ? void 0 : params.coerce) !== null && _a415 !== void 0 ? _a415 : false,
+        coerce: (_a431 = params === null || params === void 0 ? void 0 : params.coerce) !== null && _a431 !== void 0 ? _a431 : false,
         ...processCreateParams(params)
       });
     };
@@ -5700,8 +5700,8 @@ var init_lib = __esm({
           unknownKeys: "strict",
           ...message !== void 0 ? {
             errorMap: (issue, ctx) => {
-              var _a415, _b305, _c14, _d6;
-              const defaultError = (_c14 = (_b305 = (_a415 = this._def).errorMap) === null || _b305 === void 0 ? void 0 : _b305.call(_a415, issue, ctx).message) !== null && _c14 !== void 0 ? _c14 : ctx.defaultError;
+              var _a431, _b321, _c14, _d6;
+              const defaultError = (_c14 = (_b321 = (_a431 = this._def).errorMap) === null || _b321 === void 0 ? void 0 : _b321.call(_a431, issue, ctx).message) !== null && _c14 !== void 0 ? _c14 : ctx.defaultError;
               if (issue.code === "unrecognized_keys")
                 return {
                   message: (_d6 = errorUtil.errToObj(message).message) !== null && _d6 !== void 0 ? _d6 : defaultError
@@ -22386,7 +22386,7 @@ var version;
 var init_version = __esm({
   "../drizzle-orm/dist/version.js"() {
     "use strict";
-    version = "0.40.0";
+    version = "0.41.0";
   }
 });
 
@@ -22846,7 +22846,7 @@ var init_sql = __esm({
         return new SQL([new StringChunk(str)]);
       }
       sql2.raw = raw;
-      function join(chunks, separator) {
+      function join2(chunks, separator) {
         const result = [];
         for (const [i, chunk] of chunks.entries()) {
           if (i > 0 && separator !== void 0) {
@@ -22856,7 +22856,7 @@ var init_sql = __esm({
         }
         return new SQL(result);
       }
-      sql2.join = join;
+      sql2.join = join2;
       function identifier(value) {
         return new Name(value);
       }
@@ -22871,8 +22871,8 @@ var init_sql = __esm({
       sql2.param = param2;
     })(sql || (sql = {}));
     ((SQL2) => {
-      var _a415;
-      _a415 = entityKind;
+      var _a431;
+      _a431 = entityKind;
       const _Aliased = class _Aliased {
         constructor(sql2, fieldAlias) {
           /** @internal */
@@ -22888,7 +22888,7 @@ var init_sql = __esm({
           return new _Aliased(this.sql, this.fieldAlias);
         }
       };
-      __publicField(_Aliased, _a415, "SQL.Aliased");
+      __publicField(_Aliased, _a431, "SQL.Aliased");
       let Aliased = _Aliased;
       SQL2.Aliased = Aliased;
     })(SQL || (SQL = {}));
@@ -23469,13 +23469,13 @@ function isConfig(data) {
     return true;
   }
   if ("schema" in data) {
-    const type = typeof data["logger"];
+    const type = typeof data["schema"];
     if (type !== "object" && type !== "undefined")
       return false;
     return true;
   }
   if ("casing" in data) {
-    const type = typeof data["logger"];
+    const type = typeof data["casing"];
     if (type !== "string" && type !== "undefined")
       return false;
     return true;
@@ -24285,9 +24285,10 @@ var init_macaddr8 = __esm({
 // ../drizzle-orm/dist/pg-core/columns/numeric.js
 function numeric(a, b) {
   const { name: name2, config } = getColumnNameAndConfig(a, b);
-  return new PgNumericBuilder(name2, config?.precision, config?.scale);
+  const mode = config?.mode;
+  return mode === "number" ? new PgNumericNumberBuilder(name2, config?.precision, config?.scale) : mode === "bigint" ? new PgNumericBigIntBuilder(name2, config?.precision, config?.scale) : new PgNumericBuilder(name2, config?.precision, config?.scale);
 }
-var _a77, _b56, PgNumericBuilder, _a78, _b57, PgNumeric;
+var _a77, _b56, PgNumericBuilder, _a78, _b57, PgNumeric, _a79, _b58, PgNumericNumberBuilder, _a80, _b59, PgNumericNumber, _a81, _b60, PgNumericBigIntBuilder, _a82, _b61, PgNumericBigInt;
 var init_numeric = __esm({
   "../drizzle-orm/dist/pg-core/columns/numeric.js"() {
     "use strict";
@@ -24314,6 +24315,11 @@ var init_numeric = __esm({
         this.precision = config.precision;
         this.scale = config.scale;
       }
+      mapFromDriverValue(value) {
+        if (typeof value === "string")
+          return value;
+        return String(value);
+      }
       getSQLType() {
         if (this.precision !== void 0 && this.scale !== void 0) {
           return `numeric(${this.precision}, ${this.scale})`;
@@ -24325,6 +24331,82 @@ var init_numeric = __esm({
       }
     };
     __publicField(PgNumeric, _a78, "PgNumeric");
+    PgNumericNumberBuilder = class extends (_b58 = PgColumnBuilder, _a79 = entityKind, _b58) {
+      constructor(name2, precision, scale) {
+        super(name2, "number", "PgNumericNumber");
+        this.config.precision = precision;
+        this.config.scale = scale;
+      }
+      /** @internal */
+      build(table6) {
+        return new PgNumericNumber(
+          table6,
+          this.config
+        );
+      }
+    };
+    __publicField(PgNumericNumberBuilder, _a79, "PgNumericNumberBuilder");
+    PgNumericNumber = class extends (_b59 = PgColumn, _a80 = entityKind, _b59) {
+      constructor(table6, config) {
+        super(table6, config);
+        __publicField(this, "precision");
+        __publicField(this, "scale");
+        __publicField(this, "mapToDriverValue", String);
+        this.precision = config.precision;
+        this.scale = config.scale;
+      }
+      mapFromDriverValue(value) {
+        if (typeof value === "number")
+          return value;
+        return Number(value);
+      }
+      getSQLType() {
+        if (this.precision !== void 0 && this.scale !== void 0) {
+          return `numeric(${this.precision}, ${this.scale})`;
+        } else if (this.precision === void 0) {
+          return "numeric";
+        } else {
+          return `numeric(${this.precision})`;
+        }
+      }
+    };
+    __publicField(PgNumericNumber, _a80, "PgNumericNumber");
+    PgNumericBigIntBuilder = class extends (_b60 = PgColumnBuilder, _a81 = entityKind, _b60) {
+      constructor(name2, precision, scale) {
+        super(name2, "bigint", "PgNumericBigInt");
+        this.config.precision = precision;
+        this.config.scale = scale;
+      }
+      /** @internal */
+      build(table6) {
+        return new PgNumericBigInt(
+          table6,
+          this.config
+        );
+      }
+    };
+    __publicField(PgNumericBigIntBuilder, _a81, "PgNumericBigIntBuilder");
+    PgNumericBigInt = class extends (_b61 = PgColumn, _a82 = entityKind, _b61) {
+      constructor(table6, config) {
+        super(table6, config);
+        __publicField(this, "precision");
+        __publicField(this, "scale");
+        __publicField(this, "mapFromDriverValue", BigInt);
+        __publicField(this, "mapToDriverValue", String);
+        this.precision = config.precision;
+        this.scale = config.scale;
+      }
+      getSQLType() {
+        if (this.precision !== void 0 && this.scale !== void 0) {
+          return `numeric(${this.precision}, ${this.scale})`;
+        } else if (this.precision === void 0) {
+          return "numeric";
+        } else {
+          return `numeric(${this.precision})`;
+        }
+      }
+    };
+    __publicField(PgNumericBigInt, _a82, "PgNumericBigInt");
   }
 });
 
@@ -24336,14 +24418,14 @@ function point(a, b) {
   }
   return new PgPointObjectBuilder(name2);
 }
-var _a79, _b58, PgPointTupleBuilder, _a80, _b59, PgPointTuple, _a81, _b60, PgPointObjectBuilder, _a82, _b61, PgPointObject;
+var _a83, _b62, PgPointTupleBuilder, _a84, _b63, PgPointTuple, _a85, _b64, PgPointObjectBuilder, _a86, _b65, PgPointObject;
 var init_point = __esm({
   "../drizzle-orm/dist/pg-core/columns/point.js"() {
     "use strict";
     init_entity();
     init_utils2();
     init_common2();
-    PgPointTupleBuilder = class extends (_b58 = PgColumnBuilder, _a79 = entityKind, _b58) {
+    PgPointTupleBuilder = class extends (_b62 = PgColumnBuilder, _a83 = entityKind, _b62) {
       constructor(name2) {
         super(name2, "array", "PgPointTuple");
       }
@@ -24355,8 +24437,8 @@ var init_point = __esm({
         );
       }
     };
-    __publicField(PgPointTupleBuilder, _a79, "PgPointTupleBuilder");
-    PgPointTuple = class extends (_b59 = PgColumn, _a80 = entityKind, _b59) {
+    __publicField(PgPointTupleBuilder, _a83, "PgPointTupleBuilder");
+    PgPointTuple = class extends (_b63 = PgColumn, _a84 = entityKind, _b63) {
       getSQLType() {
         return "point";
       }
@@ -24371,8 +24453,8 @@ var init_point = __esm({
         return `(${value[0]},${value[1]})`;
       }
     };
-    __publicField(PgPointTuple, _a80, "PgPointTuple");
-    PgPointObjectBuilder = class extends (_b60 = PgColumnBuilder, _a81 = entityKind, _b60) {
+    __publicField(PgPointTuple, _a84, "PgPointTuple");
+    PgPointObjectBuilder = class extends (_b64 = PgColumnBuilder, _a85 = entityKind, _b64) {
       constructor(name2) {
         super(name2, "json", "PgPointObject");
       }
@@ -24384,8 +24466,8 @@ var init_point = __esm({
         );
       }
     };
-    __publicField(PgPointObjectBuilder, _a81, "PgPointObjectBuilder");
-    PgPointObject = class extends (_b61 = PgColumn, _a82 = entityKind, _b61) {
+    __publicField(PgPointObjectBuilder, _a85, "PgPointObjectBuilder");
+    PgPointObject = class extends (_b65 = PgColumn, _a86 = entityKind, _b65) {
       getSQLType() {
         return "point";
       }
@@ -24400,7 +24482,7 @@ var init_point = __esm({
         return `(${value.x},${value.y})`;
       }
     };
-    __publicField(PgPointObject, _a82, "PgPointObject");
+    __publicField(PgPointObject, _a86, "PgPointObject");
   }
 });
 
@@ -24456,7 +24538,7 @@ function geometry(a, b) {
   }
   return new PgGeometryObjectBuilder(name2);
 }
-var _a83, _b62, PgGeometryBuilder, _a84, _b63, PgGeometry, _a85, _b64, PgGeometryObjectBuilder, _a86, _b65, PgGeometryObject;
+var _a87, _b66, PgGeometryBuilder, _a88, _b67, PgGeometry, _a89, _b68, PgGeometryObjectBuilder, _a90, _b69, PgGeometryObject;
 var init_geometry = __esm({
   "../drizzle-orm/dist/pg-core/columns/postgis_extension/geometry.js"() {
     "use strict";
@@ -24464,7 +24546,7 @@ var init_geometry = __esm({
     init_utils2();
     init_common2();
     init_utils3();
-    PgGeometryBuilder = class extends (_b62 = PgColumnBuilder, _a83 = entityKind, _b62) {
+    PgGeometryBuilder = class extends (_b66 = PgColumnBuilder, _a87 = entityKind, _b66) {
       constructor(name2) {
         super(name2, "array", "PgGeometry");
       }
@@ -24476,8 +24558,8 @@ var init_geometry = __esm({
         );
       }
     };
-    __publicField(PgGeometryBuilder, _a83, "PgGeometryBuilder");
-    PgGeometry = class extends (_b63 = PgColumn, _a84 = entityKind, _b63) {
+    __publicField(PgGeometryBuilder, _a87, "PgGeometryBuilder");
+    PgGeometry = class extends (_b67 = PgColumn, _a88 = entityKind, _b67) {
       getSQLType() {
         return "geometry(point)";
       }
@@ -24488,8 +24570,8 @@ var init_geometry = __esm({
         return `point(${value[0]} ${value[1]})`;
       }
     };
-    __publicField(PgGeometry, _a84, "PgGeometry");
-    PgGeometryObjectBuilder = class extends (_b64 = PgColumnBuilder, _a85 = entityKind, _b64) {
+    __publicField(PgGeometry, _a88, "PgGeometry");
+    PgGeometryObjectBuilder = class extends (_b68 = PgColumnBuilder, _a89 = entityKind, _b68) {
       constructor(name2) {
         super(name2, "json", "PgGeometryObject");
       }
@@ -24501,8 +24583,8 @@ var init_geometry = __esm({
         );
       }
     };
-    __publicField(PgGeometryObjectBuilder, _a85, "PgGeometryObjectBuilder");
-    PgGeometryObject = class extends (_b65 = PgColumn, _a86 = entityKind, _b65) {
+    __publicField(PgGeometryObjectBuilder, _a89, "PgGeometryObjectBuilder");
+    PgGeometryObject = class extends (_b69 = PgColumn, _a90 = entityKind, _b69) {
       getSQLType() {
         return "geometry(point)";
       }
@@ -24514,7 +24596,7 @@ var init_geometry = __esm({
         return `point(${value.x} ${value.y})`;
       }
     };
-    __publicField(PgGeometryObject, _a86, "PgGeometryObject");
+    __publicField(PgGeometryObject, _a90, "PgGeometryObject");
   }
 });
 
@@ -24522,13 +24604,13 @@ var init_geometry = __esm({
 function real(name2) {
   return new PgRealBuilder(name2 ?? "");
 }
-var _a87, _b66, PgRealBuilder, _a88, _b67, PgReal;
+var _a91, _b70, PgRealBuilder, _a92, _b71, PgReal;
 var init_real = __esm({
   "../drizzle-orm/dist/pg-core/columns/real.js"() {
     "use strict";
     init_entity();
     init_common2();
-    PgRealBuilder = class extends (_b66 = PgColumnBuilder, _a87 = entityKind, _b66) {
+    PgRealBuilder = class extends (_b70 = PgColumnBuilder, _a91 = entityKind, _b70) {
       constructor(name2, length) {
         super(name2, "number", "PgReal");
         this.config.length = length;
@@ -24538,8 +24620,8 @@ var init_real = __esm({
         return new PgReal(table6, this.config);
       }
     };
-    __publicField(PgRealBuilder, _a87, "PgRealBuilder");
-    PgReal = class extends (_b67 = PgColumn, _a88 = entityKind, _b67) {
+    __publicField(PgRealBuilder, _a91, "PgRealBuilder");
+    PgReal = class extends (_b71 = PgColumn, _a92 = entityKind, _b71) {
       constructor(table6, config) {
         super(table6, config);
         __publicField(this, "mapFromDriverValue", (value) => {
@@ -24553,7 +24635,7 @@ var init_real = __esm({
         return "real";
       }
     };
-    __publicField(PgReal, _a88, "PgReal");
+    __publicField(PgReal, _a92, "PgReal");
   }
 });
 
@@ -24561,13 +24643,13 @@ var init_real = __esm({
 function serial(name2) {
   return new PgSerialBuilder(name2 ?? "");
 }
-var _a89, _b68, PgSerialBuilder, _a90, _b69, PgSerial;
+var _a93, _b72, PgSerialBuilder, _a94, _b73, PgSerial;
 var init_serial = __esm({
   "../drizzle-orm/dist/pg-core/columns/serial.js"() {
     "use strict";
     init_entity();
     init_common2();
-    PgSerialBuilder = class extends (_b68 = PgColumnBuilder, _a89 = entityKind, _b68) {
+    PgSerialBuilder = class extends (_b72 = PgColumnBuilder, _a93 = entityKind, _b72) {
       constructor(name2) {
         super(name2, "number", "PgSerial");
         this.config.hasDefault = true;
@@ -24578,13 +24660,13 @@ var init_serial = __esm({
         return new PgSerial(table6, this.config);
       }
     };
-    __publicField(PgSerialBuilder, _a89, "PgSerialBuilder");
-    PgSerial = class extends (_b69 = PgColumn, _a90 = entityKind, _b69) {
+    __publicField(PgSerialBuilder, _a93, "PgSerialBuilder");
+    PgSerial = class extends (_b73 = PgColumn, _a94 = entityKind, _b73) {
       getSQLType() {
         return "serial";
       }
     };
-    __publicField(PgSerial, _a90, "PgSerial");
+    __publicField(PgSerial, _a94, "PgSerial");
   }
 });
 
@@ -24592,14 +24674,14 @@ var init_serial = __esm({
 function smallint(name2) {
   return new PgSmallIntBuilder(name2 ?? "");
 }
-var _a91, _b70, PgSmallIntBuilder, _a92, _b71, PgSmallInt;
+var _a95, _b74, PgSmallIntBuilder, _a96, _b75, PgSmallInt;
 var init_smallint = __esm({
   "../drizzle-orm/dist/pg-core/columns/smallint.js"() {
     "use strict";
     init_entity();
     init_common2();
     init_int_common();
-    PgSmallIntBuilder = class extends (_b70 = PgIntColumnBaseBuilder, _a91 = entityKind, _b70) {
+    PgSmallIntBuilder = class extends (_b74 = PgIntColumnBaseBuilder, _a95 = entityKind, _b74) {
       constructor(name2) {
         super(name2, "number", "PgSmallInt");
       }
@@ -24608,8 +24690,8 @@ var init_smallint = __esm({
         return new PgSmallInt(table6, this.config);
       }
     };
-    __publicField(PgSmallIntBuilder, _a91, "PgSmallIntBuilder");
-    PgSmallInt = class extends (_b71 = PgColumn, _a92 = entityKind, _b71) {
+    __publicField(PgSmallIntBuilder, _a95, "PgSmallIntBuilder");
+    PgSmallInt = class extends (_b75 = PgColumn, _a96 = entityKind, _b75) {
       constructor() {
         super(...arguments);
         __publicField(this, "mapFromDriverValue", (value) => {
@@ -24623,7 +24705,7 @@ var init_smallint = __esm({
         return "smallint";
       }
     };
-    __publicField(PgSmallInt, _a92, "PgSmallInt");
+    __publicField(PgSmallInt, _a96, "PgSmallInt");
   }
 });
 
@@ -24631,13 +24713,13 @@ var init_smallint = __esm({
 function smallserial(name2) {
   return new PgSmallSerialBuilder(name2 ?? "");
 }
-var _a93, _b72, PgSmallSerialBuilder, _a94, _b73, PgSmallSerial;
+var _a97, _b76, PgSmallSerialBuilder, _a98, _b77, PgSmallSerial;
 var init_smallserial = __esm({
   "../drizzle-orm/dist/pg-core/columns/smallserial.js"() {
     "use strict";
     init_entity();
     init_common2();
-    PgSmallSerialBuilder = class extends (_b72 = PgColumnBuilder, _a93 = entityKind, _b72) {
+    PgSmallSerialBuilder = class extends (_b76 = PgColumnBuilder, _a97 = entityKind, _b76) {
       constructor(name2) {
         super(name2, "number", "PgSmallSerial");
         this.config.hasDefault = true;
@@ -24651,13 +24733,13 @@ var init_smallserial = __esm({
         );
       }
     };
-    __publicField(PgSmallSerialBuilder, _a93, "PgSmallSerialBuilder");
-    PgSmallSerial = class extends (_b73 = PgColumn, _a94 = entityKind, _b73) {
+    __publicField(PgSmallSerialBuilder, _a97, "PgSmallSerialBuilder");
+    PgSmallSerial = class extends (_b77 = PgColumn, _a98 = entityKind, _b77) {
       getSQLType() {
         return "smallserial";
       }
     };
-    __publicField(PgSmallSerial, _a94, "PgSmallSerial");
+    __publicField(PgSmallSerial, _a98, "PgSmallSerial");
   }
 });
 
@@ -24666,14 +24748,14 @@ function text(a, b = {}) {
   const { name: name2, config } = getColumnNameAndConfig(a, b);
   return new PgTextBuilder(name2, config);
 }
-var _a95, _b74, PgTextBuilder, _a96, _b75, PgText;
+var _a99, _b78, PgTextBuilder, _a100, _b79, PgText;
 var init_text = __esm({
   "../drizzle-orm/dist/pg-core/columns/text.js"() {
     "use strict";
     init_entity();
     init_utils2();
     init_common2();
-    PgTextBuilder = class extends (_b74 = PgColumnBuilder, _a95 = entityKind, _b74) {
+    PgTextBuilder = class extends (_b78 = PgColumnBuilder, _a99 = entityKind, _b78) {
       constructor(name2, config) {
         super(name2, "string", "PgText");
         this.config.enumValues = config.enum;
@@ -24683,8 +24765,8 @@ var init_text = __esm({
         return new PgText(table6, this.config);
       }
     };
-    __publicField(PgTextBuilder, _a95, "PgTextBuilder");
-    PgText = class extends (_b75 = PgColumn, _a96 = entityKind, _b75) {
+    __publicField(PgTextBuilder, _a99, "PgTextBuilder");
+    PgText = class extends (_b79 = PgColumn, _a100 = entityKind, _b79) {
       constructor() {
         super(...arguments);
         __publicField(this, "enumValues", this.config.enumValues);
@@ -24693,7 +24775,7 @@ var init_text = __esm({
         return "text";
       }
     };
-    __publicField(PgText, _a96, "PgText");
+    __publicField(PgText, _a100, "PgText");
   }
 });
 
@@ -24702,7 +24784,7 @@ function time(a, b = {}) {
   const { name: name2, config } = getColumnNameAndConfig(a, b);
   return new PgTimeBuilder(name2, config.withTimezone ?? false, config.precision);
 }
-var _a97, _b76, PgTimeBuilder, _a98, _b77, PgTime;
+var _a101, _b80, PgTimeBuilder, _a102, _b81, PgTime;
 var init_time = __esm({
   "../drizzle-orm/dist/pg-core/columns/time.js"() {
     "use strict";
@@ -24710,7 +24792,7 @@ var init_time = __esm({
     init_utils2();
     init_common2();
     init_date_common();
-    PgTimeBuilder = class extends (_b76 = PgDateColumnBaseBuilder, _a97 = entityKind, _b76) {
+    PgTimeBuilder = class extends (_b80 = PgDateColumnBaseBuilder, _a101 = entityKind, _b80) {
       constructor(name2, withTimezone, precision) {
         super(name2, "string", "PgTime");
         this.withTimezone = withTimezone;
@@ -24723,8 +24805,8 @@ var init_time = __esm({
         return new PgTime(table6, this.config);
       }
     };
-    __publicField(PgTimeBuilder, _a97, "PgTimeBuilder");
-    PgTime = class extends (_b77 = PgColumn, _a98 = entityKind, _b77) {
+    __publicField(PgTimeBuilder, _a101, "PgTimeBuilder");
+    PgTime = class extends (_b81 = PgColumn, _a102 = entityKind, _b81) {
       constructor(table6, config) {
         super(table6, config);
         __publicField(this, "withTimezone");
@@ -24737,7 +24819,7 @@ var init_time = __esm({
         return `time${precision}${this.withTimezone ? " with time zone" : ""}`;
       }
     };
-    __publicField(PgTime, _a98, "PgTime");
+    __publicField(PgTime, _a102, "PgTime");
   }
 });
 
@@ -24749,7 +24831,7 @@ function timestamp(a, b = {}) {
   }
   return new PgTimestampBuilder(name2, config?.withTimezone ?? false, config?.precision);
 }
-var _a99, _b78, PgTimestampBuilder, _a100, _b79, PgTimestamp, _a101, _b80, PgTimestampStringBuilder, _a102, _b81, PgTimestampString;
+var _a103, _b82, PgTimestampBuilder, _a104, _b83, PgTimestamp, _a105, _b84, PgTimestampStringBuilder, _a106, _b85, PgTimestampString;
 var init_timestamp = __esm({
   "../drizzle-orm/dist/pg-core/columns/timestamp.js"() {
     "use strict";
@@ -24757,7 +24839,7 @@ var init_timestamp = __esm({
     init_utils2();
     init_common2();
     init_date_common();
-    PgTimestampBuilder = class extends (_b78 = PgDateColumnBaseBuilder, _a99 = entityKind, _b78) {
+    PgTimestampBuilder = class extends (_b82 = PgDateColumnBaseBuilder, _a103 = entityKind, _b82) {
       constructor(name2, withTimezone, precision) {
         super(name2, "date", "PgTimestamp");
         this.config.withTimezone = withTimezone;
@@ -24768,8 +24850,8 @@ var init_timestamp = __esm({
         return new PgTimestamp(table6, this.config);
       }
     };
-    __publicField(PgTimestampBuilder, _a99, "PgTimestampBuilder");
-    PgTimestamp = class extends (_b79 = PgColumn, _a100 = entityKind, _b79) {
+    __publicField(PgTimestampBuilder, _a103, "PgTimestampBuilder");
+    PgTimestamp = class extends (_b83 = PgColumn, _a104 = entityKind, _b83) {
       constructor(table6, config) {
         super(table6, config);
         __publicField(this, "withTimezone");
@@ -24788,8 +24870,8 @@ var init_timestamp = __esm({
         return `timestamp${precision}${this.withTimezone ? " with time zone" : ""}`;
       }
     };
-    __publicField(PgTimestamp, _a100, "PgTimestamp");
-    PgTimestampStringBuilder = class extends (_b80 = PgDateColumnBaseBuilder, _a101 = entityKind, _b80) {
+    __publicField(PgTimestamp, _a104, "PgTimestamp");
+    PgTimestampStringBuilder = class extends (_b84 = PgDateColumnBaseBuilder, _a105 = entityKind, _b84) {
       constructor(name2, withTimezone, precision) {
         super(name2, "string", "PgTimestampString");
         this.config.withTimezone = withTimezone;
@@ -24803,8 +24885,8 @@ var init_timestamp = __esm({
         );
       }
     };
-    __publicField(PgTimestampStringBuilder, _a101, "PgTimestampStringBuilder");
-    PgTimestampString = class extends (_b81 = PgColumn, _a102 = entityKind, _b81) {
+    __publicField(PgTimestampStringBuilder, _a105, "PgTimestampStringBuilder");
+    PgTimestampString = class extends (_b85 = PgColumn, _a106 = entityKind, _b85) {
       constructor(table6, config) {
         super(table6, config);
         __publicField(this, "withTimezone");
@@ -24817,7 +24899,7 @@ var init_timestamp = __esm({
         return `timestamp${precision}${this.withTimezone ? " with time zone" : ""}`;
       }
     };
-    __publicField(PgTimestampString, _a102, "PgTimestampString");
+    __publicField(PgTimestampString, _a106, "PgTimestampString");
   }
 });
 
@@ -24825,14 +24907,14 @@ var init_timestamp = __esm({
 function uuid(name2) {
   return new PgUUIDBuilder(name2 ?? "");
 }
-var _a103, _b82, PgUUIDBuilder, _a104, _b83, PgUUID;
+var _a107, _b86, PgUUIDBuilder, _a108, _b87, PgUUID;
 var init_uuid = __esm({
   "../drizzle-orm/dist/pg-core/columns/uuid.js"() {
     "use strict";
     init_entity();
     init_sql();
     init_common2();
-    PgUUIDBuilder = class extends (_b82 = PgColumnBuilder, _a103 = entityKind, _b82) {
+    PgUUIDBuilder = class extends (_b86 = PgColumnBuilder, _a107 = entityKind, _b86) {
       constructor(name2) {
         super(name2, "string", "PgUUID");
       }
@@ -24847,13 +24929,13 @@ var init_uuid = __esm({
         return new PgUUID(table6, this.config);
       }
     };
-    __publicField(PgUUIDBuilder, _a103, "PgUUIDBuilder");
-    PgUUID = class extends (_b83 = PgColumn, _a104 = entityKind, _b83) {
+    __publicField(PgUUIDBuilder, _a107, "PgUUIDBuilder");
+    PgUUID = class extends (_b87 = PgColumn, _a108 = entityKind, _b87) {
       getSQLType() {
         return "uuid";
       }
     };
-    __publicField(PgUUID, _a104, "PgUUID");
+    __publicField(PgUUID, _a108, "PgUUID");
   }
 });
 
@@ -24862,14 +24944,14 @@ function varchar(a, b = {}) {
   const { name: name2, config } = getColumnNameAndConfig(a, b);
   return new PgVarcharBuilder(name2, config);
 }
-var _a105, _b84, PgVarcharBuilder, _a106, _b85, PgVarchar;
+var _a109, _b88, PgVarcharBuilder, _a110, _b89, PgVarchar;
 var init_varchar = __esm({
   "../drizzle-orm/dist/pg-core/columns/varchar.js"() {
     "use strict";
     init_entity();
     init_utils2();
     init_common2();
-    PgVarcharBuilder = class extends (_b84 = PgColumnBuilder, _a105 = entityKind, _b84) {
+    PgVarcharBuilder = class extends (_b88 = PgColumnBuilder, _a109 = entityKind, _b88) {
       constructor(name2, config) {
         super(name2, "string", "PgVarchar");
         this.config.length = config.length;
@@ -24883,8 +24965,8 @@ var init_varchar = __esm({
         );
       }
     };
-    __publicField(PgVarcharBuilder, _a105, "PgVarcharBuilder");
-    PgVarchar = class extends (_b85 = PgColumn, _a106 = entityKind, _b85) {
+    __publicField(PgVarcharBuilder, _a109, "PgVarcharBuilder");
+    PgVarchar = class extends (_b89 = PgColumn, _a110 = entityKind, _b89) {
       constructor() {
         super(...arguments);
         __publicField(this, "length", this.config.length);
@@ -24894,7 +24976,7 @@ var init_varchar = __esm({
         return this.length === void 0 ? `varchar` : `varchar(${this.length})`;
       }
     };
-    __publicField(PgVarchar, _a106, "PgVarchar");
+    __publicField(PgVarchar, _a110, "PgVarchar");
   }
 });
 
@@ -24903,14 +24985,14 @@ function bit(a, b) {
   const { name: name2, config } = getColumnNameAndConfig(a, b);
   return new PgBinaryVectorBuilder(name2, config);
 }
-var _a107, _b86, PgBinaryVectorBuilder, _a108, _b87, PgBinaryVector;
+var _a111, _b90, PgBinaryVectorBuilder, _a112, _b91, PgBinaryVector;
 var init_bit = __esm({
   "../drizzle-orm/dist/pg-core/columns/vector_extension/bit.js"() {
     "use strict";
     init_entity();
     init_utils2();
     init_common2();
-    PgBinaryVectorBuilder = class extends (_b86 = PgColumnBuilder, _a107 = entityKind, _b86) {
+    PgBinaryVectorBuilder = class extends (_b90 = PgColumnBuilder, _a111 = entityKind, _b90) {
       constructor(name2, config) {
         super(name2, "string", "PgBinaryVector");
         this.config.dimensions = config.dimensions;
@@ -24923,8 +25005,8 @@ var init_bit = __esm({
         );
       }
     };
-    __publicField(PgBinaryVectorBuilder, _a107, "PgBinaryVectorBuilder");
-    PgBinaryVector = class extends (_b87 = PgColumn, _a108 = entityKind, _b87) {
+    __publicField(PgBinaryVectorBuilder, _a111, "PgBinaryVectorBuilder");
+    PgBinaryVector = class extends (_b91 = PgColumn, _a112 = entityKind, _b91) {
       constructor() {
         super(...arguments);
         __publicField(this, "dimensions", this.config.dimensions);
@@ -24933,7 +25015,7 @@ var init_bit = __esm({
         return `bit(${this.dimensions})`;
       }
     };
-    __publicField(PgBinaryVector, _a108, "PgBinaryVector");
+    __publicField(PgBinaryVector, _a112, "PgBinaryVector");
   }
 });
 
@@ -24942,14 +25024,14 @@ function halfvec(a, b) {
   const { name: name2, config } = getColumnNameAndConfig(a, b);
   return new PgHalfVectorBuilder(name2, config);
 }
-var _a109, _b88, PgHalfVectorBuilder, _a110, _b89, PgHalfVector;
+var _a113, _b92, PgHalfVectorBuilder, _a114, _b93, PgHalfVector;
 var init_halfvec = __esm({
   "../drizzle-orm/dist/pg-core/columns/vector_extension/halfvec.js"() {
     "use strict";
     init_entity();
     init_utils2();
     init_common2();
-    PgHalfVectorBuilder = class extends (_b88 = PgColumnBuilder, _a109 = entityKind, _b88) {
+    PgHalfVectorBuilder = class extends (_b92 = PgColumnBuilder, _a113 = entityKind, _b92) {
       constructor(name2, config) {
         super(name2, "array", "PgHalfVector");
         this.config.dimensions = config.dimensions;
@@ -24962,8 +25044,8 @@ var init_halfvec = __esm({
         );
       }
     };
-    __publicField(PgHalfVectorBuilder, _a109, "PgHalfVectorBuilder");
-    PgHalfVector = class extends (_b89 = PgColumn, _a110 = entityKind, _b89) {
+    __publicField(PgHalfVectorBuilder, _a113, "PgHalfVectorBuilder");
+    PgHalfVector = class extends (_b93 = PgColumn, _a114 = entityKind, _b93) {
       constructor() {
         super(...arguments);
         __publicField(this, "dimensions", this.config.dimensions);
@@ -24978,7 +25060,7 @@ var init_halfvec = __esm({
         return value.slice(1, -1).split(",").map((v) => Number.parseFloat(v));
       }
     };
-    __publicField(PgHalfVector, _a110, "PgHalfVector");
+    __publicField(PgHalfVector, _a114, "PgHalfVector");
   }
 });
 
@@ -24987,14 +25069,14 @@ function sparsevec(a, b) {
   const { name: name2, config } = getColumnNameAndConfig(a, b);
   return new PgSparseVectorBuilder(name2, config);
 }
-var _a111, _b90, PgSparseVectorBuilder, _a112, _b91, PgSparseVector;
+var _a115, _b94, PgSparseVectorBuilder, _a116, _b95, PgSparseVector;
 var init_sparsevec = __esm({
   "../drizzle-orm/dist/pg-core/columns/vector_extension/sparsevec.js"() {
     "use strict";
     init_entity();
     init_utils2();
     init_common2();
-    PgSparseVectorBuilder = class extends (_b90 = PgColumnBuilder, _a111 = entityKind, _b90) {
+    PgSparseVectorBuilder = class extends (_b94 = PgColumnBuilder, _a115 = entityKind, _b94) {
       constructor(name2, config) {
         super(name2, "string", "PgSparseVector");
         this.config.dimensions = config.dimensions;
@@ -25007,8 +25089,8 @@ var init_sparsevec = __esm({
         );
       }
     };
-    __publicField(PgSparseVectorBuilder, _a111, "PgSparseVectorBuilder");
-    PgSparseVector = class extends (_b91 = PgColumn, _a112 = entityKind, _b91) {
+    __publicField(PgSparseVectorBuilder, _a115, "PgSparseVectorBuilder");
+    PgSparseVector = class extends (_b95 = PgColumn, _a116 = entityKind, _b95) {
       constructor() {
         super(...arguments);
         __publicField(this, "dimensions", this.config.dimensions);
@@ -25017,7 +25099,7 @@ var init_sparsevec = __esm({
         return `sparsevec(${this.dimensions})`;
       }
     };
-    __publicField(PgSparseVector, _a112, "PgSparseVector");
+    __publicField(PgSparseVector, _a116, "PgSparseVector");
   }
 });
 
@@ -25026,14 +25108,14 @@ function vector(a, b) {
   const { name: name2, config } = getColumnNameAndConfig(a, b);
   return new PgVectorBuilder(name2, config);
 }
-var _a113, _b92, PgVectorBuilder, _a114, _b93, PgVector;
+var _a117, _b96, PgVectorBuilder, _a118, _b97, PgVector;
 var init_vector = __esm({
   "../drizzle-orm/dist/pg-core/columns/vector_extension/vector.js"() {
     "use strict";
     init_entity();
     init_utils2();
     init_common2();
-    PgVectorBuilder = class extends (_b92 = PgColumnBuilder, _a113 = entityKind, _b92) {
+    PgVectorBuilder = class extends (_b96 = PgColumnBuilder, _a117 = entityKind, _b96) {
       constructor(name2, config) {
         super(name2, "array", "PgVector");
         this.config.dimensions = config.dimensions;
@@ -25046,8 +25128,8 @@ var init_vector = __esm({
         );
       }
     };
-    __publicField(PgVectorBuilder, _a113, "PgVectorBuilder");
-    PgVector = class extends (_b93 = PgColumn, _a114 = entityKind, _b93) {
+    __publicField(PgVectorBuilder, _a117, "PgVectorBuilder");
+    PgVector = class extends (_b97 = PgColumn, _a118 = entityKind, _b97) {
       constructor() {
         super(...arguments);
         __publicField(this, "dimensions", this.config.dimensions);
@@ -25062,7 +25144,7 @@ var init_vector = __esm({
         return value.slice(1, -1).split(",").map((v) => Number.parseFloat(v));
       }
     };
-    __publicField(PgVector, _a114, "PgVector");
+    __publicField(PgVector, _a118, "PgVector");
   }
 });
 
@@ -25175,7 +25257,7 @@ function pgTableWithSchema(name2, columns, extraConfig, schema5, baseName = name
     }
   });
 }
-var InlineForeignKeys, EnableRLS, _a115, _b94, _c3, _d2, _e2, _f2, PgTable, pgTable;
+var InlineForeignKeys, EnableRLS, _a119, _b98, _c3, _d2, _e2, _f2, PgTable, pgTable;
 var init_table2 = __esm({
   "../drizzle-orm/dist/pg-core/table.js"() {
     "use strict";
@@ -25184,7 +25266,7 @@ var init_table2 = __esm({
     init_all();
     InlineForeignKeys = Symbol.for("drizzle:PgInlineForeignKeys");
     EnableRLS = Symbol.for("drizzle:EnableRLS");
-    PgTable = class extends (_f2 = Table2, _e2 = entityKind, _d2 = InlineForeignKeys, _c3 = EnableRLS, _b94 = Table2.Symbol.ExtraConfigBuilder, _a115 = Table2.Symbol.ExtraConfigColumns, _f2) {
+    PgTable = class extends (_f2 = Table2, _e2 = entityKind, _d2 = InlineForeignKeys, _c3 = EnableRLS, _b98 = Table2.Symbol.ExtraConfigBuilder, _a119 = Table2.Symbol.ExtraConfigColumns, _f2) {
       constructor() {
         super(...arguments);
         /**@internal */
@@ -25192,9 +25274,9 @@ var init_table2 = __esm({
         /** @internal */
         __publicField(this, _c3, false);
         /** @internal */
-        __publicField(this, _b94);
+        __publicField(this, _b98);
         /** @internal */
-        __publicField(this, _a115, {});
+        __publicField(this, _a119, {});
       }
     };
     __publicField(PgTable, _e2, "PgTable");
@@ -25210,13 +25292,13 @@ var init_table2 = __esm({
 });
 
 // ../drizzle-orm/dist/pg-core/primary-keys.js
-var _a116, PrimaryKeyBuilder, _a117, PrimaryKey;
+var _a120, PrimaryKeyBuilder, _a121, PrimaryKey;
 var init_primary_keys = __esm({
   "../drizzle-orm/dist/pg-core/primary-keys.js"() {
     "use strict";
     init_entity();
     init_table2();
-    _a116 = entityKind;
+    _a120 = entityKind;
     PrimaryKeyBuilder = class {
       constructor(columns, name2) {
         /** @internal */
@@ -25231,8 +25313,8 @@ var init_primary_keys = __esm({
         return new PrimaryKey(table6, this.columns, this.name);
       }
     };
-    __publicField(PrimaryKeyBuilder, _a116, "PgPrimaryKeyBuilder");
-    _a117 = entityKind;
+    __publicField(PrimaryKeyBuilder, _a120, "PgPrimaryKeyBuilder");
+    _a121 = entityKind;
     PrimaryKey = class {
       constructor(table6, columns, name2) {
         __publicField(this, "columns");
@@ -25245,7 +25327,7 @@ var init_primary_keys = __esm({
         return this.name ?? `${this.table[PgTable.Symbol.Name]}_${this.columns.map((column6) => column6.name).join("_")}_pk`;
       }
     };
-    __publicField(PrimaryKey, _a117, "PgPrimaryKey");
+    __publicField(PrimaryKey, _a121, "PgPrimaryKey");
   }
 });
 
@@ -25468,7 +25550,7 @@ function mapRelationalRow(tablesConfig, tableConfig, row, buildQueryResultSelect
   }
   return result;
 }
-var _a118, Relation, _a119, Relations, _a120, _b95, _One, One, _a121, _b96, _Many, Many;
+var _a122, Relation, _a123, Relations, _a124, _b99, _One, One, _a125, _b100, _Many, Many;
 var init_relations = __esm({
   "../drizzle-orm/dist/relations.js"() {
     "use strict";
@@ -25478,7 +25560,7 @@ var init_relations = __esm({
     init_primary_keys();
     init_expressions();
     init_sql();
-    _a118 = entityKind;
+    _a122 = entityKind;
     Relation = class {
       constructor(sourceTable, referencedTable, relationName) {
         __publicField(this, "referencedTableName");
@@ -25489,16 +25571,16 @@ var init_relations = __esm({
         this.referencedTableName = referencedTable[Table2.Symbol.Name];
       }
     };
-    __publicField(Relation, _a118, "Relation");
-    _a119 = entityKind;
+    __publicField(Relation, _a122, "Relation");
+    _a123 = entityKind;
     Relations = class {
       constructor(table6, config) {
         this.table = table6;
         this.config = config;
       }
     };
-    __publicField(Relations, _a119, "Relations");
-    _One = class _One extends (_b95 = Relation, _a120 = entityKind, _b95) {
+    __publicField(Relations, _a123, "Relations");
+    _One = class _One extends (_b99 = Relation, _a124 = entityKind, _b99) {
       constructor(sourceTable, referencedTable, config, isNullable) {
         super(sourceTable, referencedTable, config?.relationName);
         this.config = config;
@@ -25515,9 +25597,9 @@ var init_relations = __esm({
         return relation;
       }
     };
-    __publicField(_One, _a120, "One");
+    __publicField(_One, _a124, "One");
     One = _One;
-    _Many = class _Many extends (_b96 = Relation, _a121 = entityKind, _b96) {
+    _Many = class _Many extends (_b100 = Relation, _a125 = entityKind, _b100) {
       constructor(sourceTable, referencedTable, config) {
         super(sourceTable, referencedTable, config?.relationName);
         this.config = config;
@@ -25532,7 +25614,7 @@ var init_relations = __esm({
         return relation;
       }
     };
-    __publicField(_Many, _a121, "Many");
+    __publicField(_Many, _a125, "Many");
     Many = _Many;
   }
 });
@@ -25786,12 +25868,12 @@ var init_alias2 = __esm({
 });
 
 // ../drizzle-orm/dist/pg-core/checks.js
-var _a122, CheckBuilder, _a123, Check;
+var _a126, CheckBuilder, _a127, Check;
 var init_checks = __esm({
   "../drizzle-orm/dist/pg-core/checks.js"() {
     "use strict";
     init_entity();
-    _a122 = entityKind;
+    _a126 = entityKind;
     CheckBuilder = class {
       constructor(name2, value) {
         __publicField(this, "brand");
@@ -25803,8 +25885,8 @@ var init_checks = __esm({
         return new Check(table6, this);
       }
     };
-    __publicField(CheckBuilder, _a122, "PgCheckBuilder");
-    _a123 = entityKind;
+    __publicField(CheckBuilder, _a126, "PgCheckBuilder");
+    _a127 = entityKind;
     Check = class {
       constructor(table6, builder) {
         __publicField(this, "name");
@@ -25814,7 +25896,7 @@ var init_checks = __esm({
         this.value = builder.value;
       }
     };
-    __publicField(Check, _a123, "PgCheck");
+    __publicField(Check, _a127, "PgCheck");
   }
 });
 
@@ -25861,7 +25943,7 @@ var init_columns = __esm({
 });
 
 // ../drizzle-orm/dist/selection-proxy.js
-var _a124, _SelectionProxyHandler, SelectionProxyHandler;
+var _a128, _SelectionProxyHandler, SelectionProxyHandler;
 var init_selection_proxy = __esm({
   "../drizzle-orm/dist/selection-proxy.js"() {
     "use strict";
@@ -25871,7 +25953,7 @@ var init_selection_proxy = __esm({
     init_sql();
     init_subquery();
     init_view_common();
-    _a124 = entityKind;
+    _a128 = entityKind;
     _SelectionProxyHandler = class _SelectionProxyHandler {
       constructor(config) {
         __publicField(this, "config");
@@ -25937,13 +26019,13 @@ var init_selection_proxy = __esm({
         return new Proxy(value, new _SelectionProxyHandler(this.config));
       }
     };
-    __publicField(_SelectionProxyHandler, _a124, "SelectionProxyHandler");
+    __publicField(_SelectionProxyHandler, _a128, "SelectionProxyHandler");
     SelectionProxyHandler = _SelectionProxyHandler;
   }
 });
 
 // ../drizzle-orm/dist/pg-core/query-builders/delete.js
-var _a125, _b97, PgDeleteBase;
+var _a129, _b101, PgDeleteBase;
 var init_delete = __esm({
   "../drizzle-orm/dist/pg-core/query-builders/delete.js"() {
     "use strict";
@@ -25953,7 +26035,7 @@ var init_delete = __esm({
     init_table();
     init_tracing();
     init_utils2();
-    PgDeleteBase = class extends (_b97 = QueryPromise, _a125 = entityKind, _b97) {
+    PgDeleteBase = class extends (_b101 = QueryPromise, _a129 = entityKind, _b101) {
       constructor(table6, session, dialect6, withList) {
         super();
         __publicField(this, "config");
@@ -26042,7 +26124,7 @@ var init_delete = __esm({
         return this;
       }
     };
-    __publicField(PgDeleteBase, _a125, "PgDelete");
+    __publicField(PgDeleteBase, _a129, "PgDelete");
   }
 });
 
@@ -26061,13 +26143,13 @@ function toCamelCase(input) {
 function noopCase(input) {
   return input;
 }
-var _a126, CasingCache;
+var _a130, CasingCache;
 var init_casing = __esm({
   "../drizzle-orm/dist/casing.js"() {
     "use strict";
     init_entity();
     init_table();
-    _a126 = entityKind;
+    _a130 = entityKind;
     CasingCache = class {
       constructor(casing2) {
         /** @internal */
@@ -26104,25 +26186,25 @@ var init_casing = __esm({
         this.cachedTables = {};
       }
     };
-    __publicField(CasingCache, _a126, "CasingCache");
+    __publicField(CasingCache, _a130, "CasingCache");
   }
 });
 
 // ../drizzle-orm/dist/pg-core/view-base.js
-var _a127, _b98, PgViewBase;
+var _a131, _b102, PgViewBase;
 var init_view_base = __esm({
   "../drizzle-orm/dist/pg-core/view-base.js"() {
     "use strict";
     init_entity();
     init_sql();
-    PgViewBase = class extends (_b98 = View3, _a127 = entityKind, _b98) {
+    PgViewBase = class extends (_b102 = View3, _a131 = entityKind, _b102) {
     };
-    __publicField(PgViewBase, _a127, "PgViewBase");
+    __publicField(PgViewBase, _a131, "PgViewBase");
   }
 });
 
 // ../drizzle-orm/dist/pg-core/dialect.js
-var _a128, PgDialect;
+var _a132, PgDialect;
 var init_dialect = __esm({
   "../drizzle-orm/dist/pg-core/dialect.js"() {
     "use strict";
@@ -26141,7 +26223,7 @@ var init_dialect = __esm({
     init_utils2();
     init_view_common();
     init_view_base();
-    _a128 = entityKind;
+    _a132 = entityKind;
     PgDialect = class {
       constructor(config) {
         /** @internal */
@@ -26324,7 +26406,7 @@ var init_dialect = __esm({
         return sql.join(joinsArray);
       }
       buildFromTable(table6) {
-        if (is(table6, Table2) && table6[Table2.Symbol.OriginalName] !== table6[Table2.Symbol.Name]) {
+        if (is(table6, Table2) && table6[Table2.Symbol.IsAlias]) {
           let fullName = sql`${sql.identifier(table6[Table2.Symbol.OriginalName])}`;
           if (table6[Table2.Symbol.Schema]) {
             fullName = sql`${sql.identifier(table6[Table2.Symbol.Schema])}.${fullName}`;
@@ -27233,24 +27315,24 @@ var init_dialect = __esm({
         };
       }
     };
-    __publicField(PgDialect, _a128, "PgDialect");
+    __publicField(PgDialect, _a132, "PgDialect");
   }
 });
 
 // ../drizzle-orm/dist/query-builders/query-builder.js
-var _a129, TypedQueryBuilder;
+var _a133, TypedQueryBuilder;
 var init_query_builder = __esm({
   "../drizzle-orm/dist/query-builders/query-builder.js"() {
     "use strict";
     init_entity();
-    _a129 = entityKind;
+    _a133 = entityKind;
     TypedQueryBuilder = class {
       /** @internal */
       getSelectedFields() {
         return this._.selectedFields;
       }
     };
-    __publicField(TypedQueryBuilder, _a129, "TypedQueryBuilder");
+    __publicField(TypedQueryBuilder, _a133, "TypedQueryBuilder");
   }
 });
 
@@ -27272,7 +27354,7 @@ function createSetOperator(type, isAll) {
     return leftSelect.addSetOperators(setOperators);
   };
 }
-var _a130, PgSelectBuilder, _a131, _b99, PgSelectQueryBuilderBase, _a132, _b100, PgSelectBase, getPgSetOperators, union2, unionAll, intersect, intersectAll, except, exceptAll;
+var _a134, PgSelectBuilder, _a135, _b103, PgSelectQueryBuilderBase, _a136, _b104, PgSelectBase, getPgSetOperators, union2, unionAll, intersect, intersectAll, except, exceptAll;
 var init_select2 = __esm({
   "../drizzle-orm/dist/pg-core/query-builders/select.js"() {
     "use strict";
@@ -27288,7 +27370,7 @@ var init_select2 = __esm({
     init_utils2();
     init_utils2();
     init_view_common();
-    _a130 = entityKind;
+    _a134 = entityKind;
     PgSelectBuilder = class {
       constructor(config) {
         __publicField(this, "fields");
@@ -27344,8 +27426,8 @@ var init_select2 = __esm({
         }).setToken(this.authToken);
       }
     };
-    __publicField(PgSelectBuilder, _a130, "PgSelectBuilder");
-    PgSelectQueryBuilderBase = class extends (_b99 = TypedQueryBuilder, _a131 = entityKind, _b99) {
+    __publicField(PgSelectBuilder, _a134, "PgSelectBuilder");
+    PgSelectQueryBuilderBase = class extends (_b103 = TypedQueryBuilder, _a135 = entityKind, _b103) {
       constructor({ table: table6, fields, isPartialSelect, session, dialect: dialect6, withList, distinct }) {
         super();
         __publicField(this, "_");
@@ -27673,7 +27755,7 @@ var init_select2 = __esm({
         return (table6, on) => {
           const baseTableName = this.tableName;
           const tableName = getTableLikeName(table6);
-          if (typeof tableName === "string" && this.config.joins?.some((join) => join.alias === tableName)) {
+          if (typeof tableName === "string" && this.config.joins?.some((join2) => join2.alias === tableName)) {
             throw new Error(`Alias "${tableName}" is already used in this query`);
           }
           if (!this.isPartialSelect) {
@@ -27945,8 +28027,8 @@ var init_select2 = __esm({
         return this;
       }
     };
-    __publicField(PgSelectQueryBuilderBase, _a131, "PgSelectQueryBuilder");
-    PgSelectBase = class extends (_b100 = PgSelectQueryBuilderBase, _a132 = entityKind, _b100) {
+    __publicField(PgSelectQueryBuilderBase, _a135, "PgSelectQueryBuilder");
+    PgSelectBase = class extends (_b104 = PgSelectQueryBuilderBase, _a136 = entityKind, _b104) {
       constructor() {
         super(...arguments);
         __publicField(this, "authToken");
@@ -27985,7 +28067,7 @@ var init_select2 = __esm({
         return this;
       }
     };
-    __publicField(PgSelectBase, _a132, "PgSelect");
+    __publicField(PgSelectBase, _a136, "PgSelect");
     applyMixins(PgSelectBase, [QueryPromise]);
     getPgSetOperators = () => ({
       union: union2,
@@ -28005,7 +28087,7 @@ var init_select2 = __esm({
 });
 
 // ../drizzle-orm/dist/pg-core/query-builders/query-builder.js
-var _a133, QueryBuilder;
+var _a137, QueryBuilder;
 var init_query_builder2 = __esm({
   "../drizzle-orm/dist/pg-core/query-builders/query-builder.js"() {
     "use strict";
@@ -28014,7 +28096,7 @@ var init_query_builder2 = __esm({
     init_selection_proxy();
     init_subquery();
     init_select2();
-    _a133 = entityKind;
+    _a137 = entityKind;
     QueryBuilder = class {
       constructor(dialect6) {
         __publicField(this, "dialect");
@@ -28099,12 +28181,12 @@ var init_query_builder2 = __esm({
         return this.dialect;
       }
     };
-    __publicField(QueryBuilder, _a133, "PgQueryBuilder");
+    __publicField(QueryBuilder, _a137, "PgQueryBuilder");
   }
 });
 
 // ../drizzle-orm/dist/pg-core/query-builders/insert.js
-var _a134, PgInsertBuilder, _a135, _b101, PgInsertBase;
+var _a138, PgInsertBuilder, _a139, _b105, PgInsertBase;
 var init_insert = __esm({
   "../drizzle-orm/dist/pg-core/query-builders/insert.js"() {
     "use strict";
@@ -28116,7 +28198,7 @@ var init_insert = __esm({
     init_tracing();
     init_utils2();
     init_query_builder2();
-    _a134 = entityKind;
+    _a138 = entityKind;
     PgInsertBuilder = class {
       constructor(table6, session, dialect6, withList, overridingSystemValue_) {
         __publicField(this, "authToken");
@@ -28169,8 +28251,8 @@ var init_insert = __esm({
         return new PgInsertBase(this.table, select, this.session, this.dialect, this.withList, true);
       }
     };
-    __publicField(PgInsertBuilder, _a134, "PgInsertBuilder");
-    PgInsertBase = class extends (_b101 = QueryPromise, _a135 = entityKind, _b101) {
+    __publicField(PgInsertBuilder, _a138, "PgInsertBuilder");
+    PgInsertBase = class extends (_b105 = QueryPromise, _a139 = entityKind, _b105) {
       constructor(table6, values, session, dialect6, withList, select, overridingSystemValue_) {
         super();
         __publicField(this, "config");
@@ -28303,19 +28385,19 @@ var init_insert = __esm({
         return this;
       }
     };
-    __publicField(PgInsertBase, _a135, "PgInsert");
+    __publicField(PgInsertBase, _a139, "PgInsert");
   }
 });
 
 // ../drizzle-orm/dist/pg-core/query-builders/refresh-materialized-view.js
-var _a136, _b102, PgRefreshMaterializedView;
+var _a140, _b106, PgRefreshMaterializedView;
 var init_refresh_materialized_view = __esm({
   "../drizzle-orm/dist/pg-core/query-builders/refresh-materialized-view.js"() {
     "use strict";
     init_entity();
     init_query_promise();
     init_tracing();
-    PgRefreshMaterializedView = class extends (_b102 = QueryPromise, _a136 = entityKind, _b102) {
+    PgRefreshMaterializedView = class extends (_b106 = QueryPromise, _a140 = entityKind, _b106) {
       constructor(view5, session, dialect6) {
         super();
         __publicField(this, "config");
@@ -28366,7 +28448,7 @@ var init_refresh_materialized_view = __esm({
         return this;
       }
     };
-    __publicField(PgRefreshMaterializedView, _a136, "PgRefreshMaterializedView");
+    __publicField(PgRefreshMaterializedView, _a140, "PgRefreshMaterializedView");
   }
 });
 
@@ -28378,7 +28460,7 @@ var init_select_types = __esm({
 });
 
 // ../drizzle-orm/dist/pg-core/query-builders/update.js
-var _a137, PgUpdateBuilder, _a138, _b103, PgUpdateBase;
+var _a141, PgUpdateBuilder, _a142, _b107, PgUpdateBase;
 var init_update = __esm({
   "../drizzle-orm/dist/pg-core/query-builders/update.js"() {
     "use strict";
@@ -28391,7 +28473,7 @@ var init_update = __esm({
     init_table();
     init_utils2();
     init_view_common();
-    _a137 = entityKind;
+    _a141 = entityKind;
     PgUpdateBuilder = class {
       constructor(table6, session, dialect6, withList) {
         __publicField(this, "authToken");
@@ -28414,8 +28496,8 @@ var init_update = __esm({
         ).setToken(this.authToken);
       }
     };
-    __publicField(PgUpdateBuilder, _a137, "PgUpdateBuilder");
-    PgUpdateBase = class extends (_b103 = QueryPromise, _a138 = entityKind, _b103) {
+    __publicField(PgUpdateBuilder, _a141, "PgUpdateBuilder");
+    PgUpdateBase = class extends (_b107 = QueryPromise, _a142 = entityKind, _b107) {
       constructor(table6, set, session, dialect6, withList) {
         super();
         __publicField(this, "config");
@@ -28455,7 +28537,7 @@ var init_update = __esm({
       createJoin(joinType) {
         return (table6, on) => {
           const tableName = getTableLikeName(table6);
-          if (typeof tableName === "string" && this.config.joins.some((join) => join.alias === tableName)) {
+          if (typeof tableName === "string" && this.config.joins.some((join2) => join2.alias === tableName)) {
             throw new Error(`Alias "${tableName}" is already used in this query`);
           }
           if (typeof on === "function") {
@@ -28547,10 +28629,10 @@ var init_update = __esm({
               const fromFields = this.getTableLikeFields(this.config.from);
               fields[tableName] = fromFields;
             }
-            for (const join of this.config.joins) {
-              const tableName2 = getTableLikeName(join.table);
-              if (typeof tableName2 === "string" && !is(join.table, SQL)) {
-                const fromFields = this.getTableLikeFields(join.table);
+            for (const join2 of this.config.joins) {
+              const tableName2 = getTableLikeName(join2.table);
+              if (typeof tableName2 === "string" && !is(join2.table, SQL)) {
+                const fromFields = this.getTableLikeFields(join2.table);
                 fields[tableName2] = fromFields;
               }
             }
@@ -28597,7 +28679,7 @@ var init_update = __esm({
         return this;
       }
     };
-    __publicField(PgUpdateBase, _a138, "PgUpdate");
+    __publicField(PgUpdateBase, _a142, "PgUpdate");
   }
 });
 
@@ -28616,18 +28698,18 @@ var init_query_builders = __esm({
 });
 
 // ../drizzle-orm/dist/pg-core/query-builders/count.js
-var _a139, _b104, _c4, _PgCountBuilder, PgCountBuilder;
+var _a143, _b108, _c4, _PgCountBuilder, PgCountBuilder;
 var init_count = __esm({
   "../drizzle-orm/dist/pg-core/query-builders/count.js"() {
     "use strict";
     init_entity();
     init_sql();
-    _PgCountBuilder = class _PgCountBuilder extends (_c4 = SQL, _b104 = entityKind, _a139 = Symbol.toStringTag, _c4) {
+    _PgCountBuilder = class _PgCountBuilder extends (_c4 = SQL, _b108 = entityKind, _a143 = Symbol.toStringTag, _c4) {
       constructor(params) {
         super(_PgCountBuilder.buildEmbeddedCount(params.source, params.filters).queryChunks);
         __publicField(this, "sql");
         __publicField(this, "token");
-        __publicField(this, _a139, "PgCountBuilder");
+        __publicField(this, _a143, "PgCountBuilder");
         __publicField(this, "session");
         this.params = params;
         this.mapWith(Number);
@@ -28670,13 +28752,13 @@ var init_count = __esm({
         );
       }
     };
-    __publicField(_PgCountBuilder, _b104, "PgCountBuilder");
+    __publicField(_PgCountBuilder, _b108, "PgCountBuilder");
     PgCountBuilder = _PgCountBuilder;
   }
 });
 
 // ../drizzle-orm/dist/pg-core/query-builders/query.js
-var _a140, RelationalQueryBuilder, _a141, _b105, PgRelationalQuery;
+var _a144, RelationalQueryBuilder, _a145, _b109, PgRelationalQuery;
 var init_query = __esm({
   "../drizzle-orm/dist/pg-core/query-builders/query.js"() {
     "use strict";
@@ -28684,7 +28766,7 @@ var init_query = __esm({
     init_query_promise();
     init_relations();
     init_tracing();
-    _a140 = entityKind;
+    _a144 = entityKind;
     RelationalQueryBuilder = class {
       constructor(fullSchema, schema5, tableNamesMap, table6, tableConfig, dialect6, session) {
         this.fullSchema = fullSchema;
@@ -28722,8 +28804,8 @@ var init_query = __esm({
         );
       }
     };
-    __publicField(RelationalQueryBuilder, _a140, "PgRelationalQueryBuilder");
-    PgRelationalQuery = class extends (_b105 = QueryPromise, _a141 = entityKind, _b105) {
+    __publicField(RelationalQueryBuilder, _a144, "PgRelationalQueryBuilder");
+    PgRelationalQuery = class extends (_b109 = QueryPromise, _a145 = entityKind, _b109) {
       constructor(fullSchema, schema5, tableNamesMap, table6, tableConfig, dialect6, session, config, mode) {
         super();
         __publicField(this, "authToken");
@@ -28795,18 +28877,18 @@ var init_query = __esm({
         });
       }
     };
-    __publicField(PgRelationalQuery, _a141, "PgRelationalQuery");
+    __publicField(PgRelationalQuery, _a145, "PgRelationalQuery");
   }
 });
 
 // ../drizzle-orm/dist/pg-core/query-builders/raw.js
-var _a142, _b106, PgRaw;
+var _a146, _b110, PgRaw;
 var init_raw = __esm({
   "../drizzle-orm/dist/pg-core/query-builders/raw.js"() {
     "use strict";
     init_entity();
     init_query_promise();
-    PgRaw = class extends (_b106 = QueryPromise, _a142 = entityKind, _b106) {
+    PgRaw = class extends (_b110 = QueryPromise, _a146 = entityKind, _b110) {
       constructor(execute, sql2, query, mapBatchResult) {
         super();
         this.execute = execute;
@@ -28832,12 +28914,12 @@ var init_raw = __esm({
         return false;
       }
     };
-    __publicField(PgRaw, _a142, "PgRaw");
+    __publicField(PgRaw, _a146, "PgRaw");
   }
 });
 
 // ../drizzle-orm/dist/pg-core/db.js
-var _a143, PgDatabase;
+var _a147, PgDatabase;
 var init_db = __esm({
   "../drizzle-orm/dist/pg-core/db.js"() {
     "use strict";
@@ -28850,7 +28932,7 @@ var init_db = __esm({
     init_query();
     init_raw();
     init_refresh_materialized_view();
-    _a143 = entityKind;
+    _a147 = entityKind;
     PgDatabase = class {
       constructor(dialect6, session, schema5) {
         __publicField(this, "query");
@@ -29124,19 +29206,19 @@ var init_db = __esm({
         return this.session.transaction(transaction, config);
       }
     };
-    __publicField(PgDatabase, _a143, "PgDatabase");
+    __publicField(PgDatabase, _a147, "PgDatabase");
   }
 });
 
 // ../drizzle-orm/dist/pg-core/indexes.js
-var _a144, IndexBuilderOn, _a145, IndexBuilder, _a146, Index2;
+var _a148, IndexBuilderOn, _a149, IndexBuilder, _a150, Index2;
 var init_indexes = __esm({
   "../drizzle-orm/dist/pg-core/indexes.js"() {
     "use strict";
     init_sql();
     init_entity();
     init_columns();
-    _a144 = entityKind;
+    _a148 = entityKind;
     IndexBuilderOn = class {
       constructor(unique, name2) {
         this.unique = unique;
@@ -29203,8 +29285,8 @@ var init_indexes = __esm({
         );
       }
     };
-    __publicField(IndexBuilderOn, _a144, "PgIndexBuilderOn");
-    _a145 = entityKind;
+    __publicField(IndexBuilderOn, _a148, "PgIndexBuilderOn");
+    _a149 = entityKind;
     IndexBuilder = class {
       constructor(columns, unique, only, name2, method = "btree") {
         /** @internal */
@@ -29234,25 +29316,25 @@ var init_indexes = __esm({
         return new Index2(this.config, table6);
       }
     };
-    __publicField(IndexBuilder, _a145, "PgIndexBuilder");
-    _a146 = entityKind;
+    __publicField(IndexBuilder, _a149, "PgIndexBuilder");
+    _a150 = entityKind;
     Index2 = class {
       constructor(config, table6) {
         __publicField(this, "config");
         this.config = { ...config, table: table6 };
       }
     };
-    __publicField(Index2, _a146, "PgIndex");
+    __publicField(Index2, _a150, "PgIndex");
   }
 });
 
 // ../drizzle-orm/dist/pg-core/policies.js
-var _a147, PgPolicy;
+var _a151, PgPolicy;
 var init_policies = __esm({
   "../drizzle-orm/dist/pg-core/policies.js"() {
     "use strict";
     init_entity();
-    _a147 = entityKind;
+    _a151 = entityKind;
     PgPolicy = class {
       constructor(name2, config) {
         __publicField(this, "as");
@@ -29276,17 +29358,17 @@ var init_policies = __esm({
         return this;
       }
     };
-    __publicField(PgPolicy, _a147, "PgPolicy");
+    __publicField(PgPolicy, _a151, "PgPolicy");
   }
 });
 
 // ../drizzle-orm/dist/pg-core/roles.js
-var _a148, PgRole;
+var _a152, PgRole;
 var init_roles = __esm({
   "../drizzle-orm/dist/pg-core/roles.js"() {
     "use strict";
     init_entity();
-    _a148 = entityKind;
+    _a152 = entityKind;
     PgRole = class {
       constructor(name2, config) {
         /** @internal */
@@ -29309,7 +29391,7 @@ var init_roles = __esm({
         return this;
       }
     };
-    __publicField(PgRole, _a148, "PgRole");
+    __publicField(PgRole, _a152, "PgRole");
   }
 });
 
@@ -29320,12 +29402,12 @@ function pgSequenceWithSchema(name2, options, schema5) {
 function isPgSequence(obj) {
   return is(obj, PgSequence);
 }
-var _a149, PgSequence;
+var _a153, PgSequence;
 var init_sequence = __esm({
   "../drizzle-orm/dist/pg-core/sequence.js"() {
     "use strict";
     init_entity();
-    _a149 = entityKind;
+    _a153 = entityKind;
     PgSequence = class {
       constructor(seqName, seqOptions, schema5) {
         this.seqName = seqName;
@@ -29333,7 +29415,7 @@ var init_sequence = __esm({
         this.schema = schema5;
       }
     };
-    __publicField(PgSequence, _a149, "PgSequence");
+    __publicField(PgSequence, _a153, "PgSequence");
   }
 });
 
@@ -29365,7 +29447,7 @@ function isPgView(obj) {
 function isPgMaterializedView(obj) {
   return is(obj, PgMaterializedView);
 }
-var _a150, DefaultViewBuilderCore, _a151, _b107, ViewBuilder, _a152, _b108, ManualViewBuilder, _a153, MaterializedViewBuilderCore, _a154, _b109, MaterializedViewBuilder, _a155, _b110, ManualMaterializedViewBuilder, _a156, _b111, _c5, PgView2, PgMaterializedViewConfig, _a157, _b112, _c6, PgMaterializedView;
+var _a154, DefaultViewBuilderCore, _a155, _b111, ViewBuilder, _a156, _b112, ManualViewBuilder, _a157, MaterializedViewBuilderCore, _a158, _b113, MaterializedViewBuilder, _a159, _b114, ManualMaterializedViewBuilder, _a160, _b115, _c5, PgView2, PgMaterializedViewConfig, _a161, _b116, _c6, PgMaterializedView;
 var init_view = __esm({
   "../drizzle-orm/dist/pg-core/view.js"() {
     "use strict";
@@ -29376,7 +29458,7 @@ var init_view = __esm({
     init_table2();
     init_view_base();
     init_view_common2();
-    _a150 = entityKind;
+    _a154 = entityKind;
     DefaultViewBuilderCore = class {
       constructor(name2, schema5) {
         __publicField(this, "config", {});
@@ -29388,8 +29470,8 @@ var init_view = __esm({
         return this;
       }
     };
-    __publicField(DefaultViewBuilderCore, _a150, "PgDefaultViewBuilderCore");
-    ViewBuilder = class extends (_b107 = DefaultViewBuilderCore, _a151 = entityKind, _b107) {
+    __publicField(DefaultViewBuilderCore, _a154, "PgDefaultViewBuilderCore");
+    ViewBuilder = class extends (_b111 = DefaultViewBuilderCore, _a155 = entityKind, _b111) {
       as(qb) {
         if (typeof qb === "function") {
           qb = qb(new QueryBuilder());
@@ -29415,8 +29497,8 @@ var init_view = __esm({
         );
       }
     };
-    __publicField(ViewBuilder, _a151, "PgViewBuilder");
-    ManualViewBuilder = class extends (_b108 = DefaultViewBuilderCore, _a152 = entityKind, _b108) {
+    __publicField(ViewBuilder, _a155, "PgViewBuilder");
+    ManualViewBuilder = class extends (_b112 = DefaultViewBuilderCore, _a156 = entityKind, _b112) {
       constructor(name2, columns, schema5) {
         super(name2, schema5);
         __publicField(this, "columns");
@@ -29461,8 +29543,8 @@ var init_view = __esm({
         );
       }
     };
-    __publicField(ManualViewBuilder, _a152, "PgManualViewBuilder");
-    _a153 = entityKind;
+    __publicField(ManualViewBuilder, _a156, "PgManualViewBuilder");
+    _a157 = entityKind;
     MaterializedViewBuilderCore = class {
       constructor(name2, schema5) {
         __publicField(this, "config", {});
@@ -29486,8 +29568,8 @@ var init_view = __esm({
         return this;
       }
     };
-    __publicField(MaterializedViewBuilderCore, _a153, "PgMaterializedViewBuilderCore");
-    MaterializedViewBuilder = class extends (_b109 = MaterializedViewBuilderCore, _a154 = entityKind, _b109) {
+    __publicField(MaterializedViewBuilderCore, _a157, "PgMaterializedViewBuilderCore");
+    MaterializedViewBuilder = class extends (_b113 = MaterializedViewBuilderCore, _a158 = entityKind, _b113) {
       as(qb) {
         if (typeof qb === "function") {
           qb = qb(new QueryBuilder());
@@ -29518,8 +29600,8 @@ var init_view = __esm({
         );
       }
     };
-    __publicField(MaterializedViewBuilder, _a154, "PgMaterializedViewBuilder");
-    ManualMaterializedViewBuilder = class extends (_b110 = MaterializedViewBuilderCore, _a155 = entityKind, _b110) {
+    __publicField(MaterializedViewBuilder, _a158, "PgMaterializedViewBuilder");
+    ManualMaterializedViewBuilder = class extends (_b114 = MaterializedViewBuilderCore, _a159 = entityKind, _b114) {
       constructor(name2, columns, schema5) {
         super(name2, schema5);
         __publicField(this, "columns");
@@ -29574,11 +29656,11 @@ var init_view = __esm({
         );
       }
     };
-    __publicField(ManualMaterializedViewBuilder, _a155, "PgManualMaterializedViewBuilder");
-    PgView2 = class extends (_c5 = PgViewBase, _b111 = entityKind, _a156 = PgViewConfig, _c5) {
+    __publicField(ManualMaterializedViewBuilder, _a159, "PgManualMaterializedViewBuilder");
+    PgView2 = class extends (_c5 = PgViewBase, _b115 = entityKind, _a160 = PgViewConfig, _c5) {
       constructor({ pgConfig, config }) {
         super(config);
-        __publicField(this, _a156);
+        __publicField(this, _a160);
         if (pgConfig) {
           this[PgViewConfig] = {
             with: pgConfig.with
@@ -29586,12 +29668,12 @@ var init_view = __esm({
         }
       }
     };
-    __publicField(PgView2, _b111, "PgView");
+    __publicField(PgView2, _b115, "PgView");
     PgMaterializedViewConfig = Symbol.for("drizzle:PgMaterializedViewConfig");
-    PgMaterializedView = class extends (_c6 = PgViewBase, _b112 = entityKind, _a157 = PgMaterializedViewConfig, _c6) {
+    PgMaterializedView = class extends (_c6 = PgViewBase, _b116 = entityKind, _a161 = PgMaterializedViewConfig, _c6) {
       constructor({ pgConfig, config }) {
         super(config);
-        __publicField(this, _a157);
+        __publicField(this, _a161);
         this[PgMaterializedViewConfig] = {
           with: pgConfig?.with,
           using: pgConfig?.using,
@@ -29600,12 +29682,12 @@ var init_view = __esm({
         };
       }
     };
-    __publicField(PgMaterializedView, _b112, "PgMaterializedView");
+    __publicField(PgMaterializedView, _b116, "PgMaterializedView");
   }
 });
 
 // ../drizzle-orm/dist/pg-core/schema.js
-var _a158, PgSchema5;
+var _a162, PgSchema5;
 var init_schema = __esm({
   "../drizzle-orm/dist/pg-core/schema.js"() {
     "use strict";
@@ -29615,7 +29697,7 @@ var init_schema = __esm({
     init_sequence();
     init_table2();
     init_view();
-    _a158 = entityKind;
+    _a162 = entityKind;
     PgSchema5 = class {
       constructor(schemaName) {
         __publicField(this, "table", (name2, columns, extraConfig) => {
@@ -29642,12 +29724,12 @@ var init_schema = __esm({
         return true;
       }
     };
-    __publicField(PgSchema5, _a158, "PgSchema");
+    __publicField(PgSchema5, _a162, "PgSchema");
   }
 });
 
 // ../drizzle-orm/dist/pg-core/session.js
-var _a159, PgPreparedQuery, _a160, PgSession, _a161, _b113, PgTransaction;
+var _a163, PgPreparedQuery, _a164, PgSession, _a165, _b117, PgTransaction;
 var init_session = __esm({
   "../drizzle-orm/dist/pg-core/session.js"() {
     "use strict";
@@ -29656,7 +29738,7 @@ var init_session = __esm({
     init_sql2();
     init_tracing();
     init_db();
-    _a159 = entityKind;
+    _a163 = entityKind;
     PgPreparedQuery = class {
       constructor(query) {
         __publicField(this, "authToken");
@@ -29676,8 +29758,8 @@ var init_session = __esm({
         return this;
       }
     };
-    __publicField(PgPreparedQuery, _a159, "PgPreparedQuery");
-    _a160 = entityKind;
+    __publicField(PgPreparedQuery, _a163, "PgPreparedQuery");
+    _a164 = entityKind;
     PgSession = class {
       constructor(dialect6) {
         this.dialect = dialect6;
@@ -29712,8 +29794,8 @@ var init_session = __esm({
         );
       }
     };
-    __publicField(PgSession, _a160, "PgSession");
-    PgTransaction = class extends (_b113 = PgDatabase, _a161 = entityKind, _b113) {
+    __publicField(PgSession, _a164, "PgSession");
+    PgTransaction = class extends (_b117 = PgDatabase, _a165 = entityKind, _b117) {
       constructor(dialect6, session, schema5, nestedIndex = 0) {
         super(dialect6, session, schema5);
         this.schema = schema5;
@@ -29740,7 +29822,7 @@ var init_session = __esm({
         return this.session.execute(sql`set transaction ${this.getTransactionConfigSQL(config)}`);
       }
     };
-    __publicField(PgTransaction, _a161, "PgTransaction");
+    __publicField(PgTransaction, _a165, "PgTransaction");
   }
 });
 
@@ -31553,12 +31635,12 @@ var init_alias3 = __esm({
 });
 
 // ../drizzle-orm/dist/sqlite-core/checks.js
-var _a162, CheckBuilder2, _a163, Check2;
+var _a166, CheckBuilder2, _a167, Check2;
 var init_checks2 = __esm({
   "../drizzle-orm/dist/sqlite-core/checks.js"() {
     "use strict";
     init_entity();
-    _a162 = entityKind;
+    _a166 = entityKind;
     CheckBuilder2 = class {
       constructor(name2, value) {
         __publicField(this, "brand");
@@ -31569,8 +31651,8 @@ var init_checks2 = __esm({
         return new Check2(table6, this);
       }
     };
-    __publicField(CheckBuilder2, _a162, "SQLiteCheckBuilder");
-    _a163 = entityKind;
+    __publicField(CheckBuilder2, _a166, "SQLiteCheckBuilder");
+    _a167 = entityKind;
     Check2 = class {
       constructor(table6, builder) {
         __publicField(this, "name");
@@ -31580,18 +31662,18 @@ var init_checks2 = __esm({
         this.value = builder.value;
       }
     };
-    __publicField(Check2, _a163, "SQLiteCheck");
+    __publicField(Check2, _a167, "SQLiteCheck");
   }
 });
 
 // ../drizzle-orm/dist/sqlite-core/foreign-keys.js
-var _a164, ForeignKeyBuilder2, _a165, ForeignKey2;
+var _a168, ForeignKeyBuilder2, _a169, ForeignKey2;
 var init_foreign_keys2 = __esm({
   "../drizzle-orm/dist/sqlite-core/foreign-keys.js"() {
     "use strict";
     init_entity();
     init_table_utils();
-    _a164 = entityKind;
+    _a168 = entityKind;
     ForeignKeyBuilder2 = class {
       constructor(config, actions) {
         /** @internal */
@@ -31622,8 +31704,8 @@ var init_foreign_keys2 = __esm({
         return new ForeignKey2(table6, this);
       }
     };
-    __publicField(ForeignKeyBuilder2, _a164, "SQLiteForeignKeyBuilder");
-    _a165 = entityKind;
+    __publicField(ForeignKeyBuilder2, _a168, "SQLiteForeignKeyBuilder");
+    _a169 = entityKind;
     ForeignKey2 = class {
       constructor(table6, builder) {
         __publicField(this, "reference");
@@ -31647,7 +31729,7 @@ var init_foreign_keys2 = __esm({
         return name2 ?? `${chunks.join("_")}_fk`;
       }
     };
-    __publicField(ForeignKey2, _a165, "SQLiteForeignKey");
+    __publicField(ForeignKey2, _a169, "SQLiteForeignKey");
   }
 });
 
@@ -31655,13 +31737,13 @@ var init_foreign_keys2 = __esm({
 function uniqueKeyName2(table6, columns) {
   return `${table6[TableName]}_${columns.join("_")}_unique`;
 }
-var _a166, UniqueConstraintBuilder2, _a167, UniqueOnConstraintBuilder2, _a168, UniqueConstraint2;
+var _a170, UniqueConstraintBuilder2, _a171, UniqueOnConstraintBuilder2, _a172, UniqueConstraint2;
 var init_unique_constraint2 = __esm({
   "../drizzle-orm/dist/sqlite-core/unique-constraint.js"() {
     "use strict";
     init_entity();
     init_table_utils();
-    _a166 = entityKind;
+    _a170 = entityKind;
     UniqueConstraintBuilder2 = class {
       constructor(columns, name2) {
         /** @internal */
@@ -31674,8 +31756,8 @@ var init_unique_constraint2 = __esm({
         return new UniqueConstraint2(table6, this.columns, this.name);
       }
     };
-    __publicField(UniqueConstraintBuilder2, _a166, "SQLiteUniqueConstraintBuilder");
-    _a167 = entityKind;
+    __publicField(UniqueConstraintBuilder2, _a170, "SQLiteUniqueConstraintBuilder");
+    _a171 = entityKind;
     UniqueOnConstraintBuilder2 = class {
       constructor(name2) {
         /** @internal */
@@ -31686,8 +31768,8 @@ var init_unique_constraint2 = __esm({
         return new UniqueConstraintBuilder2(columns, this.name);
       }
     };
-    __publicField(UniqueOnConstraintBuilder2, _a167, "SQLiteUniqueOnConstraintBuilder");
-    _a168 = entityKind;
+    __publicField(UniqueOnConstraintBuilder2, _a171, "SQLiteUniqueOnConstraintBuilder");
+    _a172 = entityKind;
     UniqueConstraint2 = class {
       constructor(table6, columns, name2) {
         __publicField(this, "columns");
@@ -31700,12 +31782,12 @@ var init_unique_constraint2 = __esm({
         return this.name;
       }
     };
-    __publicField(UniqueConstraint2, _a168, "SQLiteUniqueConstraint");
+    __publicField(UniqueConstraint2, _a172, "SQLiteUniqueConstraint");
   }
 });
 
 // ../drizzle-orm/dist/sqlite-core/columns/common.js
-var _a169, _b114, SQLiteColumnBuilder, _a170, _b115, SQLiteColumn;
+var _a173, _b118, SQLiteColumnBuilder, _a174, _b119, SQLiteColumn;
 var init_common3 = __esm({
   "../drizzle-orm/dist/sqlite-core/columns/common.js"() {
     "use strict";
@@ -31714,7 +31796,7 @@ var init_common3 = __esm({
     init_entity();
     init_foreign_keys2();
     init_unique_constraint2();
-    SQLiteColumnBuilder = class extends (_b114 = ColumnBuilder, _a169 = entityKind, _b114) {
+    SQLiteColumnBuilder = class extends (_b118 = ColumnBuilder, _a173 = entityKind, _b118) {
       constructor() {
         super(...arguments);
         __publicField(this, "foreignKeyConfigs", []);
@@ -31755,8 +31837,8 @@ var init_common3 = __esm({
         });
       }
     };
-    __publicField(SQLiteColumnBuilder, _a169, "SQLiteColumnBuilder");
-    SQLiteColumn = class extends (_b115 = Column2, _a170 = entityKind, _b115) {
+    __publicField(SQLiteColumnBuilder, _a173, "SQLiteColumnBuilder");
+    SQLiteColumn = class extends (_b119 = Column2, _a174 = entityKind, _b119) {
       constructor(table6, config) {
         if (!config.uniqueName) {
           config.uniqueName = uniqueKeyName2(table6, [config.name]);
@@ -31765,7 +31847,7 @@ var init_common3 = __esm({
         this.table = table6;
       }
     };
-    __publicField(SQLiteColumn, _a170, "SQLiteColumn");
+    __publicField(SQLiteColumn, _a174, "SQLiteColumn");
   }
 });
 
@@ -31780,14 +31862,14 @@ function blob(a, b) {
   }
   return new SQLiteBlobBufferBuilder(name2);
 }
-var _a171, _b116, SQLiteBigIntBuilder, _a172, _b117, SQLiteBigInt, _a173, _b118, SQLiteBlobJsonBuilder, _a174, _b119, SQLiteBlobJson, _a175, _b120, SQLiteBlobBufferBuilder, _a176, _b121, SQLiteBlobBuffer;
+var _a175, _b120, SQLiteBigIntBuilder, _a176, _b121, SQLiteBigInt, _a177, _b122, SQLiteBlobJsonBuilder, _a178, _b123, SQLiteBlobJson, _a179, _b124, SQLiteBlobBufferBuilder, _a180, _b125, SQLiteBlobBuffer;
 var init_blob = __esm({
   "../drizzle-orm/dist/sqlite-core/columns/blob.js"() {
     "use strict";
     init_entity();
     init_utils2();
     init_common3();
-    SQLiteBigIntBuilder = class extends (_b116 = SQLiteColumnBuilder, _a171 = entityKind, _b116) {
+    SQLiteBigIntBuilder = class extends (_b120 = SQLiteColumnBuilder, _a175 = entityKind, _b120) {
       constructor(name2) {
         super(name2, "bigint", "SQLiteBigInt");
       }
@@ -31796,8 +31878,8 @@ var init_blob = __esm({
         return new SQLiteBigInt(table6, this.config);
       }
     };
-    __publicField(SQLiteBigIntBuilder, _a171, "SQLiteBigIntBuilder");
-    SQLiteBigInt = class extends (_b117 = SQLiteColumn, _a172 = entityKind, _b117) {
+    __publicField(SQLiteBigIntBuilder, _a175, "SQLiteBigIntBuilder");
+    SQLiteBigInt = class extends (_b121 = SQLiteColumn, _a176 = entityKind, _b121) {
       getSQLType() {
         return "blob";
       }
@@ -31815,8 +31897,8 @@ var init_blob = __esm({
         return Buffer.from(value.toString());
       }
     };
-    __publicField(SQLiteBigInt, _a172, "SQLiteBigInt");
-    SQLiteBlobJsonBuilder = class extends (_b118 = SQLiteColumnBuilder, _a173 = entityKind, _b118) {
+    __publicField(SQLiteBigInt, _a176, "SQLiteBigInt");
+    SQLiteBlobJsonBuilder = class extends (_b122 = SQLiteColumnBuilder, _a177 = entityKind, _b122) {
       constructor(name2) {
         super(name2, "json", "SQLiteBlobJson");
       }
@@ -31828,8 +31910,8 @@ var init_blob = __esm({
         );
       }
     };
-    __publicField(SQLiteBlobJsonBuilder, _a173, "SQLiteBlobJsonBuilder");
-    SQLiteBlobJson = class extends (_b119 = SQLiteColumn, _a174 = entityKind, _b119) {
+    __publicField(SQLiteBlobJsonBuilder, _a177, "SQLiteBlobJsonBuilder");
+    SQLiteBlobJson = class extends (_b123 = SQLiteColumn, _a178 = entityKind, _b123) {
       getSQLType() {
         return "blob";
       }
@@ -31847,8 +31929,8 @@ var init_blob = __esm({
         return Buffer.from(JSON.stringify(value));
       }
     };
-    __publicField(SQLiteBlobJson, _a174, "SQLiteBlobJson");
-    SQLiteBlobBufferBuilder = class extends (_b120 = SQLiteColumnBuilder, _a175 = entityKind, _b120) {
+    __publicField(SQLiteBlobJson, _a178, "SQLiteBlobJson");
+    SQLiteBlobBufferBuilder = class extends (_b124 = SQLiteColumnBuilder, _a179 = entityKind, _b124) {
       constructor(name2) {
         super(name2, "buffer", "SQLiteBlobBuffer");
       }
@@ -31857,13 +31939,19 @@ var init_blob = __esm({
         return new SQLiteBlobBuffer(table6, this.config);
       }
     };
-    __publicField(SQLiteBlobBufferBuilder, _a175, "SQLiteBlobBufferBuilder");
-    SQLiteBlobBuffer = class extends (_b121 = SQLiteColumn, _a176 = entityKind, _b121) {
+    __publicField(SQLiteBlobBufferBuilder, _a179, "SQLiteBlobBufferBuilder");
+    SQLiteBlobBuffer = class extends (_b125 = SQLiteColumn, _a180 = entityKind, _b125) {
+      mapFromDriverValue(value) {
+        if (Buffer.isBuffer(value)) {
+          return value;
+        }
+        return Buffer.from(value);
+      }
       getSQLType() {
         return "blob";
       }
     };
-    __publicField(SQLiteBlobBuffer, _a176, "SQLiteBlobBuffer");
+    __publicField(SQLiteBlobBuffer, _a180, "SQLiteBlobBuffer");
   }
 });
 
@@ -31878,14 +31966,14 @@ function customType2(customTypeParams) {
     );
   };
 }
-var _a177, _b122, SQLiteCustomColumnBuilder, _a178, _b123, SQLiteCustomColumn;
+var _a181, _b126, SQLiteCustomColumnBuilder, _a182, _b127, SQLiteCustomColumn;
 var init_custom2 = __esm({
   "../drizzle-orm/dist/sqlite-core/columns/custom.js"() {
     "use strict";
     init_entity();
     init_utils2();
     init_common3();
-    SQLiteCustomColumnBuilder = class extends (_b122 = SQLiteColumnBuilder, _a177 = entityKind, _b122) {
+    SQLiteCustomColumnBuilder = class extends (_b126 = SQLiteColumnBuilder, _a181 = entityKind, _b126) {
       constructor(name2, fieldConfig, customTypeParams) {
         super(name2, "custom", "SQLiteCustomColumn");
         this.config.fieldConfig = fieldConfig;
@@ -31899,8 +31987,8 @@ var init_custom2 = __esm({
         );
       }
     };
-    __publicField(SQLiteCustomColumnBuilder, _a177, "SQLiteCustomColumnBuilder");
-    SQLiteCustomColumn = class extends (_b123 = SQLiteColumn, _a178 = entityKind, _b123) {
+    __publicField(SQLiteCustomColumnBuilder, _a181, "SQLiteCustomColumnBuilder");
+    SQLiteCustomColumn = class extends (_b127 = SQLiteColumn, _a182 = entityKind, _b127) {
       constructor(table6, config) {
         super(table6, config);
         __publicField(this, "sqlName");
@@ -31920,7 +32008,7 @@ var init_custom2 = __esm({
         return typeof this.mapTo === "function" ? this.mapTo(value) : value;
       }
     };
-    __publicField(SQLiteCustomColumn, _a178, "SQLiteCustomColumn");
+    __publicField(SQLiteCustomColumn, _a182, "SQLiteCustomColumn");
   }
 });
 
@@ -31935,7 +32023,7 @@ function integer2(a, b) {
   }
   return new SQLiteIntegerBuilder(name2);
 }
-var _a179, _b124, SQLiteBaseIntegerBuilder, _a180, _b125, SQLiteBaseInteger, _a181, _b126, SQLiteIntegerBuilder, _a182, _b127, SQLiteInteger, _a183, _b128, SQLiteTimestampBuilder, _a184, _b129, SQLiteTimestamp, _a185, _b130, SQLiteBooleanBuilder, _a186, _b131, SQLiteBoolean;
+var _a183, _b128, SQLiteBaseIntegerBuilder, _a184, _b129, SQLiteBaseInteger, _a185, _b130, SQLiteIntegerBuilder, _a186, _b131, SQLiteInteger, _a187, _b132, SQLiteTimestampBuilder, _a188, _b133, SQLiteTimestamp, _a189, _b134, SQLiteBooleanBuilder, _a190, _b135, SQLiteBoolean;
 var init_integer2 = __esm({
   "../drizzle-orm/dist/sqlite-core/columns/integer.js"() {
     "use strict";
@@ -31943,7 +32031,7 @@ var init_integer2 = __esm({
     init_sql();
     init_utils2();
     init_common3();
-    SQLiteBaseIntegerBuilder = class extends (_b124 = SQLiteColumnBuilder, _a179 = entityKind, _b124) {
+    SQLiteBaseIntegerBuilder = class extends (_b128 = SQLiteColumnBuilder, _a183 = entityKind, _b128) {
       constructor(name2, dataType, columnType) {
         super(name2, dataType, columnType);
         this.config.autoIncrement = false;
@@ -31956,8 +32044,8 @@ var init_integer2 = __esm({
         return super.primaryKey();
       }
     };
-    __publicField(SQLiteBaseIntegerBuilder, _a179, "SQLiteBaseIntegerBuilder");
-    SQLiteBaseInteger = class extends (_b125 = SQLiteColumn, _a180 = entityKind, _b125) {
+    __publicField(SQLiteBaseIntegerBuilder, _a183, "SQLiteBaseIntegerBuilder");
+    SQLiteBaseInteger = class extends (_b129 = SQLiteColumn, _a184 = entityKind, _b129) {
       constructor() {
         super(...arguments);
         __publicField(this, "autoIncrement", this.config.autoIncrement);
@@ -31966,8 +32054,8 @@ var init_integer2 = __esm({
         return "integer";
       }
     };
-    __publicField(SQLiteBaseInteger, _a180, "SQLiteBaseInteger");
-    SQLiteIntegerBuilder = class extends (_b126 = SQLiteBaseIntegerBuilder, _a181 = entityKind, _b126) {
+    __publicField(SQLiteBaseInteger, _a184, "SQLiteBaseInteger");
+    SQLiteIntegerBuilder = class extends (_b130 = SQLiteBaseIntegerBuilder, _a185 = entityKind, _b130) {
       constructor(name2) {
         super(name2, "number", "SQLiteInteger");
       }
@@ -31978,11 +32066,11 @@ var init_integer2 = __esm({
         );
       }
     };
-    __publicField(SQLiteIntegerBuilder, _a181, "SQLiteIntegerBuilder");
-    SQLiteInteger = class extends (_b127 = SQLiteBaseInteger, _a182 = entityKind, _b127) {
+    __publicField(SQLiteIntegerBuilder, _a185, "SQLiteIntegerBuilder");
+    SQLiteInteger = class extends (_b131 = SQLiteBaseInteger, _a186 = entityKind, _b131) {
     };
-    __publicField(SQLiteInteger, _a182, "SQLiteInteger");
-    SQLiteTimestampBuilder = class extends (_b128 = SQLiteBaseIntegerBuilder, _a183 = entityKind, _b128) {
+    __publicField(SQLiteInteger, _a186, "SQLiteInteger");
+    SQLiteTimestampBuilder = class extends (_b132 = SQLiteBaseIntegerBuilder, _a187 = entityKind, _b132) {
       constructor(name2, mode) {
         super(name2, "date", "SQLiteTimestamp");
         this.config.mode = mode;
@@ -32002,8 +32090,8 @@ var init_integer2 = __esm({
         );
       }
     };
-    __publicField(SQLiteTimestampBuilder, _a183, "SQLiteTimestampBuilder");
-    SQLiteTimestamp = class extends (_b129 = SQLiteBaseInteger, _a184 = entityKind, _b129) {
+    __publicField(SQLiteTimestampBuilder, _a187, "SQLiteTimestampBuilder");
+    SQLiteTimestamp = class extends (_b133 = SQLiteBaseInteger, _a188 = entityKind, _b133) {
       constructor() {
         super(...arguments);
         __publicField(this, "mode", this.config.mode);
@@ -32022,8 +32110,8 @@ var init_integer2 = __esm({
         return unix;
       }
     };
-    __publicField(SQLiteTimestamp, _a184, "SQLiteTimestamp");
-    SQLiteBooleanBuilder = class extends (_b130 = SQLiteBaseIntegerBuilder, _a185 = entityKind, _b130) {
+    __publicField(SQLiteTimestamp, _a188, "SQLiteTimestamp");
+    SQLiteBooleanBuilder = class extends (_b134 = SQLiteBaseIntegerBuilder, _a189 = entityKind, _b134) {
       constructor(name2, mode) {
         super(name2, "boolean", "SQLiteBoolean");
         this.config.mode = mode;
@@ -32035,8 +32123,8 @@ var init_integer2 = __esm({
         );
       }
     };
-    __publicField(SQLiteBooleanBuilder, _a185, "SQLiteBooleanBuilder");
-    SQLiteBoolean = class extends (_b131 = SQLiteBaseInteger, _a186 = entityKind, _b131) {
+    __publicField(SQLiteBooleanBuilder, _a189, "SQLiteBooleanBuilder");
+    SQLiteBoolean = class extends (_b135 = SQLiteBaseInteger, _a190 = entityKind, _b135) {
       constructor() {
         super(...arguments);
         __publicField(this, "mode", this.config.mode);
@@ -32048,21 +32136,24 @@ var init_integer2 = __esm({
         return value ? 1 : 0;
       }
     };
-    __publicField(SQLiteBoolean, _a186, "SQLiteBoolean");
+    __publicField(SQLiteBoolean, _a190, "SQLiteBoolean");
   }
 });
 
 // ../drizzle-orm/dist/sqlite-core/columns/numeric.js
-function numeric2(name2) {
-  return new SQLiteNumericBuilder(name2 ?? "");
+function numeric2(a, b) {
+  const { name: name2, config } = getColumnNameAndConfig(a, b);
+  const mode = config?.mode;
+  return mode === "number" ? new SQLiteNumericNumberBuilder(name2) : mode === "bigint" ? new SQLiteNumericBigIntBuilder(name2) : new SQLiteNumericBuilder(name2);
 }
-var _a187, _b132, SQLiteNumericBuilder, _a188, _b133, SQLiteNumeric;
+var _a191, _b136, SQLiteNumericBuilder, _a192, _b137, SQLiteNumeric, _a193, _b138, SQLiteNumericNumberBuilder, _a194, _b139, SQLiteNumericNumber, _a195, _b140, SQLiteNumericBigIntBuilder, _a196, _b141, SQLiteNumericBigInt;
 var init_numeric2 = __esm({
   "../drizzle-orm/dist/sqlite-core/columns/numeric.js"() {
     "use strict";
     init_entity();
+    init_utils2();
     init_common3();
-    SQLiteNumericBuilder = class extends (_b132 = SQLiteColumnBuilder, _a187 = entityKind, _b132) {
+    SQLiteNumericBuilder = class extends (_b136 = SQLiteColumnBuilder, _a191 = entityKind, _b136) {
       constructor(name2) {
         super(name2, "string", "SQLiteNumeric");
       }
@@ -32074,13 +32165,70 @@ var init_numeric2 = __esm({
         );
       }
     };
-    __publicField(SQLiteNumericBuilder, _a187, "SQLiteNumericBuilder");
-    SQLiteNumeric = class extends (_b133 = SQLiteColumn, _a188 = entityKind, _b133) {
+    __publicField(SQLiteNumericBuilder, _a191, "SQLiteNumericBuilder");
+    SQLiteNumeric = class extends (_b137 = SQLiteColumn, _a192 = entityKind, _b137) {
+      mapFromDriverValue(value) {
+        if (typeof value === "string")
+          return value;
+        return String(value);
+      }
+      getSQLType() {
+        return "numeric";
+      }
+    };
+    __publicField(SQLiteNumeric, _a192, "SQLiteNumeric");
+    SQLiteNumericNumberBuilder = class extends (_b138 = SQLiteColumnBuilder, _a193 = entityKind, _b138) {
+      constructor(name2) {
+        super(name2, "number", "SQLiteNumericNumber");
+      }
+      /** @internal */
+      build(table6) {
+        return new SQLiteNumericNumber(
+          table6,
+          this.config
+        );
+      }
+    };
+    __publicField(SQLiteNumericNumberBuilder, _a193, "SQLiteNumericNumberBuilder");
+    SQLiteNumericNumber = class extends (_b139 = SQLiteColumn, _a194 = entityKind, _b139) {
+      constructor() {
+        super(...arguments);
+        __publicField(this, "mapToDriverValue", String);
+      }
+      mapFromDriverValue(value) {
+        if (typeof value === "number")
+          return value;
+        return Number(value);
+      }
       getSQLType() {
         return "numeric";
       }
     };
-    __publicField(SQLiteNumeric, _a188, "SQLiteNumeric");
+    __publicField(SQLiteNumericNumber, _a194, "SQLiteNumericNumber");
+    SQLiteNumericBigIntBuilder = class extends (_b140 = SQLiteColumnBuilder, _a195 = entityKind, _b140) {
+      constructor(name2) {
+        super(name2, "bigint", "SQLiteNumericBigInt");
+      }
+      /** @internal */
+      build(table6) {
+        return new SQLiteNumericBigInt(
+          table6,
+          this.config
+        );
+      }
+    };
+    __publicField(SQLiteNumericBigIntBuilder, _a195, "SQLiteNumericBigIntBuilder");
+    SQLiteNumericBigInt = class extends (_b141 = SQLiteColumn, _a196 = entityKind, _b141) {
+      constructor() {
+        super(...arguments);
+        __publicField(this, "mapFromDriverValue", BigInt);
+        __publicField(this, "mapToDriverValue", String);
+      }
+      getSQLType() {
+        return "numeric";
+      }
+    };
+    __publicField(SQLiteNumericBigInt, _a196, "SQLiteNumericBigInt");
   }
 });
 
@@ -32088,13 +32236,13 @@ var init_numeric2 = __esm({
 function real2(name2) {
   return new SQLiteRealBuilder(name2 ?? "");
 }
-var _a189, _b134, SQLiteRealBuilder, _a190, _b135, SQLiteReal;
+var _a197, _b142, SQLiteRealBuilder, _a198, _b143, SQLiteReal;
 var init_real2 = __esm({
   "../drizzle-orm/dist/sqlite-core/columns/real.js"() {
     "use strict";
     init_entity();
     init_common3();
-    SQLiteRealBuilder = class extends (_b134 = SQLiteColumnBuilder, _a189 = entityKind, _b134) {
+    SQLiteRealBuilder = class extends (_b142 = SQLiteColumnBuilder, _a197 = entityKind, _b142) {
       constructor(name2) {
         super(name2, "number", "SQLiteReal");
       }
@@ -32103,13 +32251,13 @@ var init_real2 = __esm({
         return new SQLiteReal(table6, this.config);
       }
     };
-    __publicField(SQLiteRealBuilder, _a189, "SQLiteRealBuilder");
-    SQLiteReal = class extends (_b135 = SQLiteColumn, _a190 = entityKind, _b135) {
+    __publicField(SQLiteRealBuilder, _a197, "SQLiteRealBuilder");
+    SQLiteReal = class extends (_b143 = SQLiteColumn, _a198 = entityKind, _b143) {
       getSQLType() {
         return "real";
       }
     };
-    __publicField(SQLiteReal, _a190, "SQLiteReal");
+    __publicField(SQLiteReal, _a198, "SQLiteReal");
   }
 });
 
@@ -32121,14 +32269,14 @@ function text2(a, b = {}) {
   }
   return new SQLiteTextBuilder(name2, config);
 }
-var _a191, _b136, SQLiteTextBuilder, _a192, _b137, SQLiteText, _a193, _b138, SQLiteTextJsonBuilder, _a194, _b139, SQLiteTextJson;
+var _a199, _b144, SQLiteTextBuilder, _a200, _b145, SQLiteText, _a201, _b146, SQLiteTextJsonBuilder, _a202, _b147, SQLiteTextJson;
 var init_text2 = __esm({
   "../drizzle-orm/dist/sqlite-core/columns/text.js"() {
     "use strict";
     init_entity();
     init_utils2();
     init_common3();
-    SQLiteTextBuilder = class extends (_b136 = SQLiteColumnBuilder, _a191 = entityKind, _b136) {
+    SQLiteTextBuilder = class extends (_b144 = SQLiteColumnBuilder, _a199 = entityKind, _b144) {
       constructor(name2, config) {
         super(name2, "string", "SQLiteText");
         this.config.enumValues = config.enum;
@@ -32142,8 +32290,8 @@ var init_text2 = __esm({
         );
       }
     };
-    __publicField(SQLiteTextBuilder, _a191, "SQLiteTextBuilder");
-    SQLiteText = class extends (_b137 = SQLiteColumn, _a192 = entityKind, _b137) {
+    __publicField(SQLiteTextBuilder, _a199, "SQLiteTextBuilder");
+    SQLiteText = class extends (_b145 = SQLiteColumn, _a200 = entityKind, _b145) {
       constructor(table6, config) {
         super(table6, config);
         __publicField(this, "enumValues", this.config.enumValues);
@@ -32153,8 +32301,8 @@ var init_text2 = __esm({
         return `text${this.config.length ? `(${this.config.length})` : ""}`;
       }
     };
-    __publicField(SQLiteText, _a192, "SQLiteText");
-    SQLiteTextJsonBuilder = class extends (_b138 = SQLiteColumnBuilder, _a193 = entityKind, _b138) {
+    __publicField(SQLiteText, _a200, "SQLiteText");
+    SQLiteTextJsonBuilder = class extends (_b146 = SQLiteColumnBuilder, _a201 = entityKind, _b146) {
       constructor(name2) {
         super(name2, "json", "SQLiteTextJson");
       }
@@ -32166,8 +32314,8 @@ var init_text2 = __esm({
         );
       }
     };
-    __publicField(SQLiteTextJsonBuilder, _a193, "SQLiteTextJsonBuilder");
-    SQLiteTextJson = class extends (_b139 = SQLiteColumn, _a194 = entityKind, _b139) {
+    __publicField(SQLiteTextJsonBuilder, _a201, "SQLiteTextJsonBuilder");
+    SQLiteTextJson = class extends (_b147 = SQLiteColumn, _a202 = entityKind, _b147) {
       getSQLType() {
         return "text";
       }
@@ -32178,7 +32326,7 @@ var init_text2 = __esm({
         return JSON.stringify(value);
       }
     };
-    __publicField(SQLiteTextJson, _a194, "SQLiteTextJson");
+    __publicField(SQLiteTextJson, _a202, "SQLiteTextJson");
   }
 });
 
@@ -32240,7 +32388,7 @@ function sqliteTableBase(name2, columns, extraConfig, schema5, baseName = name2)
   }
   return table6;
 }
-var InlineForeignKeys2, _a195, _b140, _c7, _d3, _e3, SQLiteTable, sqliteTable;
+var InlineForeignKeys2, _a203, _b148, _c7, _d3, _e3, SQLiteTable, sqliteTable;
 var init_table3 = __esm({
   "../drizzle-orm/dist/sqlite-core/table.js"() {
     "use strict";
@@ -32248,15 +32396,15 @@ var init_table3 = __esm({
     init_table();
     init_all2();
     InlineForeignKeys2 = Symbol.for("drizzle:SQLiteInlineForeignKeys");
-    SQLiteTable = class extends (_e3 = Table2, _d3 = entityKind, _c7 = Table2.Symbol.Columns, _b140 = InlineForeignKeys2, _a195 = Table2.Symbol.ExtraConfigBuilder, _e3) {
+    SQLiteTable = class extends (_e3 = Table2, _d3 = entityKind, _c7 = Table2.Symbol.Columns, _b148 = InlineForeignKeys2, _a203 = Table2.Symbol.ExtraConfigBuilder, _e3) {
       constructor() {
         super(...arguments);
         /** @internal */
         __publicField(this, _c7);
         /** @internal */
-        __publicField(this, _b140, []);
+        __publicField(this, _b148, []);
         /** @internal */
-        __publicField(this, _a195);
+        __publicField(this, _a203);
       }
     };
     __publicField(SQLiteTable, _d3, "SQLiteTable");
@@ -32271,7 +32419,7 @@ var init_table3 = __esm({
 });
 
 // ../drizzle-orm/dist/sqlite-core/query-builders/delete.js
-var _a196, _b141, SQLiteDeleteBase;
+var _a204, _b149, SQLiteDeleteBase;
 var init_delete2 = __esm({
   "../drizzle-orm/dist/sqlite-core/query-builders/delete.js"() {
     "use strict";
@@ -32281,7 +32429,7 @@ var init_delete2 = __esm({
     init_table3();
     init_table();
     init_utils2();
-    SQLiteDeleteBase = class extends (_b141 = QueryPromise, _a196 = entityKind, _b141) {
+    SQLiteDeleteBase = class extends (_b149 = QueryPromise, _a204 = entityKind, _b149) {
       constructor(table6, session, dialect6, withList) {
         super();
         /** @internal */
@@ -32387,25 +32535,25 @@ var init_delete2 = __esm({
         return this;
       }
     };
-    __publicField(SQLiteDeleteBase, _a196, "SQLiteDelete");
+    __publicField(SQLiteDeleteBase, _a204, "SQLiteDelete");
   }
 });
 
 // ../drizzle-orm/dist/sqlite-core/view-base.js
-var _a197, _b142, SQLiteViewBase;
+var _a205, _b150, SQLiteViewBase;
 var init_view_base2 = __esm({
   "../drizzle-orm/dist/sqlite-core/view-base.js"() {
     "use strict";
     init_entity();
     init_sql();
-    SQLiteViewBase = class extends (_b142 = View3, _a197 = entityKind, _b142) {
+    SQLiteViewBase = class extends (_b150 = View3, _a205 = entityKind, _b150) {
     };
-    __publicField(SQLiteViewBase, _a197, "SQLiteViewBase");
+    __publicField(SQLiteViewBase, _a205, "SQLiteViewBase");
   }
 });
 
 // ../drizzle-orm/dist/sqlite-core/dialect.js
-var _a198, SQLiteDialect, _a199, _b143, SQLiteSyncDialect, _a200, _b144, SQLiteAsyncDialect;
+var _a206, SQLiteDialect, _a207, _b151, SQLiteSyncDialect, _a208, _b152, SQLiteAsyncDialect;
 var init_dialect2 = __esm({
   "../drizzle-orm/dist/sqlite-core/dialect.js"() {
     "use strict";
@@ -32424,7 +32572,7 @@ var init_dialect2 = __esm({
     init_utils2();
     init_view_common();
     init_view_base2();
-    _a198 = entityKind;
+    _a206 = entityKind;
     SQLiteDialect = class {
       constructor(config) {
         /** @internal */
@@ -32526,10 +32674,20 @@ var init_dialect2 = __esm({
             }
           } else if (is(field, Column2)) {
             const tableName = field.table[Table2.Symbol.Name];
-            if (isSingleTable) {
-              chunk.push(sql.identifier(this.casing.getColumnCasing(field)));
+            if (field.columnType === "SQLiteNumericBigInt") {
+              if (isSingleTable) {
+                chunk.push(sql`cast(${sql.identifier(this.casing.getColumnCasing(field))} as text)`);
+              } else {
+                chunk.push(
+                  sql`cast(${sql.identifier(tableName)}.${sql.identifier(this.casing.getColumnCasing(field))} as text)`
+                );
+              }
             } else {
-              chunk.push(sql`${sql.identifier(tableName)}.${sql.identifier(this.casing.getColumnCasing(field))}`);
+              if (isSingleTable) {
+                chunk.push(sql.identifier(this.casing.getColumnCasing(field)));
+              } else {
+                chunk.push(sql`${sql.identifier(tableName)}.${sql.identifier(this.casing.getColumnCasing(field))}`);
+              }
             }
           }
           if (i < columnsLen - 1) {
@@ -32586,8 +32744,8 @@ var init_dialect2 = __esm({
         return orderByList.length > 0 ? sql` order by ${sql.join(orderByList)}` : void 0;
       }
       buildFromTable(table6) {
-        if (is(table6, Table2) && table6[Table2.Symbol.OriginalName] !== table6[Table2.Symbol.Name]) {
-          return sql`${sql.identifier(table6[Table2.Symbol.OriginalName])} ${sql.identifier(table6[Table2.Symbol.Name])}`;
+        if (is(table6, Table2) && table6[Table2.Symbol.IsAlias]) {
+          return sql`${sql`${sql.identifier(table6[Table2.Symbol.Schema] ?? "")}.`.if(table6[Table2.Symbol.Schema])}${sql.identifier(table6[Table2.Symbol.OriginalName])} ${sql.identifier(table6[Table2.Symbol.Name])}`;
         }
         return table6;
       }
@@ -32966,8 +33124,8 @@ var init_dialect2 = __esm({
         };
       }
     };
-    __publicField(SQLiteDialect, _a198, "SQLiteDialect");
-    SQLiteSyncDialect = class extends (_b143 = SQLiteDialect, _a199 = entityKind, _b143) {
+    __publicField(SQLiteDialect, _a206, "SQLiteDialect");
+    SQLiteSyncDialect = class extends (_b151 = SQLiteDialect, _a207 = entityKind, _b151) {
       migrate(migrations, session, config) {
         const migrationsTable = config === void 0 ? "__drizzle_migrations" : typeof config === "string" ? "__drizzle_migrations" : config.migrationsTable ?? "__drizzle_migrations";
         const migrationTableCreate = sql`
@@ -33001,8 +33159,8 @@ var init_dialect2 = __esm({
         }
       }
     };
-    __publicField(SQLiteSyncDialect, _a199, "SQLiteSyncDialect");
-    SQLiteAsyncDialect = class extends (_b144 = SQLiteDialect, _a200 = entityKind, _b144) {
+    __publicField(SQLiteSyncDialect, _a207, "SQLiteSyncDialect");
+    SQLiteAsyncDialect = class extends (_b152 = SQLiteDialect, _a208 = entityKind, _b152) {
       async migrate(migrations, session, config) {
         const migrationsTable = config === void 0 ? "__drizzle_migrations" : typeof config === "string" ? "__drizzle_migrations" : config.migrationsTable ?? "__drizzle_migrations";
         const migrationTableCreate = sql`
@@ -33031,7 +33189,7 @@ var init_dialect2 = __esm({
         });
       }
     };
-    __publicField(SQLiteAsyncDialect, _a200, "SQLiteAsyncDialect");
+    __publicField(SQLiteAsyncDialect, _a208, "SQLiteAsyncDialect");
   }
 });
 
@@ -33053,7 +33211,7 @@ function createSetOperator2(type, isAll) {
     return leftSelect.addSetOperators(setOperators);
   };
 }
-var _a201, SQLiteSelectBuilder, _a202, _b145, SQLiteSelectQueryBuilderBase, _a203, _b146, SQLiteSelectBase, getSQLiteSetOperators, union3, unionAll2, intersect2, except2;
+var _a209, SQLiteSelectBuilder, _a210, _b153, SQLiteSelectQueryBuilderBase, _a211, _b154, SQLiteSelectBase, getSQLiteSetOperators, union3, unionAll2, intersect2, except2;
 var init_select3 = __esm({
   "../drizzle-orm/dist/sqlite-core/query-builders/select.js"() {
     "use strict";
@@ -33067,7 +33225,7 @@ var init_select3 = __esm({
     init_utils2();
     init_view_common();
     init_view_base2();
-    _a201 = entityKind;
+    _a209 = entityKind;
     SQLiteSelectBuilder = class {
       constructor(config) {
         __publicField(this, "fields");
@@ -33108,8 +33266,8 @@ var init_select3 = __esm({
         });
       }
     };
-    __publicField(SQLiteSelectBuilder, _a201, "SQLiteSelectBuilder");
-    SQLiteSelectQueryBuilderBase = class extends (_b145 = TypedQueryBuilder, _a202 = entityKind, _b145) {
+    __publicField(SQLiteSelectBuilder, _a209, "SQLiteSelectBuilder");
+    SQLiteSelectQueryBuilderBase = class extends (_b153 = TypedQueryBuilder, _a210 = entityKind, _b153) {
       constructor({ table: table6, fields, isPartialSelect, session, dialect: dialect6, withList, distinct }) {
         super();
         __publicField(this, "_");
@@ -33356,7 +33514,7 @@ var init_select3 = __esm({
         return (table6, on) => {
           const baseTableName = this.tableName;
           const tableName = getTableLikeName(table6);
-          if (typeof tableName === "string" && this.config.joins?.some((join) => join.alias === tableName)) {
+          if (typeof tableName === "string" && this.config.joins?.some((join2) => join2.alias === tableName)) {
             throw new Error(`Alias "${tableName}" is already used in this query`);
           }
           if (!this.isPartialSelect) {
@@ -33614,8 +33772,8 @@ var init_select3 = __esm({
         return this;
       }
     };
-    __publicField(SQLiteSelectQueryBuilderBase, _a202, "SQLiteSelectQueryBuilder");
-    SQLiteSelectBase = class extends (_b146 = SQLiteSelectQueryBuilderBase, _a203 = entityKind, _b146) {
+    __publicField(SQLiteSelectQueryBuilderBase, _a210, "SQLiteSelectQueryBuilder");
+    SQLiteSelectBase = class extends (_b154 = SQLiteSelectQueryBuilderBase, _a211 = entityKind, _b154) {
       constructor() {
         super(...arguments);
         __publicField(this, "run", (placeholderValues) => {
@@ -33653,7 +33811,7 @@ var init_select3 = __esm({
         return this.all();
       }
     };
-    __publicField(SQLiteSelectBase, _a203, "SQLiteSelect");
+    __publicField(SQLiteSelectBase, _a211, "SQLiteSelect");
     applyMixins(SQLiteSelectBase, [QueryPromise]);
     getSQLiteSetOperators = () => ({
       union: union3,
@@ -33669,7 +33827,7 @@ var init_select3 = __esm({
 });
 
 // ../drizzle-orm/dist/sqlite-core/query-builders/query-builder.js
-var _a204, QueryBuilder2;
+var _a212, QueryBuilder2;
 var init_query_builder3 = __esm({
   "../drizzle-orm/dist/sqlite-core/query-builders/query-builder.js"() {
     "use strict";
@@ -33678,7 +33836,7 @@ var init_query_builder3 = __esm({
     init_dialect2();
     init_subquery();
     init_select3();
-    _a204 = entityKind;
+    _a212 = entityKind;
     QueryBuilder2 = class {
       constructor(dialect6) {
         __publicField(this, "dialect");
@@ -33744,12 +33902,12 @@ var init_query_builder3 = __esm({
         return this.dialect;
       }
     };
-    __publicField(QueryBuilder2, _a204, "SQLiteQueryBuilder");
+    __publicField(QueryBuilder2, _a212, "SQLiteQueryBuilder");
   }
 });
 
 // ../drizzle-orm/dist/sqlite-core/query-builders/insert.js
-var _a205, SQLiteInsertBuilder, _a206, _b147, SQLiteInsertBase;
+var _a213, SQLiteInsertBuilder, _a214, _b155, SQLiteInsertBase;
 var init_insert2 = __esm({
   "../drizzle-orm/dist/sqlite-core/query-builders/insert.js"() {
     "use strict";
@@ -33760,7 +33918,7 @@ var init_insert2 = __esm({
     init_table();
     init_utils2();
     init_query_builder3();
-    _a205 = entityKind;
+    _a213 = entityKind;
     SQLiteInsertBuilder = class {
       constructor(table6, session, dialect6, withList) {
         this.table = table6;
@@ -33794,8 +33952,8 @@ var init_insert2 = __esm({
         return new SQLiteInsertBase(this.table, select, this.session, this.dialect, this.withList, true);
       }
     };
-    __publicField(SQLiteInsertBuilder, _a205, "SQLiteInsertBuilder");
-    SQLiteInsertBase = class extends (_b147 = QueryPromise, _a206 = entityKind, _b147) {
+    __publicField(SQLiteInsertBuilder, _a213, "SQLiteInsertBuilder");
+    SQLiteInsertBase = class extends (_b155 = QueryPromise, _a214 = entityKind, _b155) {
       constructor(table6, values, session, dialect6, withList, select) {
         super();
         /** @internal */
@@ -33928,7 +34086,7 @@ var init_insert2 = __esm({
         return this;
       }
     };
-    __publicField(SQLiteInsertBase, _a206, "SQLiteInsert");
+    __publicField(SQLiteInsertBase, _a214, "SQLiteInsert");
   }
 });
 
@@ -33940,7 +34098,7 @@ var init_select_types2 = __esm({
 });
 
 // ../drizzle-orm/dist/sqlite-core/query-builders/update.js
-var _a207, SQLiteUpdateBuilder, _a208, _b148, SQLiteUpdateBase;
+var _a215, SQLiteUpdateBuilder, _a216, _b156, SQLiteUpdateBase;
 var init_update2 = __esm({
   "../drizzle-orm/dist/sqlite-core/query-builders/update.js"() {
     "use strict";
@@ -33953,7 +34111,7 @@ var init_update2 = __esm({
     init_utils2();
     init_view_common();
     init_view_base2();
-    _a207 = entityKind;
+    _a215 = entityKind;
     SQLiteUpdateBuilder = class {
       constructor(table6, session, dialect6, withList) {
         this.table = table6;
@@ -33971,8 +34129,8 @@ var init_update2 = __esm({
         );
       }
     };
-    __publicField(SQLiteUpdateBuilder, _a207, "SQLiteUpdateBuilder");
-    SQLiteUpdateBase = class extends (_b148 = QueryPromise, _a208 = entityKind, _b148) {
+    __publicField(SQLiteUpdateBuilder, _a215, "SQLiteUpdateBuilder");
+    SQLiteUpdateBase = class extends (_b156 = QueryPromise, _a216 = entityKind, _b156) {
       constructor(table6, set, session, dialect6, withList) {
         super();
         /** @internal */
@@ -34004,7 +34162,7 @@ var init_update2 = __esm({
       createJoin(joinType) {
         return (table6, on) => {
           const tableName = getTableLikeName(table6);
-          if (typeof tableName === "string" && this.config.joins.some((join) => join.alias === tableName)) {
+          if (typeof tableName === "string" && this.config.joins.some((join2) => join2.alias === tableName)) {
             throw new Error(`Alias "${tableName}" is already used in this query`);
           }
           if (typeof on === "function") {
@@ -34112,7 +34270,7 @@ var init_update2 = __esm({
         return this;
       }
     };
-    __publicField(SQLiteUpdateBase, _a208, "SQLiteUpdate");
+    __publicField(SQLiteUpdateBase, _a216, "SQLiteUpdate");
   }
 });
 
@@ -34130,17 +34288,17 @@ var init_query_builders2 = __esm({
 });
 
 // ../drizzle-orm/dist/sqlite-core/query-builders/count.js
-var _a209, _b149, _c8, _SQLiteCountBuilder, SQLiteCountBuilder;
+var _a217, _b157, _c8, _SQLiteCountBuilder, SQLiteCountBuilder;
 var init_count2 = __esm({
   "../drizzle-orm/dist/sqlite-core/query-builders/count.js"() {
     "use strict";
     init_entity();
     init_sql();
-    _SQLiteCountBuilder = class _SQLiteCountBuilder extends (_c8 = SQL, _b149 = entityKind, _a209 = Symbol.toStringTag, _c8) {
+    _SQLiteCountBuilder = class _SQLiteCountBuilder extends (_c8 = SQL, _b157 = entityKind, _a217 = Symbol.toStringTag, _c8) {
       constructor(params) {
         super(_SQLiteCountBuilder.buildEmbeddedCount(params.source, params.filters).queryChunks);
         __publicField(this, "sql");
-        __publicField(this, _a209, "SQLiteCountBuilderAsync");
+        __publicField(this, _a217, "SQLiteCountBuilderAsync");
         __publicField(this, "session");
         this.params = params;
         this.session = params.session;
@@ -34177,20 +34335,20 @@ var init_count2 = __esm({
         );
       }
     };
-    __publicField(_SQLiteCountBuilder, _b149, "SQLiteCountBuilderAsync");
+    __publicField(_SQLiteCountBuilder, _b157, "SQLiteCountBuilderAsync");
     SQLiteCountBuilder = _SQLiteCountBuilder;
   }
 });
 
 // ../drizzle-orm/dist/sqlite-core/query-builders/query.js
-var _a210, RelationalQueryBuilder2, _a211, _b150, SQLiteRelationalQuery, _a212, _b151, SQLiteSyncRelationalQuery;
+var _a218, RelationalQueryBuilder2, _a219, _b158, SQLiteRelationalQuery, _a220, _b159, SQLiteSyncRelationalQuery;
 var init_query2 = __esm({
   "../drizzle-orm/dist/sqlite-core/query-builders/query.js"() {
     "use strict";
     init_entity();
     init_query_promise();
     init_relations();
-    _a210 = entityKind;
+    _a218 = entityKind;
     RelationalQueryBuilder2 = class {
       constructor(mode, fullSchema, schema5, tableNamesMap, table6, tableConfig, dialect6, session) {
         this.mode = mode;
@@ -34249,8 +34407,8 @@ var init_query2 = __esm({
         );
       }
     };
-    __publicField(RelationalQueryBuilder2, _a210, "SQLiteAsyncRelationalQueryBuilder");
-    SQLiteRelationalQuery = class extends (_b150 = QueryPromise, _a211 = entityKind, _b150) {
+    __publicField(RelationalQueryBuilder2, _a218, "SQLiteAsyncRelationalQueryBuilder");
+    SQLiteRelationalQuery = class extends (_b158 = QueryPromise, _a219 = entityKind, _b158) {
       constructor(fullSchema, schema5, tableNamesMap, table6, tableConfig, dialect6, session, config, mode) {
         super();
         /** @internal */
@@ -34326,24 +34484,24 @@ var init_query2 = __esm({
         return this.executeRaw();
       }
     };
-    __publicField(SQLiteRelationalQuery, _a211, "SQLiteAsyncRelationalQuery");
-    SQLiteSyncRelationalQuery = class extends (_b151 = SQLiteRelationalQuery, _a212 = entityKind, _b151) {
+    __publicField(SQLiteRelationalQuery, _a219, "SQLiteAsyncRelationalQuery");
+    SQLiteSyncRelationalQuery = class extends (_b159 = SQLiteRelationalQuery, _a220 = entityKind, _b159) {
       sync() {
         return this.executeRaw();
       }
     };
-    __publicField(SQLiteSyncRelationalQuery, _a212, "SQLiteSyncRelationalQuery");
+    __publicField(SQLiteSyncRelationalQuery, _a220, "SQLiteSyncRelationalQuery");
   }
 });
 
 // ../drizzle-orm/dist/sqlite-core/query-builders/raw.js
-var _a213, _b152, SQLiteRaw;
+var _a221, _b160, SQLiteRaw;
 var init_raw2 = __esm({
   "../drizzle-orm/dist/sqlite-core/query-builders/raw.js"() {
     "use strict";
     init_entity();
     init_query_promise();
-    SQLiteRaw = class extends (_b152 = QueryPromise, _a213 = entityKind, _b152) {
+    SQLiteRaw = class extends (_b160 = QueryPromise, _a221 = entityKind, _b160) {
       constructor(execute, getSQL, action, dialect6, mapBatchResult) {
         super();
         /** @internal */
@@ -34368,12 +34526,12 @@ var init_raw2 = __esm({
         return false;
       }
     };
-    __publicField(SQLiteRaw, _a213, "SQLiteRaw");
+    __publicField(SQLiteRaw, _a221, "SQLiteRaw");
   }
 });
 
 // ../drizzle-orm/dist/sqlite-core/db.js
-var _a214, BaseSQLiteDatabase;
+var _a222, BaseSQLiteDatabase;
 var init_db2 = __esm({
   "../drizzle-orm/dist/sqlite-core/db.js"() {
     "use strict";
@@ -34385,7 +34543,7 @@ var init_db2 = __esm({
     init_count2();
     init_query2();
     init_raw2();
-    _a214 = entityKind;
+    _a222 = entityKind;
     BaseSQLiteDatabase = class {
       constructor(resultKind, dialect6, session, schema5) {
         __publicField(this, "query");
@@ -34671,17 +34829,17 @@ var init_db2 = __esm({
         return this.session.transaction(transaction, config);
       }
     };
-    __publicField(BaseSQLiteDatabase, _a214, "BaseSQLiteDatabase");
+    __publicField(BaseSQLiteDatabase, _a222, "BaseSQLiteDatabase");
   }
 });
 
 // ../drizzle-orm/dist/sqlite-core/indexes.js
-var _a215, IndexBuilderOn2, _a216, IndexBuilder2, _a217, Index4;
+var _a223, IndexBuilderOn2, _a224, IndexBuilder2, _a225, Index4;
 var init_indexes2 = __esm({
   "../drizzle-orm/dist/sqlite-core/indexes.js"() {
     "use strict";
     init_entity();
-    _a215 = entityKind;
+    _a223 = entityKind;
     IndexBuilderOn2 = class {
       constructor(name2, unique) {
         this.name = name2;
@@ -34691,8 +34849,8 @@ var init_indexes2 = __esm({
         return new IndexBuilder2(this.name, columns, this.unique);
       }
     };
-    __publicField(IndexBuilderOn2, _a215, "SQLiteIndexBuilderOn");
-    _a216 = entityKind;
+    __publicField(IndexBuilderOn2, _a223, "SQLiteIndexBuilderOn");
+    _a224 = entityKind;
     IndexBuilder2 = class {
       constructor(name2, columns, unique) {
         /** @internal */
@@ -34716,26 +34874,26 @@ var init_indexes2 = __esm({
         return new Index4(this.config, table6);
       }
     };
-    __publicField(IndexBuilder2, _a216, "SQLiteIndexBuilder");
-    _a217 = entityKind;
+    __publicField(IndexBuilder2, _a224, "SQLiteIndexBuilder");
+    _a225 = entityKind;
     Index4 = class {
       constructor(config, table6) {
         __publicField(this, "config");
         this.config = { ...config, table: table6 };
       }
     };
-    __publicField(Index4, _a217, "SQLiteIndex");
+    __publicField(Index4, _a225, "SQLiteIndex");
   }
 });
 
 // ../drizzle-orm/dist/sqlite-core/primary-keys.js
-var _a218, PrimaryKeyBuilder2, _a219, PrimaryKey2;
+var _a226, PrimaryKeyBuilder2, _a227, PrimaryKey2;
 var init_primary_keys2 = __esm({
   "../drizzle-orm/dist/sqlite-core/primary-keys.js"() {
     "use strict";
     init_entity();
     init_table3();
-    _a218 = entityKind;
+    _a226 = entityKind;
     PrimaryKeyBuilder2 = class {
       constructor(columns, name2) {
         /** @internal */
@@ -34750,8 +34908,8 @@ var init_primary_keys2 = __esm({
         return new PrimaryKey2(table6, this.columns, this.name);
       }
     };
-    __publicField(PrimaryKeyBuilder2, _a218, "SQLitePrimaryKeyBuilder");
-    _a219 = entityKind;
+    __publicField(PrimaryKeyBuilder2, _a226, "SQLitePrimaryKeyBuilder");
+    _a227 = entityKind;
     PrimaryKey2 = class {
       constructor(table6, columns, name2) {
         __publicField(this, "columns");
@@ -34764,12 +34922,12 @@ var init_primary_keys2 = __esm({
         return this.name ?? `${this.table[SQLiteTable.Symbol.Name]}_${this.columns.map((column6) => column6.name).join("_")}_pk`;
       }
     };
-    __publicField(PrimaryKey2, _a219, "SQLitePrimaryKey");
+    __publicField(PrimaryKey2, _a227, "SQLitePrimaryKey");
   }
 });
 
 // ../drizzle-orm/dist/sqlite-core/session.js
-var _a220, _b153, ExecuteResultSync, _a221, SQLitePreparedQuery, _a222, SQLiteSession, _a223, _b154, SQLiteTransaction;
+var _a228, _b161, ExecuteResultSync, _a229, SQLitePreparedQuery, _a230, SQLiteSession, _a231, _b162, SQLiteTransaction;
 var init_session2 = __esm({
   "../drizzle-orm/dist/sqlite-core/session.js"() {
     "use strict";
@@ -34777,7 +34935,7 @@ var init_session2 = __esm({
     init_errors();
     init_query_promise();
     init_db2();
-    ExecuteResultSync = class extends (_b153 = QueryPromise, _a220 = entityKind, _b153) {
+    ExecuteResultSync = class extends (_b161 = QueryPromise, _a228 = entityKind, _b161) {
       constructor(resultCb) {
         super();
         this.resultCb = resultCb;
@@ -34789,8 +34947,8 @@ var init_session2 = __esm({
         return this.resultCb();
       }
     };
-    __publicField(ExecuteResultSync, _a220, "ExecuteResultSync");
-    _a221 = entityKind;
+    __publicField(ExecuteResultSync, _a228, "ExecuteResultSync");
+    _a229 = entityKind;
     SQLitePreparedQuery = class {
       constructor(mode, executeMethod, query) {
         /** @internal */
@@ -34831,8 +34989,8 @@ var init_session2 = __esm({
         }
       }
     };
-    __publicField(SQLitePreparedQuery, _a221, "PreparedQuery");
-    _a222 = entityKind;
+    __publicField(SQLitePreparedQuery, _a229, "PreparedQuery");
+    _a230 = entityKind;
     SQLiteSession = class {
       constructor(dialect6) {
         this.dialect = dialect6;
@@ -34878,8 +35036,8 @@ var init_session2 = __esm({
         throw new Error("Not implemented");
       }
     };
-    __publicField(SQLiteSession, _a222, "SQLiteSession");
-    SQLiteTransaction = class extends (_b154 = BaseSQLiteDatabase, _a223 = entityKind, _b154) {
+    __publicField(SQLiteSession, _a230, "SQLiteSession");
+    SQLiteTransaction = class extends (_b162 = BaseSQLiteDatabase, _a231 = entityKind, _b162) {
       constructor(resultType, dialect6, session, schema5, nestedIndex = 0) {
         super(resultType, dialect6, session, schema5);
         this.schema = schema5;
@@ -34889,7 +35047,7 @@ var init_session2 = __esm({
         throw new TransactionRollbackError();
       }
     };
-    __publicField(SQLiteTransaction, _a223, "SQLiteTransaction");
+    __publicField(SQLiteTransaction, _a231, "SQLiteTransaction");
   }
 });
 
@@ -34959,7 +35117,7 @@ var init_utils7 = __esm({
 });
 
 // ../drizzle-orm/dist/sqlite-core/view.js
-var _a224, ViewBuilderCore, _a225, _b155, ViewBuilder2, _a226, _b156, ManualViewBuilder2, _a227, _b157, SQLiteView2;
+var _a232, ViewBuilderCore, _a233, _b163, ViewBuilder2, _a234, _b164, ManualViewBuilder2, _a235, _b165, SQLiteView2;
 var init_view2 = __esm({
   "../drizzle-orm/dist/sqlite-core/view.js"() {
     "use strict";
@@ -34969,15 +35127,15 @@ var init_view2 = __esm({
     init_query_builder3();
     init_table3();
     init_view_base2();
-    _a224 = entityKind;
+    _a232 = entityKind;
     ViewBuilderCore = class {
       constructor(name2) {
         __publicField(this, "config", {});
         this.name = name2;
       }
     };
-    __publicField(ViewBuilderCore, _a224, "SQLiteViewBuilderCore");
-    ViewBuilder2 = class extends (_b155 = ViewBuilderCore, _a225 = entityKind, _b155) {
+    __publicField(ViewBuilderCore, _a232, "SQLiteViewBuilderCore");
+    ViewBuilder2 = class extends (_b163 = ViewBuilderCore, _a233 = entityKind, _b163) {
       as(qb) {
         if (typeof qb === "function") {
           qb = qb(new QueryBuilder2());
@@ -35003,8 +35161,8 @@ var init_view2 = __esm({
         );
       }
     };
-    __publicField(ViewBuilder2, _a225, "SQLiteViewBuilder");
-    ManualViewBuilder2 = class extends (_b156 = ViewBuilderCore, _a226 = entityKind, _b156) {
+    __publicField(ViewBuilder2, _a233, "SQLiteViewBuilder");
+    ManualViewBuilder2 = class extends (_b164 = ViewBuilderCore, _a234 = entityKind, _b164) {
       constructor(name2, columns) {
         super(name2);
         __publicField(this, "columns");
@@ -35047,13 +35205,13 @@ var init_view2 = __esm({
         );
       }
     };
-    __publicField(ManualViewBuilder2, _a226, "SQLiteManualViewBuilder");
-    SQLiteView2 = class extends (_b157 = SQLiteViewBase, _a227 = entityKind, _b157) {
+    __publicField(ManualViewBuilder2, _a234, "SQLiteManualViewBuilder");
+    SQLiteView2 = class extends (_b165 = SQLiteViewBase, _a235 = entityKind, _b165) {
       constructor({ config }) {
         super(config);
       }
     };
-    __publicField(SQLiteView2, _a227, "SQLiteView");
+    __publicField(SQLiteView2, _a235, "SQLiteView");
   }
 });
 
@@ -35141,6 +35299,10 @@ function extractGeneratedColumns(input) {
   }
   return columns;
 }
+function ignoreTableNames(fieldName) {
+  return `(${fieldName} NOT IN ('sqlite_sequence','_litestream_seq', '_litestream_lock', 'libsql_wasm_func_table', '__drizzle_migrations') 
+		        and ${fieldName} NOT LIKE '_cf_%')`;
+}
 var generateSqliteSnapshot, fromDatabase2;
 var init_sqliteSerializer = __esm({
   "src/serializer/sqliteSerializer.ts"() {
@@ -35448,23 +35610,15 @@ ${withStyle.errorWarning(
         `SELECT 
     m.name as "tableName", p.name as "columnName", p.type as "columnType", p."notnull" as "notNull", p.dflt_value as "defaultValue", p.pk as pk, p.hidden as hidden, m.sql, m.type as type
     FROM sqlite_master AS m JOIN pragma_table_xinfo(m.name) AS p
-    WHERE (m.type = 'table' OR m.type = 'view')
-    and m.tbl_name != 'sqlite_sequence' 
-    and m.tbl_name != 'sqlite_stat1' 
-    and m.tbl_name != '_litestream_seq' 
-    and m.tbl_name != '_litestream_lock' 
-    and m.tbl_name != 'libsql_wasm_func_table' 
-    and m.tbl_name != '__drizzle_migrations' 
-    and m.tbl_name != '_cf_KV';
+    WHERE (m.type = 'table' OR m.type = 'view') 
+	and ${ignoreTableNames("m.tbl_name")};
     `
       );
       const tablesWithSeq = [];
       const seq = await db.query(
         `SELECT * FROM sqlite_master WHERE name != 'sqlite_sequence' 
-    and name != 'sqlite_stat1' 
-    and name != '_litestream_seq' 
-    and name != '_litestream_lock' 
-    and tbl_name != '_cf_KV' 
+    and ${ignoreTableNames("name")}
+    and ${ignoreTableNames("tbl_name")}
     and sql GLOB '*[ *' || CHAR(9) || CHAR(10) || CHAR(13) || ']AUTOINCREMENT[^'']*';`
       );
       for (const s of seq) {
@@ -35563,7 +35717,7 @@ ${withStyle.errorWarning(
         const fks = await db.query(
           `SELECT m.name as "tableFrom", f.id as "id", f."table" as "tableTo", f."from", f."to", f."on_update" as "onUpdate", f."on_delete" as "onDelete", f.seq as "seq"
       FROM sqlite_master m, pragma_foreign_key_list(m.name) as f 
-      where m.tbl_name != '_cf_KV';`
+      where ${ignoreTableNames("m.tbl_name")};`
         );
         const fkByTableName = {};
         for (const fkRow of fks) {
@@ -35623,7 +35777,7 @@ FROM sqlite_master AS m,
 WHERE 
     m.type = 'table' 
     and il.name NOT LIKE 'sqlite_autoindex_%'
-    and m.tbl_name != '_cf_KV';`
+    and ${ignoreTableNames("m.tbl_name")};`
       );
       for (const idxRow of idxs) {
         const tableName = idxRow.tableName;
@@ -35685,7 +35839,7 @@ WHERE
       const checkConstraints = {};
       const checks = await db.query(`SELECT name as "tableName", sql as "sql"
 		FROM sqlite_master 
-		WHERE type = 'table' AND name != 'sqlite_sequence';`);
+		WHERE type = 'table' AND ${ignoreTableNames("name")};`);
       for (const check of checks) {
         if (!tablesFilter(check.tableName)) continue;
         const { tableName, sql: sql2 } = check;
@@ -35771,12 +35925,12 @@ var init_alias4 = __esm({
 });
 
 // ../drizzle-orm/dist/mysql-core/checks.js
-var _a228, CheckBuilder3, _a229, Check3;
+var _a236, CheckBuilder3, _a237, Check3;
 var init_checks3 = __esm({
   "../drizzle-orm/dist/mysql-core/checks.js"() {
     "use strict";
     init_entity();
-    _a228 = entityKind;
+    _a236 = entityKind;
     CheckBuilder3 = class {
       constructor(name2, value) {
         __publicField(this, "brand");
@@ -35788,8 +35942,8 @@ var init_checks3 = __esm({
         return new Check3(table6, this);
       }
     };
-    __publicField(CheckBuilder3, _a228, "MySqlCheckBuilder");
-    _a229 = entityKind;
+    __publicField(CheckBuilder3, _a236, "MySqlCheckBuilder");
+    _a237 = entityKind;
     Check3 = class {
       constructor(table6, builder) {
         __publicField(this, "name");
@@ -35799,18 +35953,18 @@ var init_checks3 = __esm({
         this.value = builder.value;
       }
     };
-    __publicField(Check3, _a229, "MySqlCheck");
+    __publicField(Check3, _a237, "MySqlCheck");
   }
 });
 
 // ../drizzle-orm/dist/mysql-core/foreign-keys.js
-var _a230, ForeignKeyBuilder3, _a231, ForeignKey3;
+var _a238, ForeignKeyBuilder3, _a239, ForeignKey3;
 var init_foreign_keys3 = __esm({
   "../drizzle-orm/dist/mysql-core/foreign-keys.js"() {
     "use strict";
     init_entity();
     init_table_utils();
-    _a230 = entityKind;
+    _a238 = entityKind;
     ForeignKeyBuilder3 = class {
       constructor(config, actions) {
         /** @internal */
@@ -35841,8 +35995,8 @@ var init_foreign_keys3 = __esm({
         return new ForeignKey3(table6, this);
       }
     };
-    __publicField(ForeignKeyBuilder3, _a230, "MySqlForeignKeyBuilder");
-    _a231 = entityKind;
+    __publicField(ForeignKeyBuilder3, _a238, "MySqlForeignKeyBuilder");
+    _a239 = entityKind;
     ForeignKey3 = class {
       constructor(table6, builder) {
         __publicField(this, "reference");
@@ -35866,7 +36020,7 @@ var init_foreign_keys3 = __esm({
         return name2 ?? `${chunks.join("_")}_fk`;
       }
     };
-    __publicField(ForeignKey3, _a231, "MySqlForeignKey");
+    __publicField(ForeignKey3, _a239, "MySqlForeignKey");
   }
 });
 
@@ -35874,13 +36028,13 @@ var init_foreign_keys3 = __esm({
 function uniqueKeyName3(table6, columns) {
   return `${table6[TableName]}_${columns.join("_")}_unique`;
 }
-var _a232, UniqueConstraintBuilder3, _a233, UniqueOnConstraintBuilder3, _a234, UniqueConstraint3;
+var _a240, UniqueConstraintBuilder3, _a241, UniqueOnConstraintBuilder3, _a242, UniqueConstraint3;
 var init_unique_constraint3 = __esm({
   "../drizzle-orm/dist/mysql-core/unique-constraint.js"() {
     "use strict";
     init_entity();
     init_table_utils();
-    _a232 = entityKind;
+    _a240 = entityKind;
     UniqueConstraintBuilder3 = class {
       constructor(columns, name2) {
         /** @internal */
@@ -35893,8 +36047,8 @@ var init_unique_constraint3 = __esm({
         return new UniqueConstraint3(table6, this.columns, this.name);
       }
     };
-    __publicField(UniqueConstraintBuilder3, _a232, "MySqlUniqueConstraintBuilder");
-    _a233 = entityKind;
+    __publicField(UniqueConstraintBuilder3, _a240, "MySqlUniqueConstraintBuilder");
+    _a241 = entityKind;
     UniqueOnConstraintBuilder3 = class {
       constructor(name2) {
         /** @internal */
@@ -35905,8 +36059,8 @@ var init_unique_constraint3 = __esm({
         return new UniqueConstraintBuilder3(columns, this.name);
       }
     };
-    __publicField(UniqueOnConstraintBuilder3, _a233, "MySqlUniqueOnConstraintBuilder");
-    _a234 = entityKind;
+    __publicField(UniqueOnConstraintBuilder3, _a241, "MySqlUniqueOnConstraintBuilder");
+    _a242 = entityKind;
     UniqueConstraint3 = class {
       constructor(table6, columns, name2) {
         __publicField(this, "columns");
@@ -35920,12 +36074,12 @@ var init_unique_constraint3 = __esm({
         return this.name;
       }
     };
-    __publicField(UniqueConstraint3, _a234, "MySqlUniqueConstraint");
+    __publicField(UniqueConstraint3, _a242, "MySqlUniqueConstraint");
   }
 });
 
 // ../drizzle-orm/dist/mysql-core/columns/common.js
-var _a235, _b158, MySqlColumnBuilder, _a236, _b159, MySqlColumn, _a237, _b160, MySqlColumnBuilderWithAutoIncrement, _a238, _b161, MySqlColumnWithAutoIncrement;
+var _a243, _b166, MySqlColumnBuilder, _a244, _b167, MySqlColumn, _a245, _b168, MySqlColumnBuilderWithAutoIncrement, _a246, _b169, MySqlColumnWithAutoIncrement;
 var init_common4 = __esm({
   "../drizzle-orm/dist/mysql-core/columns/common.js"() {
     "use strict";
@@ -35934,7 +36088,7 @@ var init_common4 = __esm({
     init_entity();
     init_foreign_keys3();
     init_unique_constraint3();
-    MySqlColumnBuilder = class extends (_b158 = ColumnBuilder, _a235 = entityKind, _b158) {
+    MySqlColumnBuilder = class extends (_b166 = ColumnBuilder, _a243 = entityKind, _b166) {
       constructor() {
         super(...arguments);
         __publicField(this, "foreignKeyConfigs", []);
@@ -35975,8 +36129,8 @@ var init_common4 = __esm({
         });
       }
     };
-    __publicField(MySqlColumnBuilder, _a235, "MySqlColumnBuilder");
-    MySqlColumn = class extends (_b159 = Column2, _a236 = entityKind, _b159) {
+    __publicField(MySqlColumnBuilder, _a243, "MySqlColumnBuilder");
+    MySqlColumn = class extends (_b167 = Column2, _a244 = entityKind, _b167) {
       constructor(table6, config) {
         if (!config.uniqueName) {
           config.uniqueName = uniqueKeyName3(table6, [config.name]);
@@ -35985,8 +36139,8 @@ var init_common4 = __esm({
         this.table = table6;
       }
     };
-    __publicField(MySqlColumn, _a236, "MySqlColumn");
-    MySqlColumnBuilderWithAutoIncrement = class extends (_b160 = MySqlColumnBuilder, _a237 = entityKind, _b160) {
+    __publicField(MySqlColumn, _a244, "MySqlColumn");
+    MySqlColumnBuilderWithAutoIncrement = class extends (_b168 = MySqlColumnBuilder, _a245 = entityKind, _b168) {
       constructor(name2, dataType, columnType) {
         super(name2, dataType, columnType);
         this.config.autoIncrement = false;
@@ -35997,14 +36151,14 @@ var init_common4 = __esm({
         return this;
       }
     };
-    __publicField(MySqlColumnBuilderWithAutoIncrement, _a237, "MySqlColumnBuilderWithAutoIncrement");
-    MySqlColumnWithAutoIncrement = class extends (_b161 = MySqlColumn, _a238 = entityKind, _b161) {
+    __publicField(MySqlColumnBuilderWithAutoIncrement, _a245, "MySqlColumnBuilderWithAutoIncrement");
+    MySqlColumnWithAutoIncrement = class extends (_b169 = MySqlColumn, _a246 = entityKind, _b169) {
       constructor() {
         super(...arguments);
         __publicField(this, "autoIncrement", this.config.autoIncrement);
       }
     };
-    __publicField(MySqlColumnWithAutoIncrement, _a238, "MySqlColumnWithAutoIncrement");
+    __publicField(MySqlColumnWithAutoIncrement, _a246, "MySqlColumnWithAutoIncrement");
   }
 });
 
@@ -36016,14 +36170,14 @@ function bigint2(a, b) {
   }
   return new MySqlBigInt64Builder(name2, config.unsigned);
 }
-var _a239, _b162, MySqlBigInt53Builder, _a240, _b163, MySqlBigInt53, _a241, _b164, MySqlBigInt64Builder, _a242, _b165, MySqlBigInt64;
+var _a247, _b170, MySqlBigInt53Builder, _a248, _b171, MySqlBigInt53, _a249, _b172, MySqlBigInt64Builder, _a250, _b173, MySqlBigInt64;
 var init_bigint2 = __esm({
   "../drizzle-orm/dist/mysql-core/columns/bigint.js"() {
     "use strict";
     init_entity();
     init_utils2();
     init_common4();
-    MySqlBigInt53Builder = class extends (_b162 = MySqlColumnBuilderWithAutoIncrement, _a239 = entityKind, _b162) {
+    MySqlBigInt53Builder = class extends (_b170 = MySqlColumnBuilderWithAutoIncrement, _a247 = entityKind, _b170) {
       constructor(name2, unsigned = false) {
         super(name2, "number", "MySqlBigInt53");
         this.config.unsigned = unsigned;
@@ -36036,8 +36190,8 @@ var init_bigint2 = __esm({
         );
       }
     };
-    __publicField(MySqlBigInt53Builder, _a239, "MySqlBigInt53Builder");
-    MySqlBigInt53 = class extends (_b163 = MySqlColumnWithAutoIncrement, _a240 = entityKind, _b163) {
+    __publicField(MySqlBigInt53Builder, _a247, "MySqlBigInt53Builder");
+    MySqlBigInt53 = class extends (_b171 = MySqlColumnWithAutoIncrement, _a248 = entityKind, _b171) {
       getSQLType() {
         return `bigint${this.config.unsigned ? " unsigned" : ""}`;
       }
@@ -36048,8 +36202,8 @@ var init_bigint2 = __esm({
         return Number(value);
       }
     };
-    __publicField(MySqlBigInt53, _a240, "MySqlBigInt53");
-    MySqlBigInt64Builder = class extends (_b164 = MySqlColumnBuilderWithAutoIncrement, _a241 = entityKind, _b164) {
+    __publicField(MySqlBigInt53, _a248, "MySqlBigInt53");
+    MySqlBigInt64Builder = class extends (_b172 = MySqlColumnBuilderWithAutoIncrement, _a249 = entityKind, _b172) {
       constructor(name2, unsigned = false) {
         super(name2, "bigint", "MySqlBigInt64");
         this.config.unsigned = unsigned;
@@ -36062,8 +36216,8 @@ var init_bigint2 = __esm({
         );
       }
     };
-    __publicField(MySqlBigInt64Builder, _a241, "MySqlBigInt64Builder");
-    MySqlBigInt64 = class extends (_b165 = MySqlColumnWithAutoIncrement, _a242 = entityKind, _b165) {
+    __publicField(MySqlBigInt64Builder, _a249, "MySqlBigInt64Builder");
+    MySqlBigInt64 = class extends (_b173 = MySqlColumnWithAutoIncrement, _a250 = entityKind, _b173) {
       getSQLType() {
         return `bigint${this.config.unsigned ? " unsigned" : ""}`;
       }
@@ -36072,7 +36226,7 @@ var init_bigint2 = __esm({
         return BigInt(value);
       }
     };
-    __publicField(MySqlBigInt64, _a242, "MySqlBigInt64");
+    __publicField(MySqlBigInt64, _a250, "MySqlBigInt64");
   }
 });
 
@@ -36081,14 +36235,14 @@ function binary(a, b = {}) {
   const { name: name2, config } = getColumnNameAndConfig(a, b);
   return new MySqlBinaryBuilder(name2, config.length);
 }
-var _a243, _b166, MySqlBinaryBuilder, _a244, _b167, MySqlBinary;
+var _a251, _b174, MySqlBinaryBuilder, _a252, _b175, MySqlBinary;
 var init_binary = __esm({
   "../drizzle-orm/dist/mysql-core/columns/binary.js"() {
     "use strict";
     init_entity();
     init_utils2();
     init_common4();
-    MySqlBinaryBuilder = class extends (_b166 = MySqlColumnBuilder, _a243 = entityKind, _b166) {
+    MySqlBinaryBuilder = class extends (_b174 = MySqlColumnBuilder, _a251 = entityKind, _b174) {
       constructor(name2, length) {
         super(name2, "string", "MySqlBinary");
         this.config.length = length;
@@ -36098,17 +36252,28 @@ var init_binary = __esm({
         return new MySqlBinary(table6, this.config);
       }
     };
-    __publicField(MySqlBinaryBuilder, _a243, "MySqlBinaryBuilder");
-    MySqlBinary = class extends (_b167 = MySqlColumn, _a244 = entityKind, _b167) {
+    __publicField(MySqlBinaryBuilder, _a251, "MySqlBinaryBuilder");
+    MySqlBinary = class extends (_b175 = MySqlColumn, _a252 = entityKind, _b175) {
       constructor() {
         super(...arguments);
         __publicField(this, "length", this.config.length);
       }
+      mapFromDriverValue(value) {
+        if (typeof value === "string")
+          return value;
+        if (Buffer.isBuffer(value))
+          return value.toString();
+        const str = [];
+        for (const v of value) {
+          str.push(v === 49 ? "1" : "0");
+        }
+        return str.join("");
+      }
       getSQLType() {
         return this.length === void 0 ? `binary` : `binary(${this.length})`;
       }
     };
-    __publicField(MySqlBinary, _a244, "MySqlBinary");
+    __publicField(MySqlBinary, _a252, "MySqlBinary");
   }
 });
 
@@ -36116,13 +36281,13 @@ var init_binary = __esm({
 function boolean2(name2) {
   return new MySqlBooleanBuilder(name2 ?? "");
 }
-var _a245, _b168, MySqlBooleanBuilder, _a246, _b169, MySqlBoolean;
+var _a253, _b176, MySqlBooleanBuilder, _a254, _b177, MySqlBoolean;
 var init_boolean2 = __esm({
   "../drizzle-orm/dist/mysql-core/columns/boolean.js"() {
     "use strict";
     init_entity();
     init_common4();
-    MySqlBooleanBuilder = class extends (_b168 = MySqlColumnBuilder, _a245 = entityKind, _b168) {
+    MySqlBooleanBuilder = class extends (_b176 = MySqlColumnBuilder, _a253 = entityKind, _b176) {
       constructor(name2) {
         super(name2, "boolean", "MySqlBoolean");
       }
@@ -36134,8 +36299,8 @@ var init_boolean2 = __esm({
         );
       }
     };
-    __publicField(MySqlBooleanBuilder, _a245, "MySqlBooleanBuilder");
-    MySqlBoolean = class extends (_b169 = MySqlColumn, _a246 = entityKind, _b169) {
+    __publicField(MySqlBooleanBuilder, _a253, "MySqlBooleanBuilder");
+    MySqlBoolean = class extends (_b177 = MySqlColumn, _a254 = entityKind, _b177) {
       getSQLType() {
         return "boolean";
       }
@@ -36146,7 +36311,7 @@ var init_boolean2 = __esm({
         return value === 1;
       }
     };
-    __publicField(MySqlBoolean, _a246, "MySqlBoolean");
+    __publicField(MySqlBoolean, _a254, "MySqlBoolean");
   }
 });
 
@@ -36155,14 +36320,14 @@ function char2(a, b = {}) {
   const { name: name2, config } = getColumnNameAndConfig(a, b);
   return new MySqlCharBuilder(name2, config);
 }
-var _a247, _b170, MySqlCharBuilder, _a248, _b171, MySqlChar;
+var _a255, _b178, MySqlCharBuilder, _a256, _b179, MySqlChar;
 var init_char2 = __esm({
   "../drizzle-orm/dist/mysql-core/columns/char.js"() {
     "use strict";
     init_entity();
     init_utils2();
     init_common4();
-    MySqlCharBuilder = class extends (_b170 = MySqlColumnBuilder, _a247 = entityKind, _b170) {
+    MySqlCharBuilder = class extends (_b178 = MySqlColumnBuilder, _a255 = entityKind, _b178) {
       constructor(name2, config) {
         super(name2, "string", "MySqlChar");
         this.config.length = config.length;
@@ -36176,8 +36341,8 @@ var init_char2 = __esm({
         );
       }
     };
-    __publicField(MySqlCharBuilder, _a247, "MySqlCharBuilder");
-    MySqlChar = class extends (_b171 = MySqlColumn, _a248 = entityKind, _b171) {
+    __publicField(MySqlCharBuilder, _a255, "MySqlCharBuilder");
+    MySqlChar = class extends (_b179 = MySqlColumn, _a256 = entityKind, _b179) {
       constructor() {
         super(...arguments);
         __publicField(this, "length", this.config.length);
@@ -36187,7 +36352,7 @@ var init_char2 = __esm({
         return this.length === void 0 ? `char` : `char(${this.length})`;
       }
     };
-    __publicField(MySqlChar, _a248, "MySqlChar");
+    __publicField(MySqlChar, _a256, "MySqlChar");
   }
 });
 
@@ -36198,14 +36363,14 @@ function customType3(customTypeParams) {
     return new MySqlCustomColumnBuilder(name2, config, customTypeParams);
   };
 }
-var _a249, _b172, MySqlCustomColumnBuilder, _a250, _b173, MySqlCustomColumn;
+var _a257, _b180, MySqlCustomColumnBuilder, _a258, _b181, MySqlCustomColumn;
 var init_custom3 = __esm({
   "../drizzle-orm/dist/mysql-core/columns/custom.js"() {
     "use strict";
     init_entity();
     init_utils2();
     init_common4();
-    MySqlCustomColumnBuilder = class extends (_b172 = MySqlColumnBuilder, _a249 = entityKind, _b172) {
+    MySqlCustomColumnBuilder = class extends (_b180 = MySqlColumnBuilder, _a257 = entityKind, _b180) {
       constructor(name2, fieldConfig, customTypeParams) {
         super(name2, "custom", "MySqlCustomColumn");
         this.config.fieldConfig = fieldConfig;
@@ -36219,8 +36384,8 @@ var init_custom3 = __esm({
         );
       }
     };
-    __publicField(MySqlCustomColumnBuilder, _a249, "MySqlCustomColumnBuilder");
-    MySqlCustomColumn = class extends (_b173 = MySqlColumn, _a250 = entityKind, _b173) {
+    __publicField(MySqlCustomColumnBuilder, _a257, "MySqlCustomColumnBuilder");
+    MySqlCustomColumn = class extends (_b181 = MySqlColumn, _a258 = entityKind, _b181) {
       constructor(table6, config) {
         super(table6, config);
         __publicField(this, "sqlName");
@@ -36240,7 +36405,7 @@ var init_custom3 = __esm({
         return typeof this.mapTo === "function" ? this.mapTo(value) : value;
       }
     };
-    __publicField(MySqlCustomColumn, _a250, "MySqlCustomColumn");
+    __publicField(MySqlCustomColumn, _a258, "MySqlCustomColumn");
   }
 });
 
@@ -36252,14 +36417,14 @@ function date2(a, b) {
   }
   return new MySqlDateBuilder(name2);
 }
-var _a251, _b174, MySqlDateBuilder, _a252, _b175, MySqlDate, _a253, _b176, MySqlDateStringBuilder, _a254, _b177, MySqlDateString;
+var _a259, _b182, MySqlDateBuilder, _a260, _b183, MySqlDate, _a261, _b184, MySqlDateStringBuilder, _a262, _b185, MySqlDateString;
 var init_date2 = __esm({
   "../drizzle-orm/dist/mysql-core/columns/date.js"() {
     "use strict";
     init_entity();
     init_utils2();
     init_common4();
-    MySqlDateBuilder = class extends (_b174 = MySqlColumnBuilder, _a251 = entityKind, _b174) {
+    MySqlDateBuilder = class extends (_b182 = MySqlColumnBuilder, _a259 = entityKind, _b182) {
       constructor(name2) {
         super(name2, "date", "MySqlDate");
       }
@@ -36268,8 +36433,8 @@ var init_date2 = __esm({
         return new MySqlDate(table6, this.config);
       }
     };
-    __publicField(MySqlDateBuilder, _a251, "MySqlDateBuilder");
-    MySqlDate = class extends (_b175 = MySqlColumn, _a252 = entityKind, _b175) {
+    __publicField(MySqlDateBuilder, _a259, "MySqlDateBuilder");
+    MySqlDate = class extends (_b183 = MySqlColumn, _a260 = entityKind, _b183) {
       constructor(table6, config) {
         super(table6, config);
       }
@@ -36280,8 +36445,8 @@ var init_date2 = __esm({
         return new Date(value);
       }
     };
-    __publicField(MySqlDate, _a252, "MySqlDate");
-    MySqlDateStringBuilder = class extends (_b176 = MySqlColumnBuilder, _a253 = entityKind, _b176) {
+    __publicField(MySqlDate, _a260, "MySqlDate");
+    MySqlDateStringBuilder = class extends (_b184 = MySqlColumnBuilder, _a261 = entityKind, _b184) {
       constructor(name2) {
         super(name2, "string", "MySqlDateString");
       }
@@ -36293,8 +36458,8 @@ var init_date2 = __esm({
         );
       }
     };
-    __publicField(MySqlDateStringBuilder, _a253, "MySqlDateStringBuilder");
-    MySqlDateString = class extends (_b177 = MySqlColumn, _a254 = entityKind, _b177) {
+    __publicField(MySqlDateStringBuilder, _a261, "MySqlDateStringBuilder");
+    MySqlDateString = class extends (_b185 = MySqlColumn, _a262 = entityKind, _b185) {
       constructor(table6, config) {
         super(table6, config);
       }
@@ -36302,7 +36467,7 @@ var init_date2 = __esm({
         return `date`;
       }
     };
-    __publicField(MySqlDateString, _a254, "MySqlDateString");
+    __publicField(MySqlDateString, _a262, "MySqlDateString");
   }
 });
 
@@ -36314,14 +36479,14 @@ function datetime(a, b) {
   }
   return new MySqlDateTimeBuilder(name2, config);
 }
-var _a255, _b178, MySqlDateTimeBuilder, _a256, _b179, MySqlDateTime, _a257, _b180, MySqlDateTimeStringBuilder, _a258, _b181, MySqlDateTimeString;
+var _a263, _b186, MySqlDateTimeBuilder, _a264, _b187, MySqlDateTime, _a265, _b188, MySqlDateTimeStringBuilder, _a266, _b189, MySqlDateTimeString;
 var init_datetime = __esm({
   "../drizzle-orm/dist/mysql-core/columns/datetime.js"() {
     "use strict";
     init_entity();
     init_utils2();
     init_common4();
-    MySqlDateTimeBuilder = class extends (_b178 = MySqlColumnBuilder, _a255 = entityKind, _b178) {
+    MySqlDateTimeBuilder = class extends (_b186 = MySqlColumnBuilder, _a263 = entityKind, _b186) {
       constructor(name2, config) {
         super(name2, "date", "MySqlDateTime");
         this.config.fsp = config?.fsp;
@@ -36334,8 +36499,8 @@ var init_datetime = __esm({
         );
       }
     };
-    __publicField(MySqlDateTimeBuilder, _a255, "MySqlDateTimeBuilder");
-    MySqlDateTime = class extends (_b179 = MySqlColumn, _a256 = entityKind, _b179) {
+    __publicField(MySqlDateTimeBuilder, _a263, "MySqlDateTimeBuilder");
+    MySqlDateTime = class extends (_b187 = MySqlColumn, _a264 = entityKind, _b187) {
       constructor(table6, config) {
         super(table6, config);
         __publicField(this, "fsp");
@@ -36352,8 +36517,8 @@ var init_datetime = __esm({
         return /* @__PURE__ */ new Date(value.replace(" ", "T") + "Z");
       }
     };
-    __publicField(MySqlDateTime, _a256, "MySqlDateTime");
-    MySqlDateTimeStringBuilder = class extends (_b180 = MySqlColumnBuilder, _a257 = entityKind, _b180) {
+    __publicField(MySqlDateTime, _a264, "MySqlDateTime");
+    MySqlDateTimeStringBuilder = class extends (_b188 = MySqlColumnBuilder, _a265 = entityKind, _b188) {
       constructor(name2, config) {
         super(name2, "string", "MySqlDateTimeString");
         this.config.fsp = config?.fsp;
@@ -36366,8 +36531,8 @@ var init_datetime = __esm({
         );
       }
     };
-    __publicField(MySqlDateTimeStringBuilder, _a257, "MySqlDateTimeStringBuilder");
-    MySqlDateTimeString = class extends (_b181 = MySqlColumn, _a258 = entityKind, _b181) {
+    __publicField(MySqlDateTimeStringBuilder, _a265, "MySqlDateTimeStringBuilder");
+    MySqlDateTimeString = class extends (_b189 = MySqlColumn, _a266 = entityKind, _b189) {
       constructor(table6, config) {
         super(table6, config);
         __publicField(this, "fsp");
@@ -36378,23 +36543,24 @@ var init_datetime = __esm({
         return `datetime${precision}`;
       }
     };
-    __publicField(MySqlDateTimeString, _a258, "MySqlDateTimeString");
+    __publicField(MySqlDateTimeString, _a266, "MySqlDateTimeString");
   }
 });
 
 // ../drizzle-orm/dist/mysql-core/columns/decimal.js
 function decimal(a, b = {}) {
   const { name: name2, config } = getColumnNameAndConfig(a, b);
-  return new MySqlDecimalBuilder(name2, config);
+  const mode = config?.mode;
+  return mode === "number" ? new MySqlDecimalNumberBuilder(name2, config) : mode === "bigint" ? new MySqlDecimalBigIntBuilder(name2, config) : new MySqlDecimalBuilder(name2, config);
 }
-var _a259, _b182, MySqlDecimalBuilder, _a260, _b183, MySqlDecimal;
+var _a267, _b190, MySqlDecimalBuilder, _a268, _b191, MySqlDecimal, _a269, _b192, MySqlDecimalNumberBuilder, _a270, _b193, MySqlDecimalNumber, _a271, _b194, MySqlDecimalBigIntBuilder, _a272, _b195, MySqlDecimalBigInt;
 var init_decimal = __esm({
   "../drizzle-orm/dist/mysql-core/columns/decimal.js"() {
     "use strict";
     init_entity();
     init_utils2();
     init_common4();
-    MySqlDecimalBuilder = class extends (_b182 = MySqlColumnBuilderWithAutoIncrement, _a259 = entityKind, _b182) {
+    MySqlDecimalBuilder = class extends (_b190 = MySqlColumnBuilderWithAutoIncrement, _a267 = entityKind, _b190) {
       constructor(name2, config) {
         super(name2, "string", "MySqlDecimal");
         this.config.precision = config?.precision;
@@ -36409,14 +36575,19 @@ var init_decimal = __esm({
         );
       }
     };
-    __publicField(MySqlDecimalBuilder, _a259, "MySqlDecimalBuilder");
-    MySqlDecimal = class extends (_b183 = MySqlColumnWithAutoIncrement, _a260 = entityKind, _b183) {
+    __publicField(MySqlDecimalBuilder, _a267, "MySqlDecimalBuilder");
+    MySqlDecimal = class extends (_b191 = MySqlColumnWithAutoIncrement, _a268 = entityKind, _b191) {
       constructor() {
         super(...arguments);
         __publicField(this, "precision", this.config.precision);
         __publicField(this, "scale", this.config.scale);
         __publicField(this, "unsigned", this.config.unsigned);
       }
+      mapFromDriverValue(value) {
+        if (typeof value === "string")
+          return value;
+        return String(value);
+      }
       getSQLType() {
         let type = "";
         if (this.precision !== void 0 && this.scale !== void 0) {
@@ -36430,7 +36601,89 @@ var init_decimal = __esm({
         return this.unsigned ? `${type} unsigned` : type;
       }
     };
-    __publicField(MySqlDecimal, _a260, "MySqlDecimal");
+    __publicField(MySqlDecimal, _a268, "MySqlDecimal");
+    MySqlDecimalNumberBuilder = class extends (_b192 = MySqlColumnBuilderWithAutoIncrement, _a269 = entityKind, _b192) {
+      constructor(name2, config) {
+        super(name2, "number", "MySqlDecimalNumber");
+        this.config.precision = config?.precision;
+        this.config.scale = config?.scale;
+        this.config.unsigned = config?.unsigned;
+      }
+      /** @internal */
+      build(table6) {
+        return new MySqlDecimalNumber(
+          table6,
+          this.config
+        );
+      }
+    };
+    __publicField(MySqlDecimalNumberBuilder, _a269, "MySqlDecimalNumberBuilder");
+    MySqlDecimalNumber = class extends (_b193 = MySqlColumnWithAutoIncrement, _a270 = entityKind, _b193) {
+      constructor() {
+        super(...arguments);
+        __publicField(this, "precision", this.config.precision);
+        __publicField(this, "scale", this.config.scale);
+        __publicField(this, "unsigned", this.config.unsigned);
+        __publicField(this, "mapToDriverValue", String);
+      }
+      mapFromDriverValue(value) {
+        if (typeof value === "number")
+          return value;
+        return Number(value);
+      }
+      getSQLType() {
+        let type = "";
+        if (this.precision !== void 0 && this.scale !== void 0) {
+          type += `decimal(${this.precision},${this.scale})`;
+        } else if (this.precision === void 0) {
+          type += "decimal";
+        } else {
+          type += `decimal(${this.precision})`;
+        }
+        type = type === "decimal(10,0)" || type === "decimal(10)" ? "decimal" : type;
+        return this.unsigned ? `${type} unsigned` : type;
+      }
+    };
+    __publicField(MySqlDecimalNumber, _a270, "MySqlDecimalNumber");
+    MySqlDecimalBigIntBuilder = class extends (_b194 = MySqlColumnBuilderWithAutoIncrement, _a271 = entityKind, _b194) {
+      constructor(name2, config) {
+        super(name2, "bigint", "MySqlDecimalBigInt");
+        this.config.precision = config?.precision;
+        this.config.scale = config?.scale;
+        this.config.unsigned = config?.unsigned;
+      }
+      /** @internal */
+      build(table6) {
+        return new MySqlDecimalBigInt(
+          table6,
+          this.config
+        );
+      }
+    };
+    __publicField(MySqlDecimalBigIntBuilder, _a271, "MySqlDecimalBigIntBuilder");
+    MySqlDecimalBigInt = class extends (_b195 = MySqlColumnWithAutoIncrement, _a272 = entityKind, _b195) {
+      constructor() {
+        super(...arguments);
+        __publicField(this, "precision", this.config.precision);
+        __publicField(this, "scale", this.config.scale);
+        __publicField(this, "unsigned", this.config.unsigned);
+        __publicField(this, "mapFromDriverValue", BigInt);
+        __publicField(this, "mapToDriverValue", String);
+      }
+      getSQLType() {
+        let type = "";
+        if (this.precision !== void 0 && this.scale !== void 0) {
+          type += `decimal(${this.precision},${this.scale})`;
+        } else if (this.precision === void 0) {
+          type += "decimal";
+        } else {
+          type += `decimal(${this.precision})`;
+        }
+        type = type === "decimal(10,0)" || type === "decimal(10)" ? "decimal" : type;
+        return this.unsigned ? `${type} unsigned` : type;
+      }
+    };
+    __publicField(MySqlDecimalBigInt, _a272, "MySqlDecimalBigInt");
   }
 });
 
@@ -36439,14 +36692,14 @@ function double(a, b) {
   const { name: name2, config } = getColumnNameAndConfig(a, b);
   return new MySqlDoubleBuilder(name2, config);
 }
-var _a261, _b184, MySqlDoubleBuilder, _a262, _b185, MySqlDouble;
+var _a273, _b196, MySqlDoubleBuilder, _a274, _b197, MySqlDouble;
 var init_double = __esm({
   "../drizzle-orm/dist/mysql-core/columns/double.js"() {
     "use strict";
     init_entity();
     init_utils2();
     init_common4();
-    MySqlDoubleBuilder = class extends (_b184 = MySqlColumnBuilderWithAutoIncrement, _a261 = entityKind, _b184) {
+    MySqlDoubleBuilder = class extends (_b196 = MySqlColumnBuilderWithAutoIncrement, _a273 = entityKind, _b196) {
       constructor(name2, config) {
         super(name2, "number", "MySqlDouble");
         this.config.precision = config?.precision;
@@ -36458,8 +36711,8 @@ var init_double = __esm({
         return new MySqlDouble(table6, this.config);
       }
     };
-    __publicField(MySqlDoubleBuilder, _a261, "MySqlDoubleBuilder");
-    MySqlDouble = class extends (_b185 = MySqlColumnWithAutoIncrement, _a262 = entityKind, _b185) {
+    __publicField(MySqlDoubleBuilder, _a273, "MySqlDoubleBuilder");
+    MySqlDouble = class extends (_b197 = MySqlColumnWithAutoIncrement, _a274 = entityKind, _b197) {
       constructor() {
         super(...arguments);
         __publicField(this, "precision", this.config.precision);
@@ -36478,7 +36731,7 @@ var init_double = __esm({
         return this.unsigned ? `${type} unsigned` : type;
       }
     };
-    __publicField(MySqlDouble, _a262, "MySqlDouble");
+    __publicField(MySqlDouble, _a274, "MySqlDouble");
   }
 });
 
@@ -36490,14 +36743,14 @@ function mysqlEnum(a, b) {
   }
   return new MySqlEnumColumnBuilder(name2, values);
 }
-var _a263, _b186, MySqlEnumColumnBuilder, _a264, _b187, MySqlEnumColumn;
+var _a275, _b198, MySqlEnumColumnBuilder, _a276, _b199, MySqlEnumColumn;
 var init_enum2 = __esm({
   "../drizzle-orm/dist/mysql-core/columns/enum.js"() {
     "use strict";
     init_entity();
     init_utils2();
     init_common4();
-    MySqlEnumColumnBuilder = class extends (_b186 = MySqlColumnBuilder, _a263 = entityKind, _b186) {
+    MySqlEnumColumnBuilder = class extends (_b198 = MySqlColumnBuilder, _a275 = entityKind, _b198) {
       constructor(name2, values) {
         super(name2, "string", "MySqlEnumColumn");
         this.config.enumValues = values;
@@ -36510,8 +36763,8 @@ var init_enum2 = __esm({
         );
       }
     };
-    __publicField(MySqlEnumColumnBuilder, _a263, "MySqlEnumColumnBuilder");
-    MySqlEnumColumn = class extends (_b187 = MySqlColumn, _a264 = entityKind, _b187) {
+    __publicField(MySqlEnumColumnBuilder, _a275, "MySqlEnumColumnBuilder");
+    MySqlEnumColumn = class extends (_b199 = MySqlColumn, _a276 = entityKind, _b199) {
       constructor() {
         super(...arguments);
         __publicField(this, "enumValues", this.config.enumValues);
@@ -36520,7 +36773,7 @@ var init_enum2 = __esm({
         return `enum(${this.enumValues.map((value) => `'${value}'`).join(",")})`;
       }
     };
-    __publicField(MySqlEnumColumn, _a264, "MySqlEnumColumn");
+    __publicField(MySqlEnumColumn, _a276, "MySqlEnumColumn");
   }
 });
 
@@ -36529,14 +36782,14 @@ function float(a, b) {
   const { name: name2, config } = getColumnNameAndConfig(a, b);
   return new MySqlFloatBuilder(name2, config);
 }
-var _a265, _b188, MySqlFloatBuilder, _a266, _b189, MySqlFloat;
+var _a277, _b200, MySqlFloatBuilder, _a278, _b201, MySqlFloat;
 var init_float = __esm({
   "../drizzle-orm/dist/mysql-core/columns/float.js"() {
     "use strict";
     init_entity();
     init_utils2();
     init_common4();
-    MySqlFloatBuilder = class extends (_b188 = MySqlColumnBuilderWithAutoIncrement, _a265 = entityKind, _b188) {
+    MySqlFloatBuilder = class extends (_b200 = MySqlColumnBuilderWithAutoIncrement, _a277 = entityKind, _b200) {
       constructor(name2, config) {
         super(name2, "number", "MySqlFloat");
         this.config.precision = config?.precision;
@@ -36548,8 +36801,8 @@ var init_float = __esm({
         return new MySqlFloat(table6, this.config);
       }
     };
-    __publicField(MySqlFloatBuilder, _a265, "MySqlFloatBuilder");
-    MySqlFloat = class extends (_b189 = MySqlColumnWithAutoIncrement, _a266 = entityKind, _b189) {
+    __publicField(MySqlFloatBuilder, _a277, "MySqlFloatBuilder");
+    MySqlFloat = class extends (_b201 = MySqlColumnWithAutoIncrement, _a278 = entityKind, _b201) {
       constructor() {
         super(...arguments);
         __publicField(this, "precision", this.config.precision);
@@ -36568,7 +36821,7 @@ var init_float = __esm({
         return this.unsigned ? `${type} unsigned` : type;
       }
     };
-    __publicField(MySqlFloat, _a266, "MySqlFloat");
+    __publicField(MySqlFloat, _a278, "MySqlFloat");
   }
 });
 
@@ -36577,14 +36830,14 @@ function int(a, b) {
   const { name: name2, config } = getColumnNameAndConfig(a, b);
   return new MySqlIntBuilder(name2, config);
 }
-var _a267, _b190, MySqlIntBuilder, _a268, _b191, MySqlInt;
+var _a279, _b202, MySqlIntBuilder, _a280, _b203, MySqlInt;
 var init_int = __esm({
   "../drizzle-orm/dist/mysql-core/columns/int.js"() {
     "use strict";
     init_entity();
     init_utils2();
     init_common4();
-    MySqlIntBuilder = class extends (_b190 = MySqlColumnBuilderWithAutoIncrement, _a267 = entityKind, _b190) {
+    MySqlIntBuilder = class extends (_b202 = MySqlColumnBuilderWithAutoIncrement, _a279 = entityKind, _b202) {
       constructor(name2, config) {
         super(name2, "number", "MySqlInt");
         this.config.unsigned = config ? config.unsigned : false;
@@ -36594,8 +36847,8 @@ var init_int = __esm({
         return new MySqlInt(table6, this.config);
       }
     };
-    __publicField(MySqlIntBuilder, _a267, "MySqlIntBuilder");
-    MySqlInt = class extends (_b191 = MySqlColumnWithAutoIncrement, _a268 = entityKind, _b191) {
+    __publicField(MySqlIntBuilder, _a279, "MySqlIntBuilder");
+    MySqlInt = class extends (_b203 = MySqlColumnWithAutoIncrement, _a280 = entityKind, _b203) {
       getSQLType() {
         return `int${this.config.unsigned ? " unsigned" : ""}`;
       }
@@ -36606,7 +36859,7 @@ var init_int = __esm({
         return value;
       }
     };
-    __publicField(MySqlInt, _a268, "MySqlInt");
+    __publicField(MySqlInt, _a280, "MySqlInt");
   }
 });
 
@@ -36614,13 +36867,13 @@ var init_int = __esm({
 function json2(name2) {
   return new MySqlJsonBuilder(name2 ?? "");
 }
-var _a269, _b192, MySqlJsonBuilder, _a270, _b193, MySqlJson;
+var _a281, _b204, MySqlJsonBuilder, _a282, _b205, MySqlJson;
 var init_json2 = __esm({
   "../drizzle-orm/dist/mysql-core/columns/json.js"() {
     "use strict";
     init_entity();
     init_common4();
-    MySqlJsonBuilder = class extends (_b192 = MySqlColumnBuilder, _a269 = entityKind, _b192) {
+    MySqlJsonBuilder = class extends (_b204 = MySqlColumnBuilder, _a281 = entityKind, _b204) {
       constructor(name2) {
         super(name2, "json", "MySqlJson");
       }
@@ -36629,8 +36882,8 @@ var init_json2 = __esm({
         return new MySqlJson(table6, this.config);
       }
     };
-    __publicField(MySqlJsonBuilder, _a269, "MySqlJsonBuilder");
-    MySqlJson = class extends (_b193 = MySqlColumn, _a270 = entityKind, _b193) {
+    __publicField(MySqlJsonBuilder, _a281, "MySqlJsonBuilder");
+    MySqlJson = class extends (_b205 = MySqlColumn, _a282 = entityKind, _b205) {
       getSQLType() {
         return "json";
       }
@@ -36638,7 +36891,7 @@ var init_json2 = __esm({
         return JSON.stringify(value);
       }
     };
-    __publicField(MySqlJson, _a270, "MySqlJson");
+    __publicField(MySqlJson, _a282, "MySqlJson");
   }
 });
 
@@ -36647,14 +36900,14 @@ function mediumint(a, b) {
   const { name: name2, config } = getColumnNameAndConfig(a, b);
   return new MySqlMediumIntBuilder(name2, config);
 }
-var _a271, _b194, MySqlMediumIntBuilder, _a272, _b195, MySqlMediumInt;
+var _a283, _b206, MySqlMediumIntBuilder, _a284, _b207, MySqlMediumInt;
 var init_mediumint = __esm({
   "../drizzle-orm/dist/mysql-core/columns/mediumint.js"() {
     "use strict";
     init_entity();
     init_utils2();
     init_common4();
-    MySqlMediumIntBuilder = class extends (_b194 = MySqlColumnBuilderWithAutoIncrement, _a271 = entityKind, _b194) {
+    MySqlMediumIntBuilder = class extends (_b206 = MySqlColumnBuilderWithAutoIncrement, _a283 = entityKind, _b206) {
       constructor(name2, config) {
         super(name2, "number", "MySqlMediumInt");
         this.config.unsigned = config ? config.unsigned : false;
@@ -36667,8 +36920,8 @@ var init_mediumint = __esm({
         );
       }
     };
-    __publicField(MySqlMediumIntBuilder, _a271, "MySqlMediumIntBuilder");
-    MySqlMediumInt = class extends (_b195 = MySqlColumnWithAutoIncrement, _a272 = entityKind, _b195) {
+    __publicField(MySqlMediumIntBuilder, _a283, "MySqlMediumIntBuilder");
+    MySqlMediumInt = class extends (_b207 = MySqlColumnWithAutoIncrement, _a284 = entityKind, _b207) {
       getSQLType() {
         return `mediumint${this.config.unsigned ? " unsigned" : ""}`;
       }
@@ -36679,7 +36932,7 @@ var init_mediumint = __esm({
         return value;
       }
     };
-    __publicField(MySqlMediumInt, _a272, "MySqlMediumInt");
+    __publicField(MySqlMediumInt, _a284, "MySqlMediumInt");
   }
 });
 
@@ -36688,14 +36941,14 @@ function real3(a, b = {}) {
   const { name: name2, config } = getColumnNameAndConfig(a, b);
   return new MySqlRealBuilder(name2, config);
 }
-var _a273, _b196, MySqlRealBuilder, _a274, _b197, MySqlReal;
+var _a285, _b208, MySqlRealBuilder, _a286, _b209, MySqlReal;
 var init_real3 = __esm({
   "../drizzle-orm/dist/mysql-core/columns/real.js"() {
     "use strict";
     init_entity();
     init_utils2();
     init_common4();
-    MySqlRealBuilder = class extends (_b196 = MySqlColumnBuilderWithAutoIncrement, _a273 = entityKind, _b196) {
+    MySqlRealBuilder = class extends (_b208 = MySqlColumnBuilderWithAutoIncrement, _a285 = entityKind, _b208) {
       constructor(name2, config) {
         super(name2, "number", "MySqlReal");
         this.config.precision = config?.precision;
@@ -36706,8 +36959,8 @@ var init_real3 = __esm({
         return new MySqlReal(table6, this.config);
       }
     };
-    __publicField(MySqlRealBuilder, _a273, "MySqlRealBuilder");
-    MySqlReal = class extends (_b197 = MySqlColumnWithAutoIncrement, _a274 = entityKind, _b197) {
+    __publicField(MySqlRealBuilder, _a285, "MySqlRealBuilder");
+    MySqlReal = class extends (_b209 = MySqlColumnWithAutoIncrement, _a286 = entityKind, _b209) {
       constructor() {
         super(...arguments);
         __publicField(this, "precision", this.config.precision);
@@ -36723,7 +36976,7 @@ var init_real3 = __esm({
         }
       }
     };
-    __publicField(MySqlReal, _a274, "MySqlReal");
+    __publicField(MySqlReal, _a286, "MySqlReal");
   }
 });
 
@@ -36731,13 +36984,13 @@ var init_real3 = __esm({
 function serial2(name2) {
   return new MySqlSerialBuilder(name2 ?? "");
 }
-var _a275, _b198, MySqlSerialBuilder, _a276, _b199, MySqlSerial;
+var _a287, _b210, MySqlSerialBuilder, _a288, _b211, MySqlSerial;
 var init_serial2 = __esm({
   "../drizzle-orm/dist/mysql-core/columns/serial.js"() {
     "use strict";
     init_entity();
     init_common4();
-    MySqlSerialBuilder = class extends (_b198 = MySqlColumnBuilderWithAutoIncrement, _a275 = entityKind, _b198) {
+    MySqlSerialBuilder = class extends (_b210 = MySqlColumnBuilderWithAutoIncrement, _a287 = entityKind, _b210) {
       constructor(name2) {
         super(name2, "number", "MySqlSerial");
         this.config.hasDefault = true;
@@ -36748,8 +37001,8 @@ var init_serial2 = __esm({
         return new MySqlSerial(table6, this.config);
       }
     };
-    __publicField(MySqlSerialBuilder, _a275, "MySqlSerialBuilder");
-    MySqlSerial = class extends (_b199 = MySqlColumnWithAutoIncrement, _a276 = entityKind, _b199) {
+    __publicField(MySqlSerialBuilder, _a287, "MySqlSerialBuilder");
+    MySqlSerial = class extends (_b211 = MySqlColumnWithAutoIncrement, _a288 = entityKind, _b211) {
       getSQLType() {
         return "serial";
       }
@@ -36760,7 +37013,7 @@ var init_serial2 = __esm({
         return value;
       }
     };
-    __publicField(MySqlSerial, _a276, "MySqlSerial");
+    __publicField(MySqlSerial, _a288, "MySqlSerial");
   }
 });
 
@@ -36769,14 +37022,14 @@ function smallint2(a, b) {
   const { name: name2, config } = getColumnNameAndConfig(a, b);
   return new MySqlSmallIntBuilder(name2, config);
 }
-var _a277, _b200, MySqlSmallIntBuilder, _a278, _b201, MySqlSmallInt;
+var _a289, _b212, MySqlSmallIntBuilder, _a290, _b213, MySqlSmallInt;
 var init_smallint2 = __esm({
   "../drizzle-orm/dist/mysql-core/columns/smallint.js"() {
     "use strict";
     init_entity();
     init_utils2();
     init_common4();
-    MySqlSmallIntBuilder = class extends (_b200 = MySqlColumnBuilderWithAutoIncrement, _a277 = entityKind, _b200) {
+    MySqlSmallIntBuilder = class extends (_b212 = MySqlColumnBuilderWithAutoIncrement, _a289 = entityKind, _b212) {
       constructor(name2, config) {
         super(name2, "number", "MySqlSmallInt");
         this.config.unsigned = config ? config.unsigned : false;
@@ -36789,8 +37042,8 @@ var init_smallint2 = __esm({
         );
       }
     };
-    __publicField(MySqlSmallIntBuilder, _a277, "MySqlSmallIntBuilder");
-    MySqlSmallInt = class extends (_b201 = MySqlColumnWithAutoIncrement, _a278 = entityKind, _b201) {
+    __publicField(MySqlSmallIntBuilder, _a289, "MySqlSmallIntBuilder");
+    MySqlSmallInt = class extends (_b213 = MySqlColumnWithAutoIncrement, _a290 = entityKind, _b213) {
       getSQLType() {
         return `smallint${this.config.unsigned ? " unsigned" : ""}`;
       }
@@ -36801,7 +37054,7 @@ var init_smallint2 = __esm({
         return value;
       }
     };
-    __publicField(MySqlSmallInt, _a278, "MySqlSmallInt");
+    __publicField(MySqlSmallInt, _a290, "MySqlSmallInt");
   }
 });
 
@@ -36822,14 +37075,14 @@ function longtext(a, b = {}) {
   const { name: name2, config } = getColumnNameAndConfig(a, b);
   return new MySqlTextBuilder(name2, "longtext", config);
 }
-var _a279, _b202, MySqlTextBuilder, _a280, _b203, MySqlText;
+var _a291, _b214, MySqlTextBuilder, _a292, _b215, MySqlText;
 var init_text3 = __esm({
   "../drizzle-orm/dist/mysql-core/columns/text.js"() {
     "use strict";
     init_entity();
     init_utils2();
     init_common4();
-    MySqlTextBuilder = class extends (_b202 = MySqlColumnBuilder, _a279 = entityKind, _b202) {
+    MySqlTextBuilder = class extends (_b214 = MySqlColumnBuilder, _a291 = entityKind, _b214) {
       constructor(name2, textType, config) {
         super(name2, "string", "MySqlText");
         this.config.textType = textType;
@@ -36840,8 +37093,8 @@ var init_text3 = __esm({
         return new MySqlText(table6, this.config);
       }
     };
-    __publicField(MySqlTextBuilder, _a279, "MySqlTextBuilder");
-    MySqlText = class extends (_b203 = MySqlColumn, _a280 = entityKind, _b203) {
+    __publicField(MySqlTextBuilder, _a291, "MySqlTextBuilder");
+    MySqlText = class extends (_b215 = MySqlColumn, _a292 = entityKind, _b215) {
       constructor() {
         super(...arguments);
         __publicField(this, "textType", this.config.textType);
@@ -36851,7 +37104,7 @@ var init_text3 = __esm({
         return this.textType;
       }
     };
-    __publicField(MySqlText, _a280, "MySqlText");
+    __publicField(MySqlText, _a292, "MySqlText");
   }
 });
 
@@ -36860,14 +37113,14 @@ function time2(a, b) {
   const { name: name2, config } = getColumnNameAndConfig(a, b);
   return new MySqlTimeBuilder(name2, config);
 }
-var _a281, _b204, MySqlTimeBuilder, _a282, _b205, MySqlTime;
+var _a293, _b216, MySqlTimeBuilder, _a294, _b217, MySqlTime;
 var init_time2 = __esm({
   "../drizzle-orm/dist/mysql-core/columns/time.js"() {
     "use strict";
     init_entity();
     init_utils2();
     init_common4();
-    MySqlTimeBuilder = class extends (_b204 = MySqlColumnBuilder, _a281 = entityKind, _b204) {
+    MySqlTimeBuilder = class extends (_b216 = MySqlColumnBuilder, _a293 = entityKind, _b216) {
       constructor(name2, config) {
         super(name2, "string", "MySqlTime");
         this.config.fsp = config?.fsp;
@@ -36877,8 +37130,8 @@ var init_time2 = __esm({
         return new MySqlTime(table6, this.config);
       }
     };
-    __publicField(MySqlTimeBuilder, _a281, "MySqlTimeBuilder");
-    MySqlTime = class extends (_b205 = MySqlColumn, _a282 = entityKind, _b205) {
+    __publicField(MySqlTimeBuilder, _a293, "MySqlTimeBuilder");
+    MySqlTime = class extends (_b217 = MySqlColumn, _a294 = entityKind, _b217) {
       constructor() {
         super(...arguments);
         __publicField(this, "fsp", this.config.fsp);
@@ -36888,19 +37141,19 @@ var init_time2 = __esm({
         return `time${precision}`;
       }
     };
-    __publicField(MySqlTime, _a282, "MySqlTime");
+    __publicField(MySqlTime, _a294, "MySqlTime");
   }
 });
 
 // ../drizzle-orm/dist/mysql-core/columns/date.common.js
-var _a283, _b206, MySqlDateColumnBaseBuilder, _a284, _b207, MySqlDateBaseColumn;
+var _a295, _b218, MySqlDateColumnBaseBuilder, _a296, _b219, MySqlDateBaseColumn;
 var init_date_common2 = __esm({
   "../drizzle-orm/dist/mysql-core/columns/date.common.js"() {
     "use strict";
     init_entity();
     init_sql();
     init_common4();
-    MySqlDateColumnBaseBuilder = class extends (_b206 = MySqlColumnBuilder, _a283 = entityKind, _b206) {
+    MySqlDateColumnBaseBuilder = class extends (_b218 = MySqlColumnBuilder, _a295 = entityKind, _b218) {
       defaultNow() {
         return this.default(sql`(now())`);
       }
@@ -36911,14 +37164,14 @@ var init_date_common2 = __esm({
         return this;
       }
     };
-    __publicField(MySqlDateColumnBaseBuilder, _a283, "MySqlDateColumnBuilder");
-    MySqlDateBaseColumn = class extends (_b207 = MySqlColumn, _a284 = entityKind, _b207) {
+    __publicField(MySqlDateColumnBaseBuilder, _a295, "MySqlDateColumnBuilder");
+    MySqlDateBaseColumn = class extends (_b219 = MySqlColumn, _a296 = entityKind, _b219) {
       constructor() {
         super(...arguments);
         __publicField(this, "hasOnUpdateNow", this.config.hasOnUpdateNow);
       }
     };
-    __publicField(MySqlDateBaseColumn, _a284, "MySqlDateColumn");
+    __publicField(MySqlDateBaseColumn, _a296, "MySqlDateColumn");
   }
 });
 
@@ -36930,14 +37183,14 @@ function timestamp2(a, b = {}) {
   }
   return new MySqlTimestampBuilder(name2, config);
 }
-var _a285, _b208, MySqlTimestampBuilder, _a286, _b209, MySqlTimestamp, _a287, _b210, MySqlTimestampStringBuilder, _a288, _b211, MySqlTimestampString;
+var _a297, _b220, MySqlTimestampBuilder, _a298, _b221, MySqlTimestamp, _a299, _b222, MySqlTimestampStringBuilder, _a300, _b223, MySqlTimestampString;
 var init_timestamp2 = __esm({
   "../drizzle-orm/dist/mysql-core/columns/timestamp.js"() {
     "use strict";
     init_entity();
     init_utils2();
     init_date_common2();
-    MySqlTimestampBuilder = class extends (_b208 = MySqlDateColumnBaseBuilder, _a285 = entityKind, _b208) {
+    MySqlTimestampBuilder = class extends (_b220 = MySqlDateColumnBaseBuilder, _a297 = entityKind, _b220) {
       constructor(name2, config) {
         super(name2, "date", "MySqlTimestamp");
         this.config.fsp = config?.fsp;
@@ -36950,8 +37203,8 @@ var init_timestamp2 = __esm({
         );
       }
     };
-    __publicField(MySqlTimestampBuilder, _a285, "MySqlTimestampBuilder");
-    MySqlTimestamp = class extends (_b209 = MySqlDateBaseColumn, _a286 = entityKind, _b209) {
+    __publicField(MySqlTimestampBuilder, _a297, "MySqlTimestampBuilder");
+    MySqlTimestamp = class extends (_b221 = MySqlDateBaseColumn, _a298 = entityKind, _b221) {
       constructor() {
         super(...arguments);
         __publicField(this, "fsp", this.config.fsp);
@@ -36967,8 +37220,8 @@ var init_timestamp2 = __esm({
         return value.toISOString().slice(0, -1).replace("T", " ");
       }
     };
-    __publicField(MySqlTimestamp, _a286, "MySqlTimestamp");
-    MySqlTimestampStringBuilder = class extends (_b210 = MySqlDateColumnBaseBuilder, _a287 = entityKind, _b210) {
+    __publicField(MySqlTimestamp, _a298, "MySqlTimestamp");
+    MySqlTimestampStringBuilder = class extends (_b222 = MySqlDateColumnBaseBuilder, _a299 = entityKind, _b222) {
       constructor(name2, config) {
         super(name2, "string", "MySqlTimestampString");
         this.config.fsp = config?.fsp;
@@ -36981,8 +37234,8 @@ var init_timestamp2 = __esm({
         );
       }
     };
-    __publicField(MySqlTimestampStringBuilder, _a287, "MySqlTimestampStringBuilder");
-    MySqlTimestampString = class extends (_b211 = MySqlDateBaseColumn, _a288 = entityKind, _b211) {
+    __publicField(MySqlTimestampStringBuilder, _a299, "MySqlTimestampStringBuilder");
+    MySqlTimestampString = class extends (_b223 = MySqlDateBaseColumn, _a300 = entityKind, _b223) {
       constructor() {
         super(...arguments);
         __publicField(this, "fsp", this.config.fsp);
@@ -36992,7 +37245,7 @@ var init_timestamp2 = __esm({
         return `timestamp${precision}`;
       }
     };
-    __publicField(MySqlTimestampString, _a288, "MySqlTimestampString");
+    __publicField(MySqlTimestampString, _a300, "MySqlTimestampString");
   }
 });
 
@@ -37001,14 +37254,14 @@ function tinyint(a, b) {
   const { name: name2, config } = getColumnNameAndConfig(a, b);
   return new MySqlTinyIntBuilder(name2, config);
 }
-var _a289, _b212, MySqlTinyIntBuilder, _a290, _b213, MySqlTinyInt;
+var _a301, _b224, MySqlTinyIntBuilder, _a302, _b225, MySqlTinyInt;
 var init_tinyint = __esm({
   "../drizzle-orm/dist/mysql-core/columns/tinyint.js"() {
     "use strict";
     init_entity();
     init_utils2();
     init_common4();
-    MySqlTinyIntBuilder = class extends (_b212 = MySqlColumnBuilderWithAutoIncrement, _a289 = entityKind, _b212) {
+    MySqlTinyIntBuilder = class extends (_b224 = MySqlColumnBuilderWithAutoIncrement, _a301 = entityKind, _b224) {
       constructor(name2, config) {
         super(name2, "number", "MySqlTinyInt");
         this.config.unsigned = config ? config.unsigned : false;
@@ -37021,8 +37274,8 @@ var init_tinyint = __esm({
         );
       }
     };
-    __publicField(MySqlTinyIntBuilder, _a289, "MySqlTinyIntBuilder");
-    MySqlTinyInt = class extends (_b213 = MySqlColumnWithAutoIncrement, _a290 = entityKind, _b213) {
+    __publicField(MySqlTinyIntBuilder, _a301, "MySqlTinyIntBuilder");
+    MySqlTinyInt = class extends (_b225 = MySqlColumnWithAutoIncrement, _a302 = entityKind, _b225) {
       getSQLType() {
         return `tinyint${this.config.unsigned ? " unsigned" : ""}`;
       }
@@ -37033,7 +37286,7 @@ var init_tinyint = __esm({
         return value;
       }
     };
-    __publicField(MySqlTinyInt, _a290, "MySqlTinyInt");
+    __publicField(MySqlTinyInt, _a302, "MySqlTinyInt");
   }
 });
 
@@ -37042,14 +37295,14 @@ function varbinary(a, b) {
   const { name: name2, config } = getColumnNameAndConfig(a, b);
   return new MySqlVarBinaryBuilder(name2, config);
 }
-var _a291, _b214, MySqlVarBinaryBuilder, _a292, _b215, MySqlVarBinary;
+var _a303, _b226, MySqlVarBinaryBuilder, _a304, _b227, MySqlVarBinary;
 var init_varbinary = __esm({
   "../drizzle-orm/dist/mysql-core/columns/varbinary.js"() {
     "use strict";
     init_entity();
     init_utils2();
     init_common4();
-    MySqlVarBinaryBuilder = class extends (_b214 = MySqlColumnBuilder, _a291 = entityKind, _b214) {
+    MySqlVarBinaryBuilder = class extends (_b226 = MySqlColumnBuilder, _a303 = entityKind, _b226) {
       /** @internal */
       constructor(name2, config) {
         super(name2, "string", "MySqlVarBinary");
@@ -37063,17 +37316,28 @@ var init_varbinary = __esm({
         );
       }
     };
-    __publicField(MySqlVarBinaryBuilder, _a291, "MySqlVarBinaryBuilder");
-    MySqlVarBinary = class extends (_b215 = MySqlColumn, _a292 = entityKind, _b215) {
+    __publicField(MySqlVarBinaryBuilder, _a303, "MySqlVarBinaryBuilder");
+    MySqlVarBinary = class extends (_b227 = MySqlColumn, _a304 = entityKind, _b227) {
       constructor() {
         super(...arguments);
         __publicField(this, "length", this.config.length);
       }
+      mapFromDriverValue(value) {
+        if (typeof value === "string")
+          return value;
+        if (Buffer.isBuffer(value))
+          return value.toString();
+        const str = [];
+        for (const v of value) {
+          str.push(v === 49 ? "1" : "0");
+        }
+        return str.join("");
+      }
       getSQLType() {
         return this.length === void 0 ? `varbinary` : `varbinary(${this.length})`;
       }
     };
-    __publicField(MySqlVarBinary, _a292, "MySqlVarBinary");
+    __publicField(MySqlVarBinary, _a304, "MySqlVarBinary");
   }
 });
 
@@ -37082,14 +37346,14 @@ function varchar2(a, b) {
   const { name: name2, config } = getColumnNameAndConfig(a, b);
   return new MySqlVarCharBuilder(name2, config);
 }
-var _a293, _b216, MySqlVarCharBuilder, _a294, _b217, MySqlVarChar;
+var _a305, _b228, MySqlVarCharBuilder, _a306, _b229, MySqlVarChar;
 var init_varchar2 = __esm({
   "../drizzle-orm/dist/mysql-core/columns/varchar.js"() {
     "use strict";
     init_entity();
     init_utils2();
     init_common4();
-    MySqlVarCharBuilder = class extends (_b216 = MySqlColumnBuilder, _a293 = entityKind, _b216) {
+    MySqlVarCharBuilder = class extends (_b228 = MySqlColumnBuilder, _a305 = entityKind, _b228) {
       /** @internal */
       constructor(name2, config) {
         super(name2, "string", "MySqlVarChar");
@@ -37104,8 +37368,8 @@ var init_varchar2 = __esm({
         );
       }
     };
-    __publicField(MySqlVarCharBuilder, _a293, "MySqlVarCharBuilder");
-    MySqlVarChar = class extends (_b217 = MySqlColumn, _a294 = entityKind, _b217) {
+    __publicField(MySqlVarCharBuilder, _a305, "MySqlVarCharBuilder");
+    MySqlVarChar = class extends (_b229 = MySqlColumn, _a306 = entityKind, _b229) {
       constructor() {
         super(...arguments);
         __publicField(this, "length", this.config.length);
@@ -37115,7 +37379,7 @@ var init_varchar2 = __esm({
         return this.length === void 0 ? `varchar` : `varchar(${this.length})`;
       }
     };
-    __publicField(MySqlVarChar, _a294, "MySqlVarChar");
+    __publicField(MySqlVarChar, _a306, "MySqlVarChar");
   }
 });
 
@@ -37123,13 +37387,13 @@ var init_varchar2 = __esm({
 function year(name2) {
   return new MySqlYearBuilder(name2 ?? "");
 }
-var _a295, _b218, MySqlYearBuilder, _a296, _b219, MySqlYear;
+var _a307, _b230, MySqlYearBuilder, _a308, _b231, MySqlYear;
 var init_year = __esm({
   "../drizzle-orm/dist/mysql-core/columns/year.js"() {
     "use strict";
     init_entity();
     init_common4();
-    MySqlYearBuilder = class extends (_b218 = MySqlColumnBuilder, _a295 = entityKind, _b218) {
+    MySqlYearBuilder = class extends (_b230 = MySqlColumnBuilder, _a307 = entityKind, _b230) {
       constructor(name2) {
         super(name2, "number", "MySqlYear");
       }
@@ -37138,13 +37402,13 @@ var init_year = __esm({
         return new MySqlYear(table6, this.config);
       }
     };
-    __publicField(MySqlYearBuilder, _a295, "MySqlYearBuilder");
-    MySqlYear = class extends (_b219 = MySqlColumn, _a296 = entityKind, _b219) {
+    __publicField(MySqlYearBuilder, _a307, "MySqlYearBuilder");
+    MySqlYear = class extends (_b231 = MySqlColumn, _a308 = entityKind, _b231) {
       getSQLType() {
         return `year`;
       }
     };
-    __publicField(MySqlYear, _a296, "MySqlYear");
+    __publicField(MySqlYear, _a308, "MySqlYear");
   }
 });
 
@@ -37181,17 +37445,17 @@ var init_columns3 = __esm({
 });
 
 // ../drizzle-orm/dist/mysql-core/query-builders/count.js
-var _a297, _b220, _c9, _MySqlCountBuilder, MySqlCountBuilder;
+var _a309, _b232, _c9, _MySqlCountBuilder, MySqlCountBuilder;
 var init_count3 = __esm({
   "../drizzle-orm/dist/mysql-core/query-builders/count.js"() {
     "use strict";
     init_entity();
     init_sql();
-    _MySqlCountBuilder = class _MySqlCountBuilder extends (_c9 = SQL, _b220 = entityKind, _a297 = Symbol.toStringTag, _c9) {
+    _MySqlCountBuilder = class _MySqlCountBuilder extends (_c9 = SQL, _b232 = entityKind, _a309 = Symbol.toStringTag, _c9) {
       constructor(params) {
         super(_MySqlCountBuilder.buildEmbeddedCount(params.source, params.filters).queryChunks);
         __publicField(this, "sql");
-        __publicField(this, _a297, "MySqlCountBuilder");
+        __publicField(this, _a309, "MySqlCountBuilder");
         __publicField(this, "session");
         this.params = params;
         this.mapWith(Number);
@@ -37229,13 +37493,13 @@ var init_count3 = __esm({
         );
       }
     };
-    __publicField(_MySqlCountBuilder, _b220, "MySqlCountBuilder");
+    __publicField(_MySqlCountBuilder, _b232, "MySqlCountBuilder");
     MySqlCountBuilder = _MySqlCountBuilder;
   }
 });
 
 // ../drizzle-orm/dist/mysql-core/query-builders/delete.js
-var _a298, _b221, MySqlDeleteBase;
+var _a310, _b233, MySqlDeleteBase;
 var init_delete3 = __esm({
   "../drizzle-orm/dist/mysql-core/query-builders/delete.js"() {
     "use strict";
@@ -37243,7 +37507,7 @@ var init_delete3 = __esm({
     init_query_promise();
     init_selection_proxy();
     init_table();
-    MySqlDeleteBase = class extends (_b221 = QueryPromise, _a298 = entityKind, _b221) {
+    MySqlDeleteBase = class extends (_b233 = QueryPromise, _a310 = entityKind, _b233) {
       constructor(table6, session, dialect6, withList) {
         super();
         __publicField(this, "config");
@@ -37333,7 +37597,7 @@ var init_delete3 = __esm({
         return this;
       }
     };
-    __publicField(MySqlDeleteBase, _a298, "MySqlDelete");
+    __publicField(MySqlDeleteBase, _a310, "MySqlDelete");
   }
 });
 
@@ -37420,7 +37684,7 @@ function mysqlTableWithSchema(name2, columns, extraConfig, schema5, baseName = n
   }
   return table6;
 }
-var InlineForeignKeys3, _a299, _b222, _c10, _d4, _e4, MySqlTable, mysqlTable;
+var InlineForeignKeys3, _a311, _b234, _c10, _d4, _e4, MySqlTable, mysqlTable;
 var init_table4 = __esm({
   "../drizzle-orm/dist/mysql-core/table.js"() {
     "use strict";
@@ -37428,15 +37692,15 @@ var init_table4 = __esm({
     init_table();
     init_all3();
     InlineForeignKeys3 = Symbol.for("drizzle:MySqlInlineForeignKeys");
-    MySqlTable = class extends (_e4 = Table2, _d4 = entityKind, _c10 = Table2.Symbol.Columns, _b222 = InlineForeignKeys3, _a299 = Table2.Symbol.ExtraConfigBuilder, _e4) {
+    MySqlTable = class extends (_e4 = Table2, _d4 = entityKind, _c10 = Table2.Symbol.Columns, _b234 = InlineForeignKeys3, _a311 = Table2.Symbol.ExtraConfigBuilder, _e4) {
       constructor() {
         super(...arguments);
         /** @internal */
         __publicField(this, _c10);
         /** @internal */
-        __publicField(this, _b222, []);
+        __publicField(this, _b234, []);
         /** @internal */
-        __publicField(this, _a299);
+        __publicField(this, _a311);
       }
     };
     __publicField(MySqlTable, _d4, "MySqlTable");
@@ -37451,20 +37715,20 @@ var init_table4 = __esm({
 });
 
 // ../drizzle-orm/dist/mysql-core/view-base.js
-var _a300, _b223, MySqlViewBase;
+var _a312, _b235, MySqlViewBase;
 var init_view_base3 = __esm({
   "../drizzle-orm/dist/mysql-core/view-base.js"() {
     "use strict";
     init_entity();
     init_sql();
-    MySqlViewBase = class extends (_b223 = View3, _a300 = entityKind, _b223) {
+    MySqlViewBase = class extends (_b235 = View3, _a312 = entityKind, _b235) {
     };
-    __publicField(MySqlViewBase, _a300, "MySqlViewBase");
+    __publicField(MySqlViewBase, _a312, "MySqlViewBase");
   }
 });
 
 // ../drizzle-orm/dist/mysql-core/dialect.js
-var _a301, MySqlDialect;
+var _a313, MySqlDialect;
 var init_dialect3 = __esm({
   "../drizzle-orm/dist/mysql-core/dialect.js"() {
     "use strict";
@@ -37483,7 +37747,7 @@ var init_dialect3 = __esm({
     init_common4();
     init_table4();
     init_view_base3();
-    _a301 = entityKind;
+    _a313 = entityKind;
     MySqlDialect = class {
       constructor(config) {
         /** @internal */
@@ -37669,8 +37933,8 @@ var init_dialect3 = __esm({
         const distinctSql = distinct ? sql` distinct` : void 0;
         const selection = this.buildSelection(fieldsList, { isSingleTable });
         const tableSql = (() => {
-          if (is(table6, Table2) && table6[Table2.Symbol.OriginalName] !== table6[Table2.Symbol.Name]) {
-            return sql`${sql.identifier(table6[Table2.Symbol.OriginalName])} ${sql.identifier(table6[Table2.Symbol.Name])}`;
+          if (is(table6, Table2) && table6[Table2.Symbol.IsAlias]) {
+            return sql`${sql`${sql.identifier(table6[Table2.Symbol.Schema] ?? "")}.`.if(table6[Table2.Symbol.Schema])}${sql.identifier(table6[Table2.Symbol.OriginalName])} ${sql.identifier(table6[Table2.Symbol.Name])}`;
           }
           return table6;
         })();
@@ -38295,17 +38559,17 @@ var init_dialect3 = __esm({
         };
       }
     };
-    __publicField(MySqlDialect, _a301, "MySqlDialect");
+    __publicField(MySqlDialect, _a313, "MySqlDialect");
   }
 });
 
 // ../drizzle-orm/dist/mysql-core/indexes.js
-var _a302, IndexBuilderOn3, _a303, IndexBuilder3, _a304, Index5;
+var _a314, IndexBuilderOn3, _a315, IndexBuilder3, _a316, Index5;
 var init_indexes3 = __esm({
   "../drizzle-orm/dist/mysql-core/indexes.js"() {
     "use strict";
     init_entity();
-    _a302 = entityKind;
+    _a314 = entityKind;
     IndexBuilderOn3 = class {
       constructor(name2, unique) {
         this.name = name2;
@@ -38315,8 +38579,8 @@ var init_indexes3 = __esm({
         return new IndexBuilder3(this.name, columns, this.unique);
       }
     };
-    __publicField(IndexBuilderOn3, _a302, "MySqlIndexBuilderOn");
-    _a303 = entityKind;
+    __publicField(IndexBuilderOn3, _a314, "MySqlIndexBuilderOn");
+    _a315 = entityKind;
     IndexBuilder3 = class {
       constructor(name2, columns, unique) {
         /** @internal */
@@ -38344,26 +38608,26 @@ var init_indexes3 = __esm({
         return new Index5(this.config, table6);
       }
     };
-    __publicField(IndexBuilder3, _a303, "MySqlIndexBuilder");
-    _a304 = entityKind;
+    __publicField(IndexBuilder3, _a315, "MySqlIndexBuilder");
+    _a316 = entityKind;
     Index5 = class {
       constructor(config, table6) {
         __publicField(this, "config");
         this.config = { ...config, table: table6 };
       }
     };
-    __publicField(Index5, _a304, "MySqlIndex");
+    __publicField(Index5, _a316, "MySqlIndex");
   }
 });
 
 // ../drizzle-orm/dist/mysql-core/primary-keys.js
-var _a305, PrimaryKeyBuilder3, _a306, PrimaryKey3;
+var _a317, PrimaryKeyBuilder3, _a318, PrimaryKey3;
 var init_primary_keys3 = __esm({
   "../drizzle-orm/dist/mysql-core/primary-keys.js"() {
     "use strict";
     init_entity();
     init_table4();
-    _a305 = entityKind;
+    _a317 = entityKind;
     PrimaryKeyBuilder3 = class {
       constructor(columns, name2) {
         /** @internal */
@@ -38378,8 +38642,8 @@ var init_primary_keys3 = __esm({
         return new PrimaryKey3(table6, this.columns, this.name);
       }
     };
-    __publicField(PrimaryKeyBuilder3, _a305, "MySqlPrimaryKeyBuilder");
-    _a306 = entityKind;
+    __publicField(PrimaryKeyBuilder3, _a317, "MySqlPrimaryKeyBuilder");
+    _a318 = entityKind;
     PrimaryKey3 = class {
       constructor(table6, columns, name2) {
         __publicField(this, "columns");
@@ -38392,7 +38656,7 @@ var init_primary_keys3 = __esm({
         return this.name ?? `${this.table[MySqlTable.Symbol.Name]}_${this.columns.map((column6) => column6.name).join("_")}_pk`;
       }
     };
-    __publicField(PrimaryKey3, _a306, "MySqlPrimaryKey");
+    __publicField(PrimaryKey3, _a318, "MySqlPrimaryKey");
   }
 });
 
@@ -38494,7 +38758,7 @@ function createSetOperator3(type, isAll) {
     return leftSelect.addSetOperators(setOperators);
   };
 }
-var _a307, MySqlSelectBuilder, _a308, _b224, MySqlSelectQueryBuilderBase, _a309, _b225, MySqlSelectBase, getMySqlSetOperators, union4, unionAll3, intersect3, intersectAll2, except3, exceptAll2;
+var _a319, MySqlSelectBuilder, _a320, _b236, MySqlSelectQueryBuilderBase, _a321, _b237, MySqlSelectBase, getMySqlSetOperators, union4, unionAll3, intersect3, intersectAll2, except3, exceptAll2;
 var init_select4 = __esm({
   "../drizzle-orm/dist/mysql-core/query-builders/select.js"() {
     "use strict";
@@ -38510,7 +38774,7 @@ var init_select4 = __esm({
     init_view_common();
     init_utils8();
     init_view_base3();
-    _a307 = entityKind;
+    _a319 = entityKind;
     MySqlSelectBuilder = class {
       constructor(config) {
         __publicField(this, "fields");
@@ -38572,8 +38836,8 @@ var init_select4 = __esm({
         );
       }
     };
-    __publicField(MySqlSelectBuilder, _a307, "MySqlSelectBuilder");
-    MySqlSelectQueryBuilderBase = class extends (_b224 = TypedQueryBuilder, _a308 = entityKind, _b224) {
+    __publicField(MySqlSelectBuilder, _a319, "MySqlSelectBuilder");
+    MySqlSelectQueryBuilderBase = class extends (_b236 = TypedQueryBuilder, _a320 = entityKind, _b236) {
       constructor({ table: table6, fields, isPartialSelect, session, dialect: dialect6, withList, distinct, useIndex, forceIndex, ignoreIndex }) {
         super();
         __publicField(this, "_");
@@ -38945,7 +39209,7 @@ var init_select4 = __esm({
         return (table6, on, onIndex) => {
           const baseTableName = this.tableName;
           const tableName = getTableLikeName(table6);
-          if (typeof tableName === "string" && this.config.joins?.some((join) => join.alias === tableName)) {
+          if (typeof tableName === "string" && this.config.joins?.some((join2) => join2.alias === tableName)) {
             throw new Error(`Alias "${tableName}" is already used in this query`);
           }
           if (!this.isPartialSelect) {
@@ -39231,8 +39495,8 @@ var init_select4 = __esm({
         return this;
       }
     };
-    __publicField(MySqlSelectQueryBuilderBase, _a308, "MySqlSelectQueryBuilder");
-    MySqlSelectBase = class extends (_b225 = MySqlSelectQueryBuilderBase, _a309 = entityKind, _b225) {
+    __publicField(MySqlSelectQueryBuilderBase, _a320, "MySqlSelectQueryBuilder");
+    MySqlSelectBase = class extends (_b237 = MySqlSelectQueryBuilderBase, _a321 = entityKind, _b237) {
       constructor() {
         super(...arguments);
         __publicField(this, "execute", (placeholderValues) => {
@@ -39256,7 +39520,7 @@ var init_select4 = __esm({
         return query;
       }
     };
-    __publicField(MySqlSelectBase, _a309, "MySqlSelect");
+    __publicField(MySqlSelectBase, _a321, "MySqlSelect");
     applyMixins(MySqlSelectBase, [QueryPromise]);
     getMySqlSetOperators = () => ({
       union: union4,
@@ -39276,7 +39540,7 @@ var init_select4 = __esm({
 });
 
 // ../drizzle-orm/dist/mysql-core/query-builders/query-builder.js
-var _a310, QueryBuilder3;
+var _a322, QueryBuilder3;
 var init_query_builder4 = __esm({
   "../drizzle-orm/dist/mysql-core/query-builders/query-builder.js"() {
     "use strict";
@@ -39285,7 +39549,7 @@ var init_query_builder4 = __esm({
     init_selection_proxy();
     init_subquery();
     init_select4();
-    _a310 = entityKind;
+    _a322 = entityKind;
     QueryBuilder3 = class {
       constructor(dialect6) {
         __publicField(this, "dialect");
@@ -39351,12 +39615,12 @@ var init_query_builder4 = __esm({
         return this.dialect;
       }
     };
-    __publicField(QueryBuilder3, _a310, "MySqlQueryBuilder");
+    __publicField(QueryBuilder3, _a322, "MySqlQueryBuilder");
   }
 });
 
 // ../drizzle-orm/dist/mysql-core/query-builders/insert.js
-var _a311, MySqlInsertBuilder, _a312, _b226, MySqlInsertBase;
+var _a323, MySqlInsertBuilder, _a324, _b238, MySqlInsertBase;
 var init_insert3 = __esm({
   "../drizzle-orm/dist/mysql-core/query-builders/insert.js"() {
     "use strict";
@@ -39366,7 +39630,7 @@ var init_insert3 = __esm({
     init_table();
     init_utils2();
     init_query_builder4();
-    _a311 = entityKind;
+    _a323 = entityKind;
     MySqlInsertBuilder = class {
       constructor(table6, session, dialect6) {
         __publicField(this, "shouldIgnore", false);
@@ -39404,8 +39668,8 @@ var init_insert3 = __esm({
         return new MySqlInsertBase(this.table, select, this.shouldIgnore, this.session, this.dialect, true);
       }
     };
-    __publicField(MySqlInsertBuilder, _a311, "MySqlInsertBuilder");
-    MySqlInsertBase = class extends (_b226 = QueryPromise, _a312 = entityKind, _b226) {
+    __publicField(MySqlInsertBuilder, _a323, "MySqlInsertBuilder");
+    MySqlInsertBase = class extends (_b238 = QueryPromise, _a324 = entityKind, _b238) {
       constructor(table6, values, ignore, session, dialect6, select) {
         super();
         __publicField(this, "config");
@@ -39486,7 +39750,7 @@ var init_insert3 = __esm({
         return this;
       }
     };
-    __publicField(MySqlInsertBase, _a312, "MySqlInsert");
+    __publicField(MySqlInsertBase, _a324, "MySqlInsert");
   }
 });
 
@@ -39498,7 +39762,7 @@ var init_select_types3 = __esm({
 });
 
 // ../drizzle-orm/dist/mysql-core/query-builders/update.js
-var _a313, MySqlUpdateBuilder, _a314, _b227, MySqlUpdateBase;
+var _a325, MySqlUpdateBuilder, _a326, _b239, MySqlUpdateBase;
 var init_update3 = __esm({
   "../drizzle-orm/dist/mysql-core/query-builders/update.js"() {
     "use strict";
@@ -39507,7 +39771,7 @@ var init_update3 = __esm({
     init_selection_proxy();
     init_table();
     init_utils2();
-    _a313 = entityKind;
+    _a325 = entityKind;
     MySqlUpdateBuilder = class {
       constructor(table6, session, dialect6, withList) {
         this.table = table6;
@@ -39519,8 +39783,8 @@ var init_update3 = __esm({
         return new MySqlUpdateBase(this.table, mapUpdateSet(this.table, values), this.session, this.dialect, this.withList);
       }
     };
-    __publicField(MySqlUpdateBuilder, _a313, "MySqlUpdateBuilder");
-    MySqlUpdateBase = class extends (_b227 = QueryPromise, _a314 = entityKind, _b227) {
+    __publicField(MySqlUpdateBuilder, _a325, "MySqlUpdateBuilder");
+    MySqlUpdateBase = class extends (_b239 = QueryPromise, _a326 = entityKind, _b239) {
       constructor(table6, set, session, dialect6, withList) {
         super();
         __publicField(this, "config");
@@ -39613,7 +39877,7 @@ var init_update3 = __esm({
         return this;
       }
     };
-    __publicField(MySqlUpdateBase, _a314, "MySqlUpdate");
+    __publicField(MySqlUpdateBase, _a326, "MySqlUpdate");
   }
 });
 
@@ -39631,14 +39895,14 @@ var init_query_builders3 = __esm({
 });
 
 // ../drizzle-orm/dist/mysql-core/query-builders/query.js
-var _a315, RelationalQueryBuilder3, _a316, _b228, MySqlRelationalQuery;
+var _a327, RelationalQueryBuilder3, _a328, _b240, MySqlRelationalQuery;
 var init_query3 = __esm({
   "../drizzle-orm/dist/mysql-core/query-builders/query.js"() {
     "use strict";
     init_entity();
     init_query_promise();
     init_relations();
-    _a315 = entityKind;
+    _a327 = entityKind;
     RelationalQueryBuilder3 = class {
       constructor(fullSchema, schema5, tableNamesMap, table6, tableConfig, dialect6, session, mode) {
         this.fullSchema = fullSchema;
@@ -39679,8 +39943,8 @@ var init_query3 = __esm({
         );
       }
     };
-    __publicField(RelationalQueryBuilder3, _a315, "MySqlRelationalQueryBuilder");
-    MySqlRelationalQuery = class extends (_b228 = QueryPromise, _a316 = entityKind, _b228) {
+    __publicField(RelationalQueryBuilder3, _a327, "MySqlRelationalQueryBuilder");
+    MySqlRelationalQuery = class extends (_b240 = QueryPromise, _a328 = entityKind, _b240) {
       constructor(fullSchema, schema5, tableNamesMap, table6, tableConfig, dialect6, session, config, queryMode, mode) {
         super();
         this.fullSchema = fullSchema;
@@ -39744,12 +40008,12 @@ var init_query3 = __esm({
         return this.prepare().execute();
       }
     };
-    __publicField(MySqlRelationalQuery, _a316, "MySqlRelationalQuery");
+    __publicField(MySqlRelationalQuery, _a328, "MySqlRelationalQuery");
   }
 });
 
 // ../drizzle-orm/dist/mysql-core/db.js
-var _a317, MySqlDatabase;
+var _a329, MySqlDatabase;
 var init_db3 = __esm({
   "../drizzle-orm/dist/mysql-core/db.js"() {
     "use strict";
@@ -39760,7 +40024,7 @@ var init_db3 = __esm({
     init_count3();
     init_query_builders3();
     init_query3();
-    _a317 = entityKind;
+    _a329 = entityKind;
     MySqlDatabase = class {
       constructor(dialect6, session, schema5, mode) {
         __publicField(this, "query");
@@ -39977,7 +40241,7 @@ var init_db3 = __esm({
         return this.session.transaction(transaction, config);
       }
     };
-    __publicField(MySqlDatabase, _a317, "MySqlDatabase");
+    __publicField(MySqlDatabase, _a329, "MySqlDatabase");
   }
 });
 
@@ -39988,7 +40252,7 @@ function mysqlViewWithSchema(name2, selection, schema5) {
   }
   return new ViewBuilder3(name2, schema5);
 }
-var _a318, ViewBuilderCore2, _a319, _b229, ViewBuilder3, _a320, _b230, ManualViewBuilder3, _a321, _b231, _c11, MySqlView2;
+var _a330, ViewBuilderCore2, _a331, _b241, ViewBuilder3, _a332, _b242, ManualViewBuilder3, _a333, _b243, _c11, MySqlView2;
 var init_view3 = __esm({
   "../drizzle-orm/dist/mysql-core/view.js"() {
     "use strict";
@@ -39999,7 +40263,7 @@ var init_view3 = __esm({
     init_table4();
     init_view_base3();
     init_view_common3();
-    _a318 = entityKind;
+    _a330 = entityKind;
     ViewBuilderCore2 = class {
       constructor(name2, schema5) {
         __publicField(this, "config", {});
@@ -40019,8 +40283,8 @@ var init_view3 = __esm({
         return this;
       }
     };
-    __publicField(ViewBuilderCore2, _a318, "MySqlViewBuilder");
-    ViewBuilder3 = class extends (_b229 = ViewBuilderCore2, _a319 = entityKind, _b229) {
+    __publicField(ViewBuilderCore2, _a330, "MySqlViewBuilder");
+    ViewBuilder3 = class extends (_b241 = ViewBuilderCore2, _a331 = entityKind, _b241) {
       as(qb) {
         if (typeof qb === "function") {
           qb = qb(new QueryBuilder3());
@@ -40046,8 +40310,8 @@ var init_view3 = __esm({
         );
       }
     };
-    __publicField(ViewBuilder3, _a319, "MySqlViewBuilder");
-    ManualViewBuilder3 = class extends (_b230 = ViewBuilderCore2, _a320 = entityKind, _b230) {
+    __publicField(ViewBuilder3, _a331, "MySqlViewBuilder");
+    ManualViewBuilder3 = class extends (_b242 = ViewBuilderCore2, _a332 = entityKind, _b242) {
       constructor(name2, columns, schema5) {
         super(name2, schema5);
         __publicField(this, "columns");
@@ -40092,27 +40356,27 @@ var init_view3 = __esm({
         );
       }
     };
-    __publicField(ManualViewBuilder3, _a320, "MySqlManualViewBuilder");
-    MySqlView2 = class extends (_c11 = MySqlViewBase, _b231 = entityKind, _a321 = MySqlViewConfig, _c11) {
+    __publicField(ManualViewBuilder3, _a332, "MySqlManualViewBuilder");
+    MySqlView2 = class extends (_c11 = MySqlViewBase, _b243 = entityKind, _a333 = MySqlViewConfig, _c11) {
       constructor({ mysqlConfig, config }) {
         super(config);
-        __publicField(this, _a321);
+        __publicField(this, _a333);
         this[MySqlViewConfig] = mysqlConfig;
       }
     };
-    __publicField(MySqlView2, _b231, "MySqlView");
+    __publicField(MySqlView2, _b243, "MySqlView");
   }
 });
 
 // ../drizzle-orm/dist/mysql-core/schema.js
-var _a322, MySqlSchema5;
+var _a334, MySqlSchema5;
 var init_schema2 = __esm({
   "../drizzle-orm/dist/mysql-core/schema.js"() {
     "use strict";
     init_entity();
     init_table4();
     init_view3();
-    _a322 = entityKind;
+    _a334 = entityKind;
     MySqlSchema5 = class {
       constructor(schemaName) {
         __publicField(this, "table", (name2, columns, extraConfig) => {
@@ -40124,12 +40388,12 @@ var init_schema2 = __esm({
         this.schemaName = schemaName;
       }
     };
-    __publicField(MySqlSchema5, _a322, "MySqlSchema");
+    __publicField(MySqlSchema5, _a334, "MySqlSchema");
   }
 });
 
 // ../drizzle-orm/dist/mysql-core/session.js
-var _a323, MySqlPreparedQuery, _a324, MySqlSession, _a325, _b232, MySqlTransaction;
+var _a335, MySqlPreparedQuery, _a336, MySqlSession, _a337, _b244, MySqlTransaction;
 var init_session3 = __esm({
   "../drizzle-orm/dist/mysql-core/session.js"() {
     "use strict";
@@ -40137,15 +40401,15 @@ var init_session3 = __esm({
     init_errors();
     init_sql();
     init_db3();
-    _a323 = entityKind;
+    _a335 = entityKind;
     MySqlPreparedQuery = class {
       constructor() {
         /** @internal */
         __publicField(this, "joinsNotNullableMap");
       }
     };
-    __publicField(MySqlPreparedQuery, _a323, "MySqlPreparedQuery");
-    _a324 = entityKind;
+    __publicField(MySqlPreparedQuery, _a335, "MySqlPreparedQuery");
+    _a336 = entityKind;
     MySqlSession = class {
       constructor(dialect6) {
         this.dialect = dialect6;
@@ -40180,8 +40444,8 @@ var init_session3 = __esm({
         return parts.length ? sql`start transaction ${sql.raw(parts.join(" "))}` : void 0;
       }
     };
-    __publicField(MySqlSession, _a324, "MySqlSession");
-    MySqlTransaction = class extends (_b232 = MySqlDatabase, _a325 = entityKind, _b232) {
+    __publicField(MySqlSession, _a336, "MySqlSession");
+    MySqlTransaction = class extends (_b244 = MySqlDatabase, _a337 = entityKind, _b244) {
       constructor(dialect6, session, schema5, nestedIndex, mode) {
         super(dialect6, session, schema5, mode);
         this.schema = schema5;
@@ -40191,7 +40455,7 @@ var init_session3 = __esm({
         throw new TransactionRollbackError();
       }
     };
-    __publicField(MySqlTransaction, _a325, "MySqlTransaction");
+    __publicField(MySqlTransaction, _a337, "MySqlTransaction");
   }
 });
 
@@ -41437,13 +41701,13 @@ var init_alias5 = __esm({
 function uniqueKeyName4(table6, columns) {
   return `${table6[TableName]}_${columns.join("_")}_unique`;
 }
-var _a326, UniqueConstraintBuilder4, _a327, UniqueOnConstraintBuilder4, _a328, UniqueConstraint4;
+var _a338, UniqueConstraintBuilder4, _a339, UniqueOnConstraintBuilder4, _a340, UniqueConstraint4;
 var init_unique_constraint4 = __esm({
   "../drizzle-orm/dist/singlestore-core/unique-constraint.js"() {
     "use strict";
     init_entity();
     init_table_utils();
-    _a326 = entityKind;
+    _a338 = entityKind;
     UniqueConstraintBuilder4 = class {
       constructor(columns, name2) {
         /** @internal */
@@ -41456,8 +41720,8 @@ var init_unique_constraint4 = __esm({
         return new UniqueConstraint4(table6, this.columns, this.name);
       }
     };
-    __publicField(UniqueConstraintBuilder4, _a326, "SingleStoreUniqueConstraintBuilder");
-    _a327 = entityKind;
+    __publicField(UniqueConstraintBuilder4, _a338, "SingleStoreUniqueConstraintBuilder");
+    _a339 = entityKind;
     UniqueOnConstraintBuilder4 = class {
       constructor(name2) {
         /** @internal */
@@ -41468,8 +41732,8 @@ var init_unique_constraint4 = __esm({
         return new UniqueConstraintBuilder4(columns, this.name);
       }
     };
-    __publicField(UniqueOnConstraintBuilder4, _a327, "SingleStoreUniqueOnConstraintBuilder");
-    _a328 = entityKind;
+    __publicField(UniqueOnConstraintBuilder4, _a339, "SingleStoreUniqueOnConstraintBuilder");
+    _a340 = entityKind;
     UniqueConstraint4 = class {
       constructor(table6, columns, name2) {
         __publicField(this, "columns");
@@ -41483,12 +41747,12 @@ var init_unique_constraint4 = __esm({
         return this.name;
       }
     };
-    __publicField(UniqueConstraint4, _a328, "SingleStoreUniqueConstraint");
+    __publicField(UniqueConstraint4, _a340, "SingleStoreUniqueConstraint");
   }
 });
 
 // ../drizzle-orm/dist/singlestore-core/columns/common.js
-var _a329, _b233, SingleStoreColumnBuilder, _a330, _b234, SingleStoreColumn, _a331, _b235, SingleStoreColumnBuilderWithAutoIncrement, _a332, _b236, SingleStoreColumnWithAutoIncrement;
+var _a341, _b245, SingleStoreColumnBuilder, _a342, _b246, SingleStoreColumn, _a343, _b247, SingleStoreColumnBuilderWithAutoIncrement, _a344, _b248, SingleStoreColumnWithAutoIncrement;
 var init_common5 = __esm({
   "../drizzle-orm/dist/singlestore-core/columns/common.js"() {
     "use strict";
@@ -41496,7 +41760,7 @@ var init_common5 = __esm({
     init_column();
     init_entity();
     init_unique_constraint4();
-    SingleStoreColumnBuilder = class extends (_b233 = ColumnBuilder, _a329 = entityKind, _b233) {
+    SingleStoreColumnBuilder = class extends (_b245 = ColumnBuilder, _a341 = entityKind, _b245) {
       unique(name2) {
         this.config.isUnique = true;
         this.config.uniqueName = name2;
@@ -41513,8 +41777,8 @@ var init_common5 = __esm({
         return this;
       }
     };
-    __publicField(SingleStoreColumnBuilder, _a329, "SingleStoreColumnBuilder");
-    SingleStoreColumn = class extends (_b234 = Column2, _a330 = entityKind, _b234) {
+    __publicField(SingleStoreColumnBuilder, _a341, "SingleStoreColumnBuilder");
+    SingleStoreColumn = class extends (_b246 = Column2, _a342 = entityKind, _b246) {
       constructor(table6, config) {
         if (!config.uniqueName) {
           config.uniqueName = uniqueKeyName4(table6, [config.name]);
@@ -41523,8 +41787,8 @@ var init_common5 = __esm({
         this.table = table6;
       }
     };
-    __publicField(SingleStoreColumn, _a330, "SingleStoreColumn");
-    SingleStoreColumnBuilderWithAutoIncrement = class extends (_b235 = SingleStoreColumnBuilder, _a331 = entityKind, _b235) {
+    __publicField(SingleStoreColumn, _a342, "SingleStoreColumn");
+    SingleStoreColumnBuilderWithAutoIncrement = class extends (_b247 = SingleStoreColumnBuilder, _a343 = entityKind, _b247) {
       constructor(name2, dataType, columnType) {
         super(name2, dataType, columnType);
         this.config.autoIncrement = false;
@@ -41535,14 +41799,14 @@ var init_common5 = __esm({
         return this;
       }
     };
-    __publicField(SingleStoreColumnBuilderWithAutoIncrement, _a331, "SingleStoreColumnBuilderWithAutoIncrement");
-    SingleStoreColumnWithAutoIncrement = class extends (_b236 = SingleStoreColumn, _a332 = entityKind, _b236) {
+    __publicField(SingleStoreColumnBuilderWithAutoIncrement, _a343, "SingleStoreColumnBuilderWithAutoIncrement");
+    SingleStoreColumnWithAutoIncrement = class extends (_b248 = SingleStoreColumn, _a344 = entityKind, _b248) {
       constructor() {
         super(...arguments);
         __publicField(this, "autoIncrement", this.config.autoIncrement);
       }
     };
-    __publicField(SingleStoreColumnWithAutoIncrement, _a332, "SingleStoreColumnWithAutoIncrement");
+    __publicField(SingleStoreColumnWithAutoIncrement, _a344, "SingleStoreColumnWithAutoIncrement");
   }
 });
 
@@ -41554,14 +41818,14 @@ function bigint3(a, b) {
   }
   return new SingleStoreBigInt64Builder(name2, config.unsigned);
 }
-var _a333, _b237, SingleStoreBigInt53Builder, _a334, _b238, SingleStoreBigInt53, _a335, _b239, SingleStoreBigInt64Builder, _a336, _b240, SingleStoreBigInt64;
+var _a345, _b249, SingleStoreBigInt53Builder, _a346, _b250, SingleStoreBigInt53, _a347, _b251, SingleStoreBigInt64Builder, _a348, _b252, SingleStoreBigInt64;
 var init_bigint3 = __esm({
   "../drizzle-orm/dist/singlestore-core/columns/bigint.js"() {
     "use strict";
     init_entity();
     init_utils2();
     init_common5();
-    SingleStoreBigInt53Builder = class extends (_b237 = SingleStoreColumnBuilderWithAutoIncrement, _a333 = entityKind, _b237) {
+    SingleStoreBigInt53Builder = class extends (_b249 = SingleStoreColumnBuilderWithAutoIncrement, _a345 = entityKind, _b249) {
       constructor(name2, unsigned = false) {
         super(name2, "number", "SingleStoreBigInt53");
         this.config.unsigned = unsigned;
@@ -41574,8 +41838,8 @@ var init_bigint3 = __esm({
         );
       }
     };
-    __publicField(SingleStoreBigInt53Builder, _a333, "SingleStoreBigInt53Builder");
-    SingleStoreBigInt53 = class extends (_b238 = SingleStoreColumnWithAutoIncrement, _a334 = entityKind, _b238) {
+    __publicField(SingleStoreBigInt53Builder, _a345, "SingleStoreBigInt53Builder");
+    SingleStoreBigInt53 = class extends (_b250 = SingleStoreColumnWithAutoIncrement, _a346 = entityKind, _b250) {
       getSQLType() {
         return `bigint${this.config.unsigned ? " unsigned" : ""}`;
       }
@@ -41586,8 +41850,8 @@ var init_bigint3 = __esm({
         return Number(value);
       }
     };
-    __publicField(SingleStoreBigInt53, _a334, "SingleStoreBigInt53");
-    SingleStoreBigInt64Builder = class extends (_b239 = SingleStoreColumnBuilderWithAutoIncrement, _a335 = entityKind, _b239) {
+    __publicField(SingleStoreBigInt53, _a346, "SingleStoreBigInt53");
+    SingleStoreBigInt64Builder = class extends (_b251 = SingleStoreColumnBuilderWithAutoIncrement, _a347 = entityKind, _b251) {
       constructor(name2, unsigned = false) {
         super(name2, "bigint", "SingleStoreBigInt64");
         this.config.unsigned = unsigned;
@@ -41600,8 +41864,8 @@ var init_bigint3 = __esm({
         );
       }
     };
-    __publicField(SingleStoreBigInt64Builder, _a335, "SingleStoreBigInt64Builder");
-    SingleStoreBigInt64 = class extends (_b240 = SingleStoreColumnWithAutoIncrement, _a336 = entityKind, _b240) {
+    __publicField(SingleStoreBigInt64Builder, _a347, "SingleStoreBigInt64Builder");
+    SingleStoreBigInt64 = class extends (_b252 = SingleStoreColumnWithAutoIncrement, _a348 = entityKind, _b252) {
       getSQLType() {
         return `bigint${this.config.unsigned ? " unsigned" : ""}`;
       }
@@ -41610,7 +41874,7 @@ var init_bigint3 = __esm({
         return BigInt(value);
       }
     };
-    __publicField(SingleStoreBigInt64, _a336, "SingleStoreBigInt64");
+    __publicField(SingleStoreBigInt64, _a348, "SingleStoreBigInt64");
   }
 });
 
@@ -41619,14 +41883,14 @@ function binary2(a, b = {}) {
   const { name: name2, config } = getColumnNameAndConfig(a, b);
   return new SingleStoreBinaryBuilder(name2, config.length);
 }
-var _a337, _b241, SingleStoreBinaryBuilder, _a338, _b242, SingleStoreBinary;
+var _a349, _b253, SingleStoreBinaryBuilder, _a350, _b254, SingleStoreBinary;
 var init_binary2 = __esm({
   "../drizzle-orm/dist/singlestore-core/columns/binary.js"() {
     "use strict";
     init_entity();
     init_utils2();
     init_common5();
-    SingleStoreBinaryBuilder = class extends (_b241 = SingleStoreColumnBuilder, _a337 = entityKind, _b241) {
+    SingleStoreBinaryBuilder = class extends (_b253 = SingleStoreColumnBuilder, _a349 = entityKind, _b253) {
       constructor(name2, length) {
         super(name2, "string", "SingleStoreBinary");
         this.config.length = length;
@@ -41639,17 +41903,28 @@ var init_binary2 = __esm({
         );
       }
     };
-    __publicField(SingleStoreBinaryBuilder, _a337, "SingleStoreBinaryBuilder");
-    SingleStoreBinary = class extends (_b242 = SingleStoreColumn, _a338 = entityKind, _b242) {
+    __publicField(SingleStoreBinaryBuilder, _a349, "SingleStoreBinaryBuilder");
+    SingleStoreBinary = class extends (_b254 = SingleStoreColumn, _a350 = entityKind, _b254) {
       constructor() {
         super(...arguments);
         __publicField(this, "length", this.config.length);
       }
+      mapFromDriverValue(value) {
+        if (typeof value === "string")
+          return value;
+        if (Buffer.isBuffer(value))
+          return value.toString();
+        const str = [];
+        for (const v of value) {
+          str.push(v === 49 ? "1" : "0");
+        }
+        return str.join("");
+      }
       getSQLType() {
         return this.length === void 0 ? `binary` : `binary(${this.length})`;
       }
     };
-    __publicField(SingleStoreBinary, _a338, "SingleStoreBinary");
+    __publicField(SingleStoreBinary, _a350, "SingleStoreBinary");
   }
 });
 
@@ -41657,13 +41932,13 @@ var init_binary2 = __esm({
 function boolean3(name2) {
   return new SingleStoreBooleanBuilder(name2 ?? "");
 }
-var _a339, _b243, SingleStoreBooleanBuilder, _a340, _b244, SingleStoreBoolean;
+var _a351, _b255, SingleStoreBooleanBuilder, _a352, _b256, SingleStoreBoolean;
 var init_boolean3 = __esm({
   "../drizzle-orm/dist/singlestore-core/columns/boolean.js"() {
     "use strict";
     init_entity();
     init_common5();
-    SingleStoreBooleanBuilder = class extends (_b243 = SingleStoreColumnBuilder, _a339 = entityKind, _b243) {
+    SingleStoreBooleanBuilder = class extends (_b255 = SingleStoreColumnBuilder, _a351 = entityKind, _b255) {
       constructor(name2) {
         super(name2, "boolean", "SingleStoreBoolean");
       }
@@ -41675,8 +41950,8 @@ var init_boolean3 = __esm({
         );
       }
     };
-    __publicField(SingleStoreBooleanBuilder, _a339, "SingleStoreBooleanBuilder");
-    SingleStoreBoolean = class extends (_b244 = SingleStoreColumn, _a340 = entityKind, _b244) {
+    __publicField(SingleStoreBooleanBuilder, _a351, "SingleStoreBooleanBuilder");
+    SingleStoreBoolean = class extends (_b256 = SingleStoreColumn, _a352 = entityKind, _b256) {
       getSQLType() {
         return "boolean";
       }
@@ -41687,7 +41962,7 @@ var init_boolean3 = __esm({
         return value === 1;
       }
     };
-    __publicField(SingleStoreBoolean, _a340, "SingleStoreBoolean");
+    __publicField(SingleStoreBoolean, _a352, "SingleStoreBoolean");
   }
 });
 
@@ -41696,14 +41971,14 @@ function char3(a, b = {}) {
   const { name: name2, config } = getColumnNameAndConfig(a, b);
   return new SingleStoreCharBuilder(name2, config);
 }
-var _a341, _b245, SingleStoreCharBuilder, _a342, _b246, SingleStoreChar;
+var _a353, _b257, SingleStoreCharBuilder, _a354, _b258, SingleStoreChar;
 var init_char3 = __esm({
   "../drizzle-orm/dist/singlestore-core/columns/char.js"() {
     "use strict";
     init_entity();
     init_utils2();
     init_common5();
-    SingleStoreCharBuilder = class extends (_b245 = SingleStoreColumnBuilder, _a341 = entityKind, _b245) {
+    SingleStoreCharBuilder = class extends (_b257 = SingleStoreColumnBuilder, _a353 = entityKind, _b257) {
       constructor(name2, config) {
         super(name2, "string", "SingleStoreChar");
         this.config.length = config.length;
@@ -41717,8 +41992,8 @@ var init_char3 = __esm({
         );
       }
     };
-    __publicField(SingleStoreCharBuilder, _a341, "SingleStoreCharBuilder");
-    SingleStoreChar = class extends (_b246 = SingleStoreColumn, _a342 = entityKind, _b246) {
+    __publicField(SingleStoreCharBuilder, _a353, "SingleStoreCharBuilder");
+    SingleStoreChar = class extends (_b258 = SingleStoreColumn, _a354 = entityKind, _b258) {
       constructor() {
         super(...arguments);
         __publicField(this, "length", this.config.length);
@@ -41728,7 +42003,7 @@ var init_char3 = __esm({
         return this.length === void 0 ? `char` : `char(${this.length})`;
       }
     };
-    __publicField(SingleStoreChar, _a342, "SingleStoreChar");
+    __publicField(SingleStoreChar, _a354, "SingleStoreChar");
   }
 });
 
@@ -41739,14 +42014,14 @@ function customType4(customTypeParams) {
     return new SingleStoreCustomColumnBuilder(name2, config, customTypeParams);
   };
 }
-var _a343, _b247, SingleStoreCustomColumnBuilder, _a344, _b248, SingleStoreCustomColumn;
+var _a355, _b259, SingleStoreCustomColumnBuilder, _a356, _b260, SingleStoreCustomColumn;
 var init_custom4 = __esm({
   "../drizzle-orm/dist/singlestore-core/columns/custom.js"() {
     "use strict";
     init_entity();
     init_utils2();
     init_common5();
-    SingleStoreCustomColumnBuilder = class extends (_b247 = SingleStoreColumnBuilder, _a343 = entityKind, _b247) {
+    SingleStoreCustomColumnBuilder = class extends (_b259 = SingleStoreColumnBuilder, _a355 = entityKind, _b259) {
       constructor(name2, fieldConfig, customTypeParams) {
         super(name2, "custom", "SingleStoreCustomColumn");
         this.config.fieldConfig = fieldConfig;
@@ -41760,8 +42035,8 @@ var init_custom4 = __esm({
         );
       }
     };
-    __publicField(SingleStoreCustomColumnBuilder, _a343, "SingleStoreCustomColumnBuilder");
-    SingleStoreCustomColumn = class extends (_b248 = SingleStoreColumn, _a344 = entityKind, _b248) {
+    __publicField(SingleStoreCustomColumnBuilder, _a355, "SingleStoreCustomColumnBuilder");
+    SingleStoreCustomColumn = class extends (_b260 = SingleStoreColumn, _a356 = entityKind, _b260) {
       constructor(table6, config) {
         super(table6, config);
         __publicField(this, "sqlName");
@@ -41781,7 +42056,7 @@ var init_custom4 = __esm({
         return typeof this.mapTo === "function" ? this.mapTo(value) : value;
       }
     };
-    __publicField(SingleStoreCustomColumn, _a344, "SingleStoreCustomColumn");
+    __publicField(SingleStoreCustomColumn, _a356, "SingleStoreCustomColumn");
   }
 });
 
@@ -41793,14 +42068,14 @@ function date3(a, b) {
   }
   return new SingleStoreDateBuilder(name2);
 }
-var _a345, _b249, SingleStoreDateBuilder, _a346, _b250, SingleStoreDate, _a347, _b251, SingleStoreDateStringBuilder, _a348, _b252, SingleStoreDateString;
+var _a357, _b261, SingleStoreDateBuilder, _a358, _b262, SingleStoreDate, _a359, _b263, SingleStoreDateStringBuilder, _a360, _b264, SingleStoreDateString;
 var init_date3 = __esm({
   "../drizzle-orm/dist/singlestore-core/columns/date.js"() {
     "use strict";
     init_entity();
     init_utils2();
     init_common5();
-    SingleStoreDateBuilder = class extends (_b249 = SingleStoreColumnBuilder, _a345 = entityKind, _b249) {
+    SingleStoreDateBuilder = class extends (_b261 = SingleStoreColumnBuilder, _a357 = entityKind, _b261) {
       constructor(name2) {
         super(name2, "date", "SingleStoreDate");
       }
@@ -41812,8 +42087,8 @@ var init_date3 = __esm({
         );
       }
     };
-    __publicField(SingleStoreDateBuilder, _a345, "SingleStoreDateBuilder");
-    SingleStoreDate = class extends (_b250 = SingleStoreColumn, _a346 = entityKind, _b250) {
+    __publicField(SingleStoreDateBuilder, _a357, "SingleStoreDateBuilder");
+    SingleStoreDate = class extends (_b262 = SingleStoreColumn, _a358 = entityKind, _b262) {
       constructor(table6, config) {
         super(table6, config);
       }
@@ -41824,8 +42099,8 @@ var init_date3 = __esm({
         return new Date(value);
       }
     };
-    __publicField(SingleStoreDate, _a346, "SingleStoreDate");
-    SingleStoreDateStringBuilder = class extends (_b251 = SingleStoreColumnBuilder, _a347 = entityKind, _b251) {
+    __publicField(SingleStoreDate, _a358, "SingleStoreDate");
+    SingleStoreDateStringBuilder = class extends (_b263 = SingleStoreColumnBuilder, _a359 = entityKind, _b263) {
       constructor(name2) {
         super(name2, "string", "SingleStoreDateString");
       }
@@ -41837,8 +42112,8 @@ var init_date3 = __esm({
         );
       }
     };
-    __publicField(SingleStoreDateStringBuilder, _a347, "SingleStoreDateStringBuilder");
-    SingleStoreDateString = class extends (_b252 = SingleStoreColumn, _a348 = entityKind, _b252) {
+    __publicField(SingleStoreDateStringBuilder, _a359, "SingleStoreDateStringBuilder");
+    SingleStoreDateString = class extends (_b264 = SingleStoreColumn, _a360 = entityKind, _b264) {
       constructor(table6, config) {
         super(table6, config);
       }
@@ -41846,7 +42121,7 @@ var init_date3 = __esm({
         return `date`;
       }
     };
-    __publicField(SingleStoreDateString, _a348, "SingleStoreDateString");
+    __publicField(SingleStoreDateString, _a360, "SingleStoreDateString");
   }
 });
 
@@ -41858,14 +42133,14 @@ function datetime2(a, b) {
   }
   return new SingleStoreDateTimeBuilder(name2);
 }
-var _a349, _b253, SingleStoreDateTimeBuilder, _a350, _b254, SingleStoreDateTime, _a351, _b255, SingleStoreDateTimeStringBuilder, _a352, _b256, SingleStoreDateTimeString;
+var _a361, _b265, SingleStoreDateTimeBuilder, _a362, _b266, SingleStoreDateTime, _a363, _b267, SingleStoreDateTimeStringBuilder, _a364, _b268, SingleStoreDateTimeString;
 var init_datetime2 = __esm({
   "../drizzle-orm/dist/singlestore-core/columns/datetime.js"() {
     "use strict";
     init_entity();
     init_utils2();
     init_common5();
-    SingleStoreDateTimeBuilder = class extends (_b253 = SingleStoreColumnBuilder, _a349 = entityKind, _b253) {
+    SingleStoreDateTimeBuilder = class extends (_b265 = SingleStoreColumnBuilder, _a361 = entityKind, _b265) {
       /** @internal */
       // TODO: we need to add a proper support for SingleStore
       generatedAlwaysAs(_as, _config) {
@@ -41882,8 +42157,8 @@ var init_datetime2 = __esm({
         );
       }
     };
-    __publicField(SingleStoreDateTimeBuilder, _a349, "SingleStoreDateTimeBuilder");
-    SingleStoreDateTime = class extends (_b254 = SingleStoreColumn, _a350 = entityKind, _b254) {
+    __publicField(SingleStoreDateTimeBuilder, _a361, "SingleStoreDateTimeBuilder");
+    SingleStoreDateTime = class extends (_b266 = SingleStoreColumn, _a362 = entityKind, _b266) {
       constructor(table6, config) {
         super(table6, config);
       }
@@ -41897,8 +42172,8 @@ var init_datetime2 = __esm({
         return /* @__PURE__ */ new Date(value.replace(" ", "T") + "Z");
       }
     };
-    __publicField(SingleStoreDateTime, _a350, "SingleStoreDateTime");
-    SingleStoreDateTimeStringBuilder = class extends (_b255 = SingleStoreColumnBuilder, _a351 = entityKind, _b255) {
+    __publicField(SingleStoreDateTime, _a362, "SingleStoreDateTime");
+    SingleStoreDateTimeStringBuilder = class extends (_b267 = SingleStoreColumnBuilder, _a363 = entityKind, _b267) {
       /** @internal */
       // TODO: we need to add a proper support for SingleStore
       generatedAlwaysAs(_as, _config) {
@@ -41915,8 +42190,8 @@ var init_datetime2 = __esm({
         );
       }
     };
-    __publicField(SingleStoreDateTimeStringBuilder, _a351, "SingleStoreDateTimeStringBuilder");
-    SingleStoreDateTimeString = class extends (_b256 = SingleStoreColumn, _a352 = entityKind, _b256) {
+    __publicField(SingleStoreDateTimeStringBuilder, _a363, "SingleStoreDateTimeStringBuilder");
+    SingleStoreDateTimeString = class extends (_b268 = SingleStoreColumn, _a364 = entityKind, _b268) {
       constructor(table6, config) {
         super(table6, config);
       }
@@ -41924,26 +42199,24 @@ var init_datetime2 = __esm({
         return `datetime`;
       }
     };
-    __publicField(SingleStoreDateTimeString, _a352, "SingleStoreDateTimeString");
+    __publicField(SingleStoreDateTimeString, _a364, "SingleStoreDateTimeString");
   }
 });
 
 // ../drizzle-orm/dist/singlestore-core/columns/decimal.js
 function decimal2(a, b = {}) {
-  const { name: name2, config } = getColumnNameAndConfig(
-    a,
-    b
-  );
-  return new SingleStoreDecimalBuilder(name2, config);
+  const { name: name2, config } = getColumnNameAndConfig(a, b);
+  const mode = config?.mode;
+  return mode === "number" ? new SingleStoreDecimalNumberBuilder(name2, config) : mode === "bigint" ? new SingleStoreDecimalBigIntBuilder(name2, config) : new SingleStoreDecimalBuilder(name2, config);
 }
-var _a353, _b257, SingleStoreDecimalBuilder, _a354, _b258, SingleStoreDecimal;
+var _a365, _b269, SingleStoreDecimalBuilder, _a366, _b270, SingleStoreDecimal, _a367, _b271, SingleStoreDecimalNumberBuilder, _a368, _b272, SingleStoreDecimalNumber, _a369, _b273, SingleStoreDecimalBigIntBuilder, _a370, _b274, SingleStoreDecimalBigInt;
 var init_decimal2 = __esm({
   "../drizzle-orm/dist/singlestore-core/columns/decimal.js"() {
     "use strict";
     init_entity();
     init_utils2();
     init_common5();
-    SingleStoreDecimalBuilder = class extends (_b257 = SingleStoreColumnBuilderWithAutoIncrement, _a353 = entityKind, _b257) {
+    SingleStoreDecimalBuilder = class extends (_b269 = SingleStoreColumnBuilderWithAutoIncrement, _a365 = entityKind, _b269) {
       constructor(name2, config) {
         super(name2, "string", "SingleStoreDecimal");
         this.config.precision = config?.precision;
@@ -41958,14 +42231,19 @@ var init_decimal2 = __esm({
         );
       }
     };
-    __publicField(SingleStoreDecimalBuilder, _a353, "SingleStoreDecimalBuilder");
-    SingleStoreDecimal = class extends (_b258 = SingleStoreColumnWithAutoIncrement, _a354 = entityKind, _b258) {
+    __publicField(SingleStoreDecimalBuilder, _a365, "SingleStoreDecimalBuilder");
+    SingleStoreDecimal = class extends (_b270 = SingleStoreColumnWithAutoIncrement, _a366 = entityKind, _b270) {
       constructor() {
         super(...arguments);
         __publicField(this, "precision", this.config.precision);
         __publicField(this, "scale", this.config.scale);
         __publicField(this, "unsigned", this.config.unsigned);
       }
+      mapFromDriverValue(value) {
+        if (typeof value === "string")
+          return value;
+        return String(value);
+      }
       getSQLType() {
         let type = "";
         if (this.precision !== void 0 && this.scale !== void 0) {
@@ -41979,7 +42257,89 @@ var init_decimal2 = __esm({
         return this.unsigned ? `${type} unsigned` : type;
       }
     };
-    __publicField(SingleStoreDecimal, _a354, "SingleStoreDecimal");
+    __publicField(SingleStoreDecimal, _a366, "SingleStoreDecimal");
+    SingleStoreDecimalNumberBuilder = class extends (_b271 = SingleStoreColumnBuilderWithAutoIncrement, _a367 = entityKind, _b271) {
+      constructor(name2, config) {
+        super(name2, "number", "SingleStoreDecimalNumber");
+        this.config.precision = config?.precision;
+        this.config.scale = config?.scale;
+        this.config.unsigned = config?.unsigned;
+      }
+      /** @internal */
+      build(table6) {
+        return new SingleStoreDecimalNumber(
+          table6,
+          this.config
+        );
+      }
+    };
+    __publicField(SingleStoreDecimalNumberBuilder, _a367, "SingleStoreDecimalNumberBuilder");
+    SingleStoreDecimalNumber = class extends (_b272 = SingleStoreColumnWithAutoIncrement, _a368 = entityKind, _b272) {
+      constructor() {
+        super(...arguments);
+        __publicField(this, "precision", this.config.precision);
+        __publicField(this, "scale", this.config.scale);
+        __publicField(this, "unsigned", this.config.unsigned);
+        __publicField(this, "mapToDriverValue", String);
+      }
+      mapFromDriverValue(value) {
+        if (typeof value === "number")
+          return value;
+        return Number(value);
+      }
+      getSQLType() {
+        let type = "";
+        if (this.precision !== void 0 && this.scale !== void 0) {
+          type += `decimal(${this.precision},${this.scale})`;
+        } else if (this.precision === void 0) {
+          type += "decimal";
+        } else {
+          type += `decimal(${this.precision})`;
+        }
+        type = type === "decimal(10,0)" || type === "decimal(10)" ? "decimal" : type;
+        return this.unsigned ? `${type} unsigned` : type;
+      }
+    };
+    __publicField(SingleStoreDecimalNumber, _a368, "SingleStoreDecimalNumber");
+    SingleStoreDecimalBigIntBuilder = class extends (_b273 = SingleStoreColumnBuilderWithAutoIncrement, _a369 = entityKind, _b273) {
+      constructor(name2, config) {
+        super(name2, "bigint", "SingleStoreDecimalBigInt");
+        this.config.precision = config?.precision;
+        this.config.scale = config?.scale;
+        this.config.unsigned = config?.unsigned;
+      }
+      /** @internal */
+      build(table6) {
+        return new SingleStoreDecimalBigInt(
+          table6,
+          this.config
+        );
+      }
+    };
+    __publicField(SingleStoreDecimalBigIntBuilder, _a369, "SingleStoreDecimalBigIntBuilder");
+    SingleStoreDecimalBigInt = class extends (_b274 = SingleStoreColumnWithAutoIncrement, _a370 = entityKind, _b274) {
+      constructor() {
+        super(...arguments);
+        __publicField(this, "precision", this.config.precision);
+        __publicField(this, "scale", this.config.scale);
+        __publicField(this, "unsigned", this.config.unsigned);
+        __publicField(this, "mapFromDriverValue", BigInt);
+        __publicField(this, "mapToDriverValue", String);
+      }
+      getSQLType() {
+        let type = "";
+        if (this.precision !== void 0 && this.scale !== void 0) {
+          type += `decimal(${this.precision},${this.scale})`;
+        } else if (this.precision === void 0) {
+          type += "decimal";
+        } else {
+          type += `decimal(${this.precision})`;
+        }
+        type = type === "decimal(10,0)" || type === "decimal(10)" ? "decimal" : type;
+        return this.unsigned ? `${type} unsigned` : type;
+      }
+    };
+    __publicField(SingleStoreDecimalBigInt, _a370, "SingleStoreDecimalBigInt");
   }
 });
 
@@ -41988,14 +42348,14 @@ function double2(a, b) {
   const { name: name2, config } = getColumnNameAndConfig(a, b);
   return new SingleStoreDoubleBuilder(name2, config);
 }
-var _a355, _b259, SingleStoreDoubleBuilder, _a356, _b260, SingleStoreDouble;
+var _a371, _b275, SingleStoreDoubleBuilder, _a372, _b276, SingleStoreDouble;
 var init_double2 = __esm({
   "../drizzle-orm/dist/singlestore-core/columns/double.js"() {
     "use strict";
     init_entity();
     init_utils2();
     init_common5();
-    SingleStoreDoubleBuilder = class extends (_b259 = SingleStoreColumnBuilderWithAutoIncrement, _a355 = entityKind, _b259) {
+    SingleStoreDoubleBuilder = class extends (_b275 = SingleStoreColumnBuilderWithAutoIncrement, _a371 = entityKind, _b275) {
       constructor(name2, config) {
         super(name2, "number", "SingleStoreDouble");
         this.config.precision = config?.precision;
@@ -42010,8 +42370,8 @@ var init_double2 = __esm({
         );
       }
     };
-    __publicField(SingleStoreDoubleBuilder, _a355, "SingleStoreDoubleBuilder");
-    SingleStoreDouble = class extends (_b260 = SingleStoreColumnWithAutoIncrement, _a356 = entityKind, _b260) {
+    __publicField(SingleStoreDoubleBuilder, _a371, "SingleStoreDoubleBuilder");
+    SingleStoreDouble = class extends (_b276 = SingleStoreColumnWithAutoIncrement, _a372 = entityKind, _b276) {
       constructor() {
         super(...arguments);
         __publicField(this, "precision", this.config.precision);
@@ -42030,7 +42390,7 @@ var init_double2 = __esm({
         return this.unsigned ? `${type} unsigned` : type;
       }
     };
-    __publicField(SingleStoreDouble, _a356, "SingleStoreDouble");
+    __publicField(SingleStoreDouble, _a372, "SingleStoreDouble");
   }
 });
 
@@ -42042,14 +42402,14 @@ function singlestoreEnum(a, b) {
   }
   return new SingleStoreEnumColumnBuilder(name2, values);
 }
-var _a357, _b261, SingleStoreEnumColumnBuilder, _a358, _b262, SingleStoreEnumColumn;
+var _a373, _b277, SingleStoreEnumColumnBuilder, _a374, _b278, SingleStoreEnumColumn;
 var init_enum3 = __esm({
   "../drizzle-orm/dist/singlestore-core/columns/enum.js"() {
     "use strict";
     init_entity();
     init_utils2();
     init_common5();
-    SingleStoreEnumColumnBuilder = class extends (_b261 = SingleStoreColumnBuilder, _a357 = entityKind, _b261) {
+    SingleStoreEnumColumnBuilder = class extends (_b277 = SingleStoreColumnBuilder, _a373 = entityKind, _b277) {
       // eslint-disable-next-line @typescript-eslint/no-unused-vars
       generatedAlwaysAs(as, config) {
         throw new Error("Method not implemented.");
@@ -42066,8 +42426,8 @@ var init_enum3 = __esm({
         );
       }
     };
-    __publicField(SingleStoreEnumColumnBuilder, _a357, "SingleStoreEnumColumnBuilder");
-    SingleStoreEnumColumn = class extends (_b262 = SingleStoreColumn, _a358 = entityKind, _b262) {
+    __publicField(SingleStoreEnumColumnBuilder, _a373, "SingleStoreEnumColumnBuilder");
+    SingleStoreEnumColumn = class extends (_b278 = SingleStoreColumn, _a374 = entityKind, _b278) {
       constructor() {
         super(...arguments);
         __publicField(this, "enumValues", this.config.enumValues);
@@ -42076,7 +42436,7 @@ var init_enum3 = __esm({
         return `enum(${this.enumValues.map((value) => `'${value}'`).join(",")})`;
       }
     };
-    __publicField(SingleStoreEnumColumn, _a358, "SingleStoreEnumColumn");
+    __publicField(SingleStoreEnumColumn, _a374, "SingleStoreEnumColumn");
   }
 });
 
@@ -42085,14 +42445,14 @@ function float2(a, b) {
   const { name: name2, config } = getColumnNameAndConfig(a, b);
   return new SingleStoreFloatBuilder(name2, config);
 }
-var _a359, _b263, SingleStoreFloatBuilder, _a360, _b264, SingleStoreFloat;
+var _a375, _b279, SingleStoreFloatBuilder, _a376, _b280, SingleStoreFloat;
 var init_float2 = __esm({
   "../drizzle-orm/dist/singlestore-core/columns/float.js"() {
     "use strict";
     init_entity();
     init_utils2();
     init_common5();
-    SingleStoreFloatBuilder = class extends (_b263 = SingleStoreColumnBuilderWithAutoIncrement, _a359 = entityKind, _b263) {
+    SingleStoreFloatBuilder = class extends (_b279 = SingleStoreColumnBuilderWithAutoIncrement, _a375 = entityKind, _b279) {
       constructor(name2, config) {
         super(name2, "number", "SingleStoreFloat");
         this.config.precision = config?.precision;
@@ -42107,8 +42467,8 @@ var init_float2 = __esm({
         );
       }
     };
-    __publicField(SingleStoreFloatBuilder, _a359, "SingleStoreFloatBuilder");
-    SingleStoreFloat = class extends (_b264 = SingleStoreColumnWithAutoIncrement, _a360 = entityKind, _b264) {
+    __publicField(SingleStoreFloatBuilder, _a375, "SingleStoreFloatBuilder");
+    SingleStoreFloat = class extends (_b280 = SingleStoreColumnWithAutoIncrement, _a376 = entityKind, _b280) {
       constructor() {
         super(...arguments);
         __publicField(this, "precision", this.config.precision);
@@ -42127,7 +42487,7 @@ var init_float2 = __esm({
         return this.unsigned ? `${type} unsigned` : type;
       }
     };
-    __publicField(SingleStoreFloat, _a360, "SingleStoreFloat");
+    __publicField(SingleStoreFloat, _a376, "SingleStoreFloat");
   }
 });
 
@@ -42136,14 +42496,14 @@ function int2(a, b) {
   const { name: name2, config } = getColumnNameAndConfig(a, b);
   return new SingleStoreIntBuilder(name2, config);
 }
-var _a361, _b265, SingleStoreIntBuilder, _a362, _b266, SingleStoreInt;
+var _a377, _b281, SingleStoreIntBuilder, _a378, _b282, SingleStoreInt;
 var init_int2 = __esm({
   "../drizzle-orm/dist/singlestore-core/columns/int.js"() {
     "use strict";
     init_entity();
     init_utils2();
     init_common5();
-    SingleStoreIntBuilder = class extends (_b265 = SingleStoreColumnBuilderWithAutoIncrement, _a361 = entityKind, _b265) {
+    SingleStoreIntBuilder = class extends (_b281 = SingleStoreColumnBuilderWithAutoIncrement, _a377 = entityKind, _b281) {
       constructor(name2, config) {
         super(name2, "number", "SingleStoreInt");
         this.config.unsigned = config ? config.unsigned : false;
@@ -42156,8 +42516,8 @@ var init_int2 = __esm({
         );
       }
     };
-    __publicField(SingleStoreIntBuilder, _a361, "SingleStoreIntBuilder");
-    SingleStoreInt = class extends (_b266 = SingleStoreColumnWithAutoIncrement, _a362 = entityKind, _b266) {
+    __publicField(SingleStoreIntBuilder, _a377, "SingleStoreIntBuilder");
+    SingleStoreInt = class extends (_b282 = SingleStoreColumnWithAutoIncrement, _a378 = entityKind, _b282) {
       getSQLType() {
         return `int${this.config.unsigned ? " unsigned" : ""}`;
       }
@@ -42168,7 +42528,7 @@ var init_int2 = __esm({
         return value;
       }
     };
-    __publicField(SingleStoreInt, _a362, "SingleStoreInt");
+    __publicField(SingleStoreInt, _a378, "SingleStoreInt");
   }
 });
 
@@ -42176,13 +42536,13 @@ var init_int2 = __esm({
 function json3(name2) {
   return new SingleStoreJsonBuilder(name2 ?? "");
 }
-var _a363, _b267, SingleStoreJsonBuilder, _a364, _b268, SingleStoreJson;
+var _a379, _b283, SingleStoreJsonBuilder, _a380, _b284, SingleStoreJson;
 var init_json3 = __esm({
   "../drizzle-orm/dist/singlestore-core/columns/json.js"() {
     "use strict";
     init_entity();
     init_common5();
-    SingleStoreJsonBuilder = class extends (_b267 = SingleStoreColumnBuilder, _a363 = entityKind, _b267) {
+    SingleStoreJsonBuilder = class extends (_b283 = SingleStoreColumnBuilder, _a379 = entityKind, _b283) {
       constructor(name2) {
         super(name2, "json", "SingleStoreJson");
       }
@@ -42194,8 +42554,8 @@ var init_json3 = __esm({
         );
       }
     };
-    __publicField(SingleStoreJsonBuilder, _a363, "SingleStoreJsonBuilder");
-    SingleStoreJson = class extends (_b268 = SingleStoreColumn, _a364 = entityKind, _b268) {
+    __publicField(SingleStoreJsonBuilder, _a379, "SingleStoreJsonBuilder");
+    SingleStoreJson = class extends (_b284 = SingleStoreColumn, _a380 = entityKind, _b284) {
       getSQLType() {
         return "json";
       }
@@ -42203,7 +42563,7 @@ var init_json3 = __esm({
         return JSON.stringify(value);
       }
     };
-    __publicField(SingleStoreJson, _a364, "SingleStoreJson");
+    __publicField(SingleStoreJson, _a380, "SingleStoreJson");
   }
 });
 
@@ -42212,14 +42572,14 @@ function mediumint2(a, b) {
   const { name: name2, config } = getColumnNameAndConfig(a, b);
   return new SingleStoreMediumIntBuilder(name2, config);
 }
-var _a365, _b269, SingleStoreMediumIntBuilder, _a366, _b270, SingleStoreMediumInt;
+var _a381, _b285, SingleStoreMediumIntBuilder, _a382, _b286, SingleStoreMediumInt;
 var init_mediumint2 = __esm({
   "../drizzle-orm/dist/singlestore-core/columns/mediumint.js"() {
     "use strict";
     init_entity();
     init_utils2();
     init_common5();
-    SingleStoreMediumIntBuilder = class extends (_b269 = SingleStoreColumnBuilderWithAutoIncrement, _a365 = entityKind, _b269) {
+    SingleStoreMediumIntBuilder = class extends (_b285 = SingleStoreColumnBuilderWithAutoIncrement, _a381 = entityKind, _b285) {
       constructor(name2, config) {
         super(name2, "number", "SingleStoreMediumInt");
         this.config.unsigned = config ? config.unsigned : false;
@@ -42232,8 +42592,8 @@ var init_mediumint2 = __esm({
         );
       }
     };
-    __publicField(SingleStoreMediumIntBuilder, _a365, "SingleStoreMediumIntBuilder");
-    SingleStoreMediumInt = class extends (_b270 = SingleStoreColumnWithAutoIncrement, _a366 = entityKind, _b270) {
+    __publicField(SingleStoreMediumIntBuilder, _a381, "SingleStoreMediumIntBuilder");
+    SingleStoreMediumInt = class extends (_b286 = SingleStoreColumnWithAutoIncrement, _a382 = entityKind, _b286) {
       getSQLType() {
         return `mediumint${this.config.unsigned ? " unsigned" : ""}`;
       }
@@ -42244,7 +42604,7 @@ var init_mediumint2 = __esm({
         return value;
       }
     };
-    __publicField(SingleStoreMediumInt, _a366, "SingleStoreMediumInt");
+    __publicField(SingleStoreMediumInt, _a382, "SingleStoreMediumInt");
   }
 });
 
@@ -42253,14 +42613,14 @@ function real4(a, b = {}) {
   const { name: name2, config } = getColumnNameAndConfig(a, b);
   return new SingleStoreRealBuilder(name2, config);
 }
-var _a367, _b271, SingleStoreRealBuilder, _a368, _b272, SingleStoreReal;
+var _a383, _b287, SingleStoreRealBuilder, _a384, _b288, SingleStoreReal;
 var init_real4 = __esm({
   "../drizzle-orm/dist/singlestore-core/columns/real.js"() {
     "use strict";
     init_entity();
     init_utils2();
     init_common5();
-    SingleStoreRealBuilder = class extends (_b271 = SingleStoreColumnBuilderWithAutoIncrement, _a367 = entityKind, _b271) {
+    SingleStoreRealBuilder = class extends (_b287 = SingleStoreColumnBuilderWithAutoIncrement, _a383 = entityKind, _b287) {
       constructor(name2, config) {
         super(name2, "number", "SingleStoreReal");
         this.config.precision = config?.precision;
@@ -42274,8 +42634,8 @@ var init_real4 = __esm({
         );
       }
     };
-    __publicField(SingleStoreRealBuilder, _a367, "SingleStoreRealBuilder");
-    SingleStoreReal = class extends (_b272 = SingleStoreColumnWithAutoIncrement, _a368 = entityKind, _b272) {
+    __publicField(SingleStoreRealBuilder, _a383, "SingleStoreRealBuilder");
+    SingleStoreReal = class extends (_b288 = SingleStoreColumnWithAutoIncrement, _a384 = entityKind, _b288) {
       constructor() {
         super(...arguments);
         __publicField(this, "precision", this.config.precision);
@@ -42291,7 +42651,7 @@ var init_real4 = __esm({
         }
       }
     };
-    __publicField(SingleStoreReal, _a368, "SingleStoreReal");
+    __publicField(SingleStoreReal, _a384, "SingleStoreReal");
   }
 });
 
@@ -42299,13 +42659,13 @@ var init_real4 = __esm({
 function serial3(name2) {
   return new SingleStoreSerialBuilder(name2 ?? "");
 }
-var _a369, _b273, SingleStoreSerialBuilder, _a370, _b274, SingleStoreSerial;
+var _a385, _b289, SingleStoreSerialBuilder, _a386, _b290, SingleStoreSerial;
 var init_serial3 = __esm({
   "../drizzle-orm/dist/singlestore-core/columns/serial.js"() {
     "use strict";
     init_entity();
     init_common5();
-    SingleStoreSerialBuilder = class extends (_b273 = SingleStoreColumnBuilderWithAutoIncrement, _a369 = entityKind, _b273) {
+    SingleStoreSerialBuilder = class extends (_b289 = SingleStoreColumnBuilderWithAutoIncrement, _a385 = entityKind, _b289) {
       constructor(name2) {
         super(name2, "number", "SingleStoreSerial");
         this.config.hasDefault = true;
@@ -42319,8 +42679,8 @@ var init_serial3 = __esm({
         );
       }
     };
-    __publicField(SingleStoreSerialBuilder, _a369, "SingleStoreSerialBuilder");
-    SingleStoreSerial = class extends (_b274 = SingleStoreColumnWithAutoIncrement, _a370 = entityKind, _b274) {
+    __publicField(SingleStoreSerialBuilder, _a385, "SingleStoreSerialBuilder");
+    SingleStoreSerial = class extends (_b290 = SingleStoreColumnWithAutoIncrement, _a386 = entityKind, _b290) {
       getSQLType() {
         return "serial";
       }
@@ -42331,7 +42691,7 @@ var init_serial3 = __esm({
         return value;
       }
     };
-    __publicField(SingleStoreSerial, _a370, "SingleStoreSerial");
+    __publicField(SingleStoreSerial, _a386, "SingleStoreSerial");
   }
 });
 
@@ -42340,14 +42700,14 @@ function smallint3(a, b) {
   const { name: name2, config } = getColumnNameAndConfig(a, b);
   return new SingleStoreSmallIntBuilder(name2, config);
 }
-var _a371, _b275, SingleStoreSmallIntBuilder, _a372, _b276, SingleStoreSmallInt;
+var _a387, _b291, SingleStoreSmallIntBuilder, _a388, _b292, SingleStoreSmallInt;
 var init_smallint3 = __esm({
   "../drizzle-orm/dist/singlestore-core/columns/smallint.js"() {
     "use strict";
     init_entity();
     init_utils2();
     init_common5();
-    SingleStoreSmallIntBuilder = class extends (_b275 = SingleStoreColumnBuilderWithAutoIncrement, _a371 = entityKind, _b275) {
+    SingleStoreSmallIntBuilder = class extends (_b291 = SingleStoreColumnBuilderWithAutoIncrement, _a387 = entityKind, _b291) {
       constructor(name2, config) {
         super(name2, "number", "SingleStoreSmallInt");
         this.config.unsigned = config ? config.unsigned : false;
@@ -42360,8 +42720,8 @@ var init_smallint3 = __esm({
         );
       }
     };
-    __publicField(SingleStoreSmallIntBuilder, _a371, "SingleStoreSmallIntBuilder");
-    SingleStoreSmallInt = class extends (_b276 = SingleStoreColumnWithAutoIncrement, _a372 = entityKind, _b276) {
+    __publicField(SingleStoreSmallIntBuilder, _a387, "SingleStoreSmallIntBuilder");
+    SingleStoreSmallInt = class extends (_b292 = SingleStoreColumnWithAutoIncrement, _a388 = entityKind, _b292) {
       getSQLType() {
         return `smallint${this.config.unsigned ? " unsigned" : ""}`;
       }
@@ -42372,7 +42732,7 @@ var init_smallint3 = __esm({
         return value;
       }
     };
-    __publicField(SingleStoreSmallInt, _a372, "SingleStoreSmallInt");
+    __publicField(SingleStoreSmallInt, _a388, "SingleStoreSmallInt");
   }
 });
 
@@ -42393,14 +42753,14 @@ function longtext2(a, b = {}) {
   const { name: name2, config } = getColumnNameAndConfig(a, b);
   return new SingleStoreTextBuilder(name2, "longtext", config);
 }
-var _a373, _b277, SingleStoreTextBuilder, _a374, _b278, SingleStoreText;
+var _a389, _b293, SingleStoreTextBuilder, _a390, _b294, SingleStoreText;
 var init_text4 = __esm({
   "../drizzle-orm/dist/singlestore-core/columns/text.js"() {
     "use strict";
     init_entity();
     init_utils2();
     init_common5();
-    SingleStoreTextBuilder = class extends (_b277 = SingleStoreColumnBuilder, _a373 = entityKind, _b277) {
+    SingleStoreTextBuilder = class extends (_b293 = SingleStoreColumnBuilder, _a389 = entityKind, _b293) {
       constructor(name2, textType, config) {
         super(name2, "string", "SingleStoreText");
         this.config.textType = textType;
@@ -42414,8 +42774,8 @@ var init_text4 = __esm({
         );
       }
     };
-    __publicField(SingleStoreTextBuilder, _a373, "SingleStoreTextBuilder");
-    SingleStoreText = class extends (_b278 = SingleStoreColumn, _a374 = entityKind, _b278) {
+    __publicField(SingleStoreTextBuilder, _a389, "SingleStoreTextBuilder");
+    SingleStoreText = class extends (_b294 = SingleStoreColumn, _a390 = entityKind, _b294) {
       constructor() {
         super(...arguments);
         __publicField(this, "textType", this.config.textType);
@@ -42425,7 +42785,7 @@ var init_text4 = __esm({
         return this.textType;
       }
     };
-    __publicField(SingleStoreText, _a374, "SingleStoreText");
+    __publicField(SingleStoreText, _a390, "SingleStoreText");
   }
 });
 
@@ -42433,13 +42793,13 @@ var init_text4 = __esm({
 function time3(name2) {
   return new SingleStoreTimeBuilder(name2 ?? "");
 }
-var _a375, _b279, SingleStoreTimeBuilder, _a376, _b280, SingleStoreTime;
+var _a391, _b295, SingleStoreTimeBuilder, _a392, _b296, SingleStoreTime;
 var init_time3 = __esm({
   "../drizzle-orm/dist/singlestore-core/columns/time.js"() {
     "use strict";
     init_entity();
     init_common5();
-    SingleStoreTimeBuilder = class extends (_b279 = SingleStoreColumnBuilder, _a375 = entityKind, _b279) {
+    SingleStoreTimeBuilder = class extends (_b295 = SingleStoreColumnBuilder, _a391 = entityKind, _b295) {
       constructor(name2) {
         super(name2, "string", "SingleStoreTime");
       }
@@ -42451,25 +42811,25 @@ var init_time3 = __esm({
         );
       }
     };
-    __publicField(SingleStoreTimeBuilder, _a375, "SingleStoreTimeBuilder");
-    SingleStoreTime = class extends (_b280 = SingleStoreColumn, _a376 = entityKind, _b280) {
+    __publicField(SingleStoreTimeBuilder, _a391, "SingleStoreTimeBuilder");
+    SingleStoreTime = class extends (_b296 = SingleStoreColumn, _a392 = entityKind, _b296) {
       getSQLType() {
         return `time`;
       }
     };
-    __publicField(SingleStoreTime, _a376, "SingleStoreTime");
+    __publicField(SingleStoreTime, _a392, "SingleStoreTime");
   }
 });
 
 // ../drizzle-orm/dist/singlestore-core/columns/date.common.js
-var _a377, _b281, SingleStoreDateColumnBaseBuilder, _a378, _b282, SingleStoreDateBaseColumn;
+var _a393, _b297, SingleStoreDateColumnBaseBuilder, _a394, _b298, SingleStoreDateBaseColumn;
 var init_date_common3 = __esm({
   "../drizzle-orm/dist/singlestore-core/columns/date.common.js"() {
     "use strict";
     init_entity();
     init_sql();
     init_common5();
-    SingleStoreDateColumnBaseBuilder = class extends (_b281 = SingleStoreColumnBuilder, _a377 = entityKind, _b281) {
+    SingleStoreDateColumnBaseBuilder = class extends (_b297 = SingleStoreColumnBuilder, _a393 = entityKind, _b297) {
       defaultNow() {
         return this.default(sql`now()`);
       }
@@ -42479,14 +42839,14 @@ var init_date_common3 = __esm({
         return this;
       }
     };
-    __publicField(SingleStoreDateColumnBaseBuilder, _a377, "SingleStoreDateColumnBuilder");
-    SingleStoreDateBaseColumn = class extends (_b282 = SingleStoreColumn, _a378 = entityKind, _b282) {
+    __publicField(SingleStoreDateColumnBaseBuilder, _a393, "SingleStoreDateColumnBuilder");
+    SingleStoreDateBaseColumn = class extends (_b298 = SingleStoreColumn, _a394 = entityKind, _b298) {
       constructor() {
         super(...arguments);
         __publicField(this, "hasOnUpdateNow", this.config.hasOnUpdateNow);
       }
     };
-    __publicField(SingleStoreDateBaseColumn, _a378, "SingleStoreDateColumn");
+    __publicField(SingleStoreDateBaseColumn, _a394, "SingleStoreDateColumn");
   }
 });
 
@@ -42498,7 +42858,7 @@ function timestamp3(a, b = {}) {
   }
   return new SingleStoreTimestampBuilder(name2);
 }
-var _a379, _b283, SingleStoreTimestampBuilder, _a380, _b284, SingleStoreTimestamp, _a381, _b285, SingleStoreTimestampStringBuilder, _a382, _b286, SingleStoreTimestampString;
+var _a395, _b299, SingleStoreTimestampBuilder, _a396, _b300, SingleStoreTimestamp, _a397, _b301, SingleStoreTimestampStringBuilder, _a398, _b302, SingleStoreTimestampString;
 var init_timestamp3 = __esm({
   "../drizzle-orm/dist/singlestore-core/columns/timestamp.js"() {
     "use strict";
@@ -42506,7 +42866,7 @@ var init_timestamp3 = __esm({
     init_sql();
     init_utils2();
     init_date_common3();
-    SingleStoreTimestampBuilder = class extends (_b283 = SingleStoreDateColumnBaseBuilder, _a379 = entityKind, _b283) {
+    SingleStoreTimestampBuilder = class extends (_b299 = SingleStoreDateColumnBaseBuilder, _a395 = entityKind, _b299) {
       constructor(name2) {
         super(name2, "date", "SingleStoreTimestamp");
       }
@@ -42521,8 +42881,8 @@ var init_timestamp3 = __esm({
         return this.default(sql`CURRENT_TIMESTAMP`);
       }
     };
-    __publicField(SingleStoreTimestampBuilder, _a379, "SingleStoreTimestampBuilder");
-    SingleStoreTimestamp = class extends (_b284 = SingleStoreDateBaseColumn, _a380 = entityKind, _b284) {
+    __publicField(SingleStoreTimestampBuilder, _a395, "SingleStoreTimestampBuilder");
+    SingleStoreTimestamp = class extends (_b300 = SingleStoreDateBaseColumn, _a396 = entityKind, _b300) {
       getSQLType() {
         return `timestamp`;
       }
@@ -42533,8 +42893,8 @@ var init_timestamp3 = __esm({
         return value.toISOString().slice(0, -1).replace("T", " ");
       }
     };
-    __publicField(SingleStoreTimestamp, _a380, "SingleStoreTimestamp");
-    SingleStoreTimestampStringBuilder = class extends (_b285 = SingleStoreDateColumnBaseBuilder, _a381 = entityKind, _b285) {
+    __publicField(SingleStoreTimestamp, _a396, "SingleStoreTimestamp");
+    SingleStoreTimestampStringBuilder = class extends (_b301 = SingleStoreDateColumnBaseBuilder, _a397 = entityKind, _b301) {
       constructor(name2) {
         super(name2, "string", "SingleStoreTimestampString");
       }
@@ -42549,13 +42909,13 @@ var init_timestamp3 = __esm({
         return this.default(sql`CURRENT_TIMESTAMP`);
       }
     };
-    __publicField(SingleStoreTimestampStringBuilder, _a381, "SingleStoreTimestampStringBuilder");
-    SingleStoreTimestampString = class extends (_b286 = SingleStoreDateBaseColumn, _a382 = entityKind, _b286) {
+    __publicField(SingleStoreTimestampStringBuilder, _a397, "SingleStoreTimestampStringBuilder");
+    SingleStoreTimestampString = class extends (_b302 = SingleStoreDateBaseColumn, _a398 = entityKind, _b302) {
       getSQLType() {
         return `timestamp`;
       }
     };
-    __publicField(SingleStoreTimestampString, _a382, "SingleStoreTimestampString");
+    __publicField(SingleStoreTimestampString, _a398, "SingleStoreTimestampString");
   }
 });
 
@@ -42564,14 +42924,14 @@ function tinyint2(a, b) {
   const { name: name2, config } = getColumnNameAndConfig(a, b);
   return new SingleStoreTinyIntBuilder(name2, config);
 }
-var _a383, _b287, SingleStoreTinyIntBuilder, _a384, _b288, SingleStoreTinyInt;
+var _a399, _b303, SingleStoreTinyIntBuilder, _a400, _b304, SingleStoreTinyInt;
 var init_tinyint2 = __esm({
   "../drizzle-orm/dist/singlestore-core/columns/tinyint.js"() {
     "use strict";
     init_entity();
     init_utils2();
     init_common5();
-    SingleStoreTinyIntBuilder = class extends (_b287 = SingleStoreColumnBuilderWithAutoIncrement, _a383 = entityKind, _b287) {
+    SingleStoreTinyIntBuilder = class extends (_b303 = SingleStoreColumnBuilderWithAutoIncrement, _a399 = entityKind, _b303) {
       constructor(name2, config) {
         super(name2, "number", "SingleStoreTinyInt");
         this.config.unsigned = config ? config.unsigned : false;
@@ -42584,8 +42944,8 @@ var init_tinyint2 = __esm({
         );
       }
     };
-    __publicField(SingleStoreTinyIntBuilder, _a383, "SingleStoreTinyIntBuilder");
-    SingleStoreTinyInt = class extends (_b288 = SingleStoreColumnWithAutoIncrement, _a384 = entityKind, _b288) {
+    __publicField(SingleStoreTinyIntBuilder, _a399, "SingleStoreTinyIntBuilder");
+    SingleStoreTinyInt = class extends (_b304 = SingleStoreColumnWithAutoIncrement, _a400 = entityKind, _b304) {
       getSQLType() {
         return `tinyint${this.config.unsigned ? " unsigned" : ""}`;
       }
@@ -42596,7 +42956,7 @@ var init_tinyint2 = __esm({
         return value;
       }
     };
-    __publicField(SingleStoreTinyInt, _a384, "SingleStoreTinyInt");
+    __publicField(SingleStoreTinyInt, _a400, "SingleStoreTinyInt");
   }
 });
 
@@ -42605,14 +42965,14 @@ function varbinary2(a, b) {
   const { name: name2, config } = getColumnNameAndConfig(a, b);
   return new SingleStoreVarBinaryBuilder(name2, config);
 }
-var _a385, _b289, SingleStoreVarBinaryBuilder, _a386, _b290, SingleStoreVarBinary;
+var _a401, _b305, SingleStoreVarBinaryBuilder, _a402, _b306, SingleStoreVarBinary;
 var init_varbinary2 = __esm({
   "../drizzle-orm/dist/singlestore-core/columns/varbinary.js"() {
     "use strict";
     init_entity();
     init_utils2();
     init_common5();
-    SingleStoreVarBinaryBuilder = class extends (_b289 = SingleStoreColumnBuilder, _a385 = entityKind, _b289) {
+    SingleStoreVarBinaryBuilder = class extends (_b305 = SingleStoreColumnBuilder, _a401 = entityKind, _b305) {
       /** @internal */
       constructor(name2, config) {
         super(name2, "string", "SingleStoreVarBinary");
@@ -42626,17 +42986,28 @@ var init_varbinary2 = __esm({
         );
       }
     };
-    __publicField(SingleStoreVarBinaryBuilder, _a385, "SingleStoreVarBinaryBuilder");
-    SingleStoreVarBinary = class extends (_b290 = SingleStoreColumn, _a386 = entityKind, _b290) {
+    __publicField(SingleStoreVarBinaryBuilder, _a401, "SingleStoreVarBinaryBuilder");
+    SingleStoreVarBinary = class extends (_b306 = SingleStoreColumn, _a402 = entityKind, _b306) {
       constructor() {
         super(...arguments);
         __publicField(this, "length", this.config.length);
       }
+      mapFromDriverValue(value) {
+        if (typeof value === "string")
+          return value;
+        if (Buffer.isBuffer(value))
+          return value.toString();
+        const str = [];
+        for (const v of value) {
+          str.push(v === 49 ? "1" : "0");
+        }
+        return str.join("");
+      }
       getSQLType() {
         return this.length === void 0 ? `varbinary` : `varbinary(${this.length})`;
       }
     };
-    __publicField(SingleStoreVarBinary, _a386, "SingleStoreVarBinary");
+    __publicField(SingleStoreVarBinary, _a402, "SingleStoreVarBinary");
   }
 });
 
@@ -42645,14 +43016,14 @@ function varchar3(a, b) {
   const { name: name2, config } = getColumnNameAndConfig(a, b);
   return new SingleStoreVarCharBuilder(name2, config);
 }
-var _a387, _b291, SingleStoreVarCharBuilder, _a388, _b292, SingleStoreVarChar;
+var _a403, _b307, SingleStoreVarCharBuilder, _a404, _b308, SingleStoreVarChar;
 var init_varchar3 = __esm({
   "../drizzle-orm/dist/singlestore-core/columns/varchar.js"() {
     "use strict";
     init_entity();
     init_utils2();
     init_common5();
-    SingleStoreVarCharBuilder = class extends (_b291 = SingleStoreColumnBuilder, _a387 = entityKind, _b291) {
+    SingleStoreVarCharBuilder = class extends (_b307 = SingleStoreColumnBuilder, _a403 = entityKind, _b307) {
       /** @internal */
       constructor(name2, config) {
         super(name2, "string", "SingleStoreVarChar");
@@ -42667,8 +43038,8 @@ var init_varchar3 = __esm({
         );
       }
     };
-    __publicField(SingleStoreVarCharBuilder, _a387, "SingleStoreVarCharBuilder");
-    SingleStoreVarChar = class extends (_b292 = SingleStoreColumn, _a388 = entityKind, _b292) {
+    __publicField(SingleStoreVarCharBuilder, _a403, "SingleStoreVarCharBuilder");
+    SingleStoreVarChar = class extends (_b308 = SingleStoreColumn, _a404 = entityKind, _b308) {
       constructor() {
         super(...arguments);
         __publicField(this, "length", this.config.length);
@@ -42678,7 +43049,7 @@ var init_varchar3 = __esm({
         return this.length === void 0 ? `varchar` : `varchar(${this.length})`;
       }
     };
-    __publicField(SingleStoreVarChar, _a388, "SingleStoreVarChar");
+    __publicField(SingleStoreVarChar, _a404, "SingleStoreVarChar");
   }
 });
 
@@ -42687,14 +43058,14 @@ function vector2(a, b) {
   const { name: name2, config } = getColumnNameAndConfig(a, b);
   return new SingleStoreVectorBuilder(name2, config);
 }
-var _a389, _b293, SingleStoreVectorBuilder, _a390, _b294, SingleStoreVector;
+var _a405, _b309, SingleStoreVectorBuilder, _a406, _b310, SingleStoreVector;
 var init_vector4 = __esm({
   "../drizzle-orm/dist/singlestore-core/columns/vector.js"() {
     "use strict";
     init_entity();
     init_utils2();
     init_common5();
-    SingleStoreVectorBuilder = class extends (_b293 = SingleStoreColumnBuilder, _a389 = entityKind, _b293) {
+    SingleStoreVectorBuilder = class extends (_b309 = SingleStoreColumnBuilder, _a405 = entityKind, _b309) {
       constructor(name2, config) {
         super(name2, "array", "SingleStoreVector");
         this.config.dimensions = config.dimensions;
@@ -42712,8 +43083,8 @@ var init_vector4 = __esm({
         throw new Error("not implemented");
       }
     };
-    __publicField(SingleStoreVectorBuilder, _a389, "SingleStoreVectorBuilder");
-    SingleStoreVector = class extends (_b294 = SingleStoreColumn, _a390 = entityKind, _b294) {
+    __publicField(SingleStoreVectorBuilder, _a405, "SingleStoreVectorBuilder");
+    SingleStoreVector = class extends (_b310 = SingleStoreColumn, _a406 = entityKind, _b310) {
       constructor() {
         super(...arguments);
         __publicField(this, "dimensions", this.config.dimensions);
@@ -42729,7 +43100,7 @@ var init_vector4 = __esm({
         return JSON.parse(value);
       }
     };
-    __publicField(SingleStoreVector, _a390, "SingleStoreVector");
+    __publicField(SingleStoreVector, _a406, "SingleStoreVector");
   }
 });
 
@@ -42737,13 +43108,13 @@ var init_vector4 = __esm({
 function year2(name2) {
   return new SingleStoreYearBuilder(name2 ?? "");
 }
-var _a391, _b295, SingleStoreYearBuilder, _a392, _b296, SingleStoreYear;
+var _a407, _b311, SingleStoreYearBuilder, _a408, _b312, SingleStoreYear;
 var init_year2 = __esm({
   "../drizzle-orm/dist/singlestore-core/columns/year.js"() {
     "use strict";
     init_entity();
     init_common5();
-    SingleStoreYearBuilder = class extends (_b295 = SingleStoreColumnBuilder, _a391 = entityKind, _b295) {
+    SingleStoreYearBuilder = class extends (_b311 = SingleStoreColumnBuilder, _a407 = entityKind, _b311) {
       constructor(name2) {
         super(name2, "number", "SingleStoreYear");
       }
@@ -42755,13 +43126,13 @@ var init_year2 = __esm({
         );
       }
     };
-    __publicField(SingleStoreYearBuilder, _a391, "SingleStoreYearBuilder");
-    SingleStoreYear = class extends (_b296 = SingleStoreColumn, _a392 = entityKind, _b296) {
+    __publicField(SingleStoreYearBuilder, _a407, "SingleStoreYearBuilder");
+    SingleStoreYear = class extends (_b312 = SingleStoreColumn, _a408 = entityKind, _b312) {
       getSQLType() {
         return `year`;
       }
     };
-    __publicField(SingleStoreYear, _a392, "SingleStoreYear");
+    __publicField(SingleStoreYear, _a408, "SingleStoreYear");
   }
 });
 
@@ -42799,17 +43170,17 @@ var init_columns4 = __esm({
 });
 
 // ../drizzle-orm/dist/singlestore-core/query-builders/count.js
-var _a393, _b297, _c12, _SingleStoreCountBuilder, SingleStoreCountBuilder;
+var _a409, _b313, _c12, _SingleStoreCountBuilder, SingleStoreCountBuilder;
 var init_count4 = __esm({
   "../drizzle-orm/dist/singlestore-core/query-builders/count.js"() {
     "use strict";
     init_entity();
     init_sql();
-    _SingleStoreCountBuilder = class _SingleStoreCountBuilder extends (_c12 = SQL, _b297 = entityKind, _a393 = Symbol.toStringTag, _c12) {
+    _SingleStoreCountBuilder = class _SingleStoreCountBuilder extends (_c12 = SQL, _b313 = entityKind, _a409 = Symbol.toStringTag, _c12) {
       constructor(params) {
         super(_SingleStoreCountBuilder.buildEmbeddedCount(params.source, params.filters).queryChunks);
         __publicField(this, "sql");
-        __publicField(this, _a393, "SingleStoreCountBuilder");
+        __publicField(this, _a409, "SingleStoreCountBuilder");
         __publicField(this, "session");
         this.params = params;
         this.mapWith(Number);
@@ -42847,13 +43218,13 @@ var init_count4 = __esm({
         );
       }
     };
-    __publicField(_SingleStoreCountBuilder, _b297, "SingleStoreCountBuilder");
+    __publicField(_SingleStoreCountBuilder, _b313, "SingleStoreCountBuilder");
     SingleStoreCountBuilder = _SingleStoreCountBuilder;
   }
 });
 
 // ../drizzle-orm/dist/singlestore-core/query-builders/delete.js
-var _a394, _b298, SingleStoreDeleteBase;
+var _a410, _b314, SingleStoreDeleteBase;
 var init_delete4 = __esm({
   "../drizzle-orm/dist/singlestore-core/query-builders/delete.js"() {
     "use strict";
@@ -42861,7 +43232,7 @@ var init_delete4 = __esm({
     init_query_promise();
     init_selection_proxy();
     init_table();
-    SingleStoreDeleteBase = class extends (_b298 = QueryPromise, _a394 = entityKind, _b298) {
+    SingleStoreDeleteBase = class extends (_b314 = QueryPromise, _a410 = entityKind, _b314) {
       constructor(table6, session, dialect6, withList) {
         super();
         __publicField(this, "config");
@@ -42951,12 +43322,12 @@ var init_delete4 = __esm({
         return this;
       }
     };
-    __publicField(SingleStoreDeleteBase, _a394, "SingleStoreDelete");
+    __publicField(SingleStoreDeleteBase, _a410, "SingleStoreDelete");
   }
 });
 
 // ../drizzle-orm/dist/singlestore-core/query-builders/insert.js
-var _a395, SingleStoreInsertBuilder, _a396, _b299, SingleStoreInsertBase;
+var _a411, SingleStoreInsertBuilder, _a412, _b315, SingleStoreInsertBase;
 var init_insert4 = __esm({
   "../drizzle-orm/dist/singlestore-core/query-builders/insert.js"() {
     "use strict";
@@ -42965,7 +43336,7 @@ var init_insert4 = __esm({
     init_sql();
     init_table();
     init_utils2();
-    _a395 = entityKind;
+    _a411 = entityKind;
     SingleStoreInsertBuilder = class {
       constructor(table6, session, dialect6) {
         __publicField(this, "shouldIgnore", false);
@@ -42994,8 +43365,8 @@ var init_insert4 = __esm({
         return new SingleStoreInsertBase(this.table, mappedValues, this.shouldIgnore, this.session, this.dialect);
       }
     };
-    __publicField(SingleStoreInsertBuilder, _a395, "SingleStoreInsertBuilder");
-    SingleStoreInsertBase = class extends (_b299 = QueryPromise, _a396 = entityKind, _b299) {
+    __publicField(SingleStoreInsertBuilder, _a411, "SingleStoreInsertBuilder");
+    SingleStoreInsertBase = class extends (_b315 = QueryPromise, _a412 = entityKind, _b315) {
       constructor(table6, values, ignore, session, dialect6) {
         super();
         __publicField(this, "config");
@@ -43076,7 +43447,7 @@ var init_insert4 = __esm({
         return this;
       }
     };
-    __publicField(SingleStoreInsertBase, _a396, "SingleStoreInsert");
+    __publicField(SingleStoreInsertBase, _a412, "SingleStoreInsert");
   }
 });
 
@@ -43164,20 +43535,20 @@ function singlestoreTableWithSchema(name2, columns, extraConfig, schema5, baseNa
   }
   return table6;
 }
-var _a397, _b300, _c13, _d5, SingleStoreTable;
+var _a413, _b316, _c13, _d5, SingleStoreTable;
 var init_table5 = __esm({
   "../drizzle-orm/dist/singlestore-core/table.js"() {
     "use strict";
     init_entity();
     init_table();
     init_all4();
-    SingleStoreTable = class extends (_d5 = Table2, _c13 = entityKind, _b300 = Table2.Symbol.Columns, _a397 = Table2.Symbol.ExtraConfigBuilder, _d5) {
+    SingleStoreTable = class extends (_d5 = Table2, _c13 = entityKind, _b316 = Table2.Symbol.Columns, _a413 = Table2.Symbol.ExtraConfigBuilder, _d5) {
       constructor() {
         super(...arguments);
         /** @internal */
-        __publicField(this, _b300);
+        __publicField(this, _b316);
         /** @internal */
-        __publicField(this, _a397);
+        __publicField(this, _a413);
       }
     };
     __publicField(SingleStoreTable, _c13, "SingleStoreTable");
@@ -43187,7 +43558,7 @@ var init_table5 = __esm({
 });
 
 // ../drizzle-orm/dist/singlestore-core/dialect.js
-var _a398, SingleStoreDialect;
+var _a414, SingleStoreDialect;
 var init_dialect4 = __esm({
   "../drizzle-orm/dist/singlestore-core/dialect.js"() {
     "use strict";
@@ -43205,7 +43576,7 @@ var init_dialect4 = __esm({
     init_view_common();
     init_common5();
     init_table5();
-    _a398 = entityKind;
+    _a414 = entityKind;
     SingleStoreDialect = class {
       constructor(config) {
         /** @internal */
@@ -43382,8 +43753,8 @@ var init_dialect4 = __esm({
         const distinctSql = distinct ? sql` distinct` : void 0;
         const selection = this.buildSelection(fieldsList, { isSingleTable });
         const tableSql = (() => {
-          if (is(table6, Table2) && table6[Table2.Symbol.OriginalName] !== table6[Table2.Symbol.Name]) {
-            return sql`${sql.identifier(table6[Table2.Symbol.OriginalName])} ${sql.identifier(table6[Table2.Symbol.Name])}`;
+          if (is(table6, Table2) && table6[Table2.Symbol.IsAlias]) {
+            return sql`${sql`${sql.identifier(table6[Table2.Symbol.Schema] ?? "")}.`.if(table6[Table2.Symbol.Schema])}${sql.identifier(table6[Table2.Symbol.OriginalName])} ${sql.identifier(table6[Table2.Symbol.Name])}`;
           }
           return table6;
         })();
@@ -43770,7 +44141,7 @@ var init_dialect4 = __esm({
         };
       }
     };
-    __publicField(SingleStoreDialect, _a398, "SingleStoreDialect");
+    __publicField(SingleStoreDialect, _a414, "SingleStoreDialect");
   }
 });
 
@@ -43792,7 +44163,7 @@ function createSetOperator4(type, isAll) {
     return leftSelect.addSetOperators(setOperators);
   };
 }
-var _a399, SingleStoreSelectBuilder, _a400, _b301, SingleStoreSelectQueryBuilderBase, _a401, _b302, SingleStoreSelectBase, getSingleStoreSetOperators, union5, unionAll4, intersect4, except4, minus;
+var _a415, SingleStoreSelectBuilder, _a416, _b317, SingleStoreSelectQueryBuilderBase, _a417, _b318, SingleStoreSelectBase, getSingleStoreSetOperators, union5, unionAll4, intersect4, except4, minus;
 var init_select5 = __esm({
   "../drizzle-orm/dist/singlestore-core/query-builders/select.js"() {
     "use strict";
@@ -43804,7 +44175,7 @@ var init_select5 = __esm({
     init_subquery();
     init_table();
     init_utils2();
-    _a399 = entityKind;
+    _a415 = entityKind;
     SingleStoreSelectBuilder = class {
       constructor(config) {
         __publicField(this, "fields");
@@ -43847,8 +44218,8 @@ var init_select5 = __esm({
         );
       }
     };
-    __publicField(SingleStoreSelectBuilder, _a399, "SingleStoreSelectBuilder");
-    SingleStoreSelectQueryBuilderBase = class extends (_b301 = TypedQueryBuilder, _a400 = entityKind, _b301) {
+    __publicField(SingleStoreSelectBuilder, _a415, "SingleStoreSelectBuilder");
+    SingleStoreSelectQueryBuilderBase = class extends (_b317 = TypedQueryBuilder, _a416 = entityKind, _b317) {
       constructor({ table: table6, fields, isPartialSelect, session, dialect: dialect6, withList, distinct }) {
         super();
         __publicField(this, "_");
@@ -44119,7 +44490,7 @@ var init_select5 = __esm({
         return (table6, on) => {
           const baseTableName = this.tableName;
           const tableName = getTableLikeName(table6);
-          if (typeof tableName === "string" && this.config.joins?.some((join) => join.alias === tableName)) {
+          if (typeof tableName === "string" && this.config.joins?.some((join2) => join2.alias === tableName)) {
             throw new Error(`Alias "${tableName}" is already used in this query`);
           }
           if (!this.isPartialSelect) {
@@ -44389,8 +44760,8 @@ var init_select5 = __esm({
         return this;
       }
     };
-    __publicField(SingleStoreSelectQueryBuilderBase, _a400, "SingleStoreSelectQueryBuilder");
-    SingleStoreSelectBase = class extends (_b302 = SingleStoreSelectQueryBuilderBase, _a401 = entityKind, _b302) {
+    __publicField(SingleStoreSelectQueryBuilderBase, _a416, "SingleStoreSelectQueryBuilder");
+    SingleStoreSelectBase = class extends (_b318 = SingleStoreSelectQueryBuilderBase, _a417 = entityKind, _b318) {
       constructor() {
         super(...arguments);
         __publicField(this, "execute", (placeholderValues) => {
@@ -44414,7 +44785,7 @@ var init_select5 = __esm({
         return query;
       }
     };
-    __publicField(SingleStoreSelectBase, _a401, "SingleStoreSelect");
+    __publicField(SingleStoreSelectBase, _a417, "SingleStoreSelect");
     applyMixins(SingleStoreSelectBase, [QueryPromise]);
     getSingleStoreSetOperators = () => ({
       union: union5,
@@ -44432,7 +44803,7 @@ var init_select5 = __esm({
 });
 
 // ../drizzle-orm/dist/singlestore-core/query-builders/query-builder.js
-var _a402, QueryBuilder4;
+var _a418, QueryBuilder4;
 var init_query_builder5 = __esm({
   "../drizzle-orm/dist/singlestore-core/query-builders/query-builder.js"() {
     "use strict";
@@ -44441,7 +44812,7 @@ var init_query_builder5 = __esm({
     init_dialect4();
     init_subquery();
     init_select5();
-    _a402 = entityKind;
+    _a418 = entityKind;
     QueryBuilder4 = class {
       constructor(dialect6) {
         __publicField(this, "dialect");
@@ -44511,7 +44882,7 @@ var init_query_builder5 = __esm({
         return this.dialect;
       }
     };
-    __publicField(QueryBuilder4, _a402, "SingleStoreQueryBuilder");
+    __publicField(QueryBuilder4, _a418, "SingleStoreQueryBuilder");
   }
 });
 
@@ -44523,7 +44894,7 @@ var init_select_types4 = __esm({
 });
 
 // ../drizzle-orm/dist/singlestore-core/query-builders/update.js
-var _a403, SingleStoreUpdateBuilder, _a404, _b303, SingleStoreUpdateBase;
+var _a419, SingleStoreUpdateBuilder, _a420, _b319, SingleStoreUpdateBase;
 var init_update4 = __esm({
   "../drizzle-orm/dist/singlestore-core/query-builders/update.js"() {
     "use strict";
@@ -44532,7 +44903,7 @@ var init_update4 = __esm({
     init_selection_proxy();
     init_table();
     init_utils2();
-    _a403 = entityKind;
+    _a419 = entityKind;
     SingleStoreUpdateBuilder = class {
       constructor(table6, session, dialect6, withList) {
         this.table = table6;
@@ -44550,8 +44921,8 @@ var init_update4 = __esm({
         );
       }
     };
-    __publicField(SingleStoreUpdateBuilder, _a403, "SingleStoreUpdateBuilder");
-    SingleStoreUpdateBase = class extends (_b303 = QueryPromise, _a404 = entityKind, _b303) {
+    __publicField(SingleStoreUpdateBuilder, _a419, "SingleStoreUpdateBuilder");
+    SingleStoreUpdateBase = class extends (_b319 = QueryPromise, _a420 = entityKind, _b319) {
       constructor(table6, set, session, dialect6, withList) {
         super();
         __publicField(this, "config");
@@ -44644,7 +45015,7 @@ var init_update4 = __esm({
         return this;
       }
     };
-    __publicField(SingleStoreUpdateBase, _a404, "SingleStoreUpdate");
+    __publicField(SingleStoreUpdateBase, _a420, "SingleStoreUpdate");
   }
 });
 
@@ -44662,7 +45033,7 @@ var init_query_builders4 = __esm({
 });
 
 // ../drizzle-orm/dist/singlestore-core/db.js
-var _a405, SingleStoreDatabase;
+var _a421, SingleStoreDatabase;
 var init_db4 = __esm({
   "../drizzle-orm/dist/singlestore-core/db.js"() {
     "use strict";
@@ -44672,7 +45043,7 @@ var init_db4 = __esm({
     init_subquery();
     init_count4();
     init_query_builders4();
-    _a405 = entityKind;
+    _a421 = entityKind;
     SingleStoreDatabase = class {
       constructor(dialect6, session, schema5) {
         // We are waiting for SingleStore support for `json_array` function
@@ -44876,17 +45247,17 @@ var init_db4 = __esm({
         return this.session.transaction(transaction, config);
       }
     };
-    __publicField(SingleStoreDatabase, _a405, "SingleStoreDatabase");
+    __publicField(SingleStoreDatabase, _a421, "SingleStoreDatabase");
   }
 });
 
 // ../drizzle-orm/dist/singlestore-core/indexes.js
-var _a406, IndexBuilderOn4, _a407, IndexBuilder4, _a408, Index6;
+var _a422, IndexBuilderOn4, _a423, IndexBuilder4, _a424, Index6;
 var init_indexes4 = __esm({
   "../drizzle-orm/dist/singlestore-core/indexes.js"() {
     "use strict";
     init_entity();
-    _a406 = entityKind;
+    _a422 = entityKind;
     IndexBuilderOn4 = class {
       constructor(name2, unique) {
         this.name = name2;
@@ -44896,8 +45267,8 @@ var init_indexes4 = __esm({
         return new IndexBuilder4(this.name, columns, this.unique);
       }
     };
-    __publicField(IndexBuilderOn4, _a406, "SingleStoreIndexBuilderOn");
-    _a407 = entityKind;
+    __publicField(IndexBuilderOn4, _a422, "SingleStoreIndexBuilderOn");
+    _a423 = entityKind;
     IndexBuilder4 = class {
       constructor(name2, columns, unique) {
         /** @internal */
@@ -44925,26 +45296,26 @@ var init_indexes4 = __esm({
         return new Index6(this.config, table6);
       }
     };
-    __publicField(IndexBuilder4, _a407, "SingleStoreIndexBuilder");
-    _a408 = entityKind;
+    __publicField(IndexBuilder4, _a423, "SingleStoreIndexBuilder");
+    _a424 = entityKind;
     Index6 = class {
       constructor(config, table6) {
         __publicField(this, "config");
         this.config = { ...config, table: table6 };
       }
     };
-    __publicField(Index6, _a408, "SingleStoreIndex");
+    __publicField(Index6, _a424, "SingleStoreIndex");
   }
 });
 
 // ../drizzle-orm/dist/singlestore-core/primary-keys.js
-var _a409, PrimaryKeyBuilder4, _a410, PrimaryKey4;
+var _a425, PrimaryKeyBuilder4, _a426, PrimaryKey4;
 var init_primary_keys4 = __esm({
   "../drizzle-orm/dist/singlestore-core/primary-keys.js"() {
     "use strict";
     init_entity();
     init_table5();
-    _a409 = entityKind;
+    _a425 = entityKind;
     PrimaryKeyBuilder4 = class {
       constructor(columns, name2) {
         /** @internal */
@@ -44959,8 +45330,8 @@ var init_primary_keys4 = __esm({
         return new PrimaryKey4(table6, this.columns, this.name);
       }
     };
-    __publicField(PrimaryKeyBuilder4, _a409, "SingleStorePrimaryKeyBuilder");
-    _a410 = entityKind;
+    __publicField(PrimaryKeyBuilder4, _a425, "SingleStorePrimaryKeyBuilder");
+    _a426 = entityKind;
     PrimaryKey4 = class {
       constructor(table6, columns, name2) {
         __publicField(this, "columns");
@@ -44973,18 +45344,18 @@ var init_primary_keys4 = __esm({
         return this.name ?? `${this.table[SingleStoreTable.Symbol.Name]}_${this.columns.map((column6) => column6.name).join("_")}_pk`;
       }
     };
-    __publicField(PrimaryKey4, _a410, "SingleStorePrimaryKey");
+    __publicField(PrimaryKey4, _a426, "SingleStorePrimaryKey");
   }
 });
 
 // ../drizzle-orm/dist/singlestore-core/schema.js
-var _a411, SingleStoreSchema5;
+var _a427, SingleStoreSchema5;
 var init_schema3 = __esm({
   "../drizzle-orm/dist/singlestore-core/schema.js"() {
     "use strict";
     init_entity();
     init_table5();
-    _a411 = entityKind;
+    _a427 = entityKind;
     SingleStoreSchema5 = class {
       constructor(schemaName) {
         __publicField(this, "table", (name2, columns, extraConfig) => {
@@ -44997,12 +45368,12 @@ var init_schema3 = __esm({
       	return singlestoreViewWithSchema(name, columns, this.schemaName);
       }) as typeof singlestoreView; */
     };
-    __publicField(SingleStoreSchema5, _a411, "SingleStoreSchema");
+    __publicField(SingleStoreSchema5, _a427, "SingleStoreSchema");
   }
 });
 
 // ../drizzle-orm/dist/singlestore-core/session.js
-var _a412, SingleStorePreparedQuery, _a413, SingleStoreSession, _a414, _b304, SingleStoreTransaction;
+var _a428, SingleStorePreparedQuery, _a429, SingleStoreSession, _a430, _b320, SingleStoreTransaction;
 var init_session4 = __esm({
   "../drizzle-orm/dist/singlestore-core/session.js"() {
     "use strict";
@@ -45010,15 +45381,15 @@ var init_session4 = __esm({
     init_errors();
     init_sql();
     init_db4();
-    _a412 = entityKind;
+    _a428 = entityKind;
     SingleStorePreparedQuery = class {
       constructor() {
         /** @internal */
         __publicField(this, "joinsNotNullableMap");
       }
     };
-    __publicField(SingleStorePreparedQuery, _a412, "SingleStorePreparedQuery");
-    _a413 = entityKind;
+    __publicField(SingleStorePreparedQuery, _a428, "SingleStorePreparedQuery");
+    _a429 = entityKind;
     SingleStoreSession = class {
       constructor(dialect6) {
         this.dialect = dialect6;
@@ -45053,8 +45424,8 @@ var init_session4 = __esm({
         return parts.length ? sql`start transaction ${sql.raw(parts.join(" "))}` : void 0;
       }
     };
-    __publicField(SingleStoreSession, _a413, "SingleStoreSession");
-    SingleStoreTransaction = class extends (_b304 = SingleStoreDatabase, _a414 = entityKind, _b304) {
+    __publicField(SingleStoreSession, _a429, "SingleStoreSession");
+    SingleStoreTransaction = class extends (_b320 = SingleStoreDatabase, _a430 = entityKind, _b320) {
       constructor(dialect6, session, schema5, nestedIndex) {
         super(dialect6, session, schema5);
         this.schema = schema5;
@@ -45064,7 +45435,7 @@ var init_session4 = __esm({
         throw new TransactionRollbackError();
       }
     };
-    __publicField(SingleStoreTransaction, _a414, "SingleStoreTransaction");
+    __publicField(SingleStoreTransaction, _a430, "SingleStoreTransaction");
   }
 });
 
@@ -45578,10 +45949,14 @@ __export(sqliteImports_exports, {
   prepareFromExports: () => prepareFromExports2,
   prepareFromSqliteImports: () => prepareFromSqliteImports
 });
+import * as esbuild from "esbuild";
+import { mkdtemp, rm } from "fs/promises";
+import { join, resolve } from "path";
 var prepareFromExports2, prepareFromSqliteImports;
 var init_sqliteImports = __esm({
   "src/serializer/sqliteImports.ts"() {
     "use strict";
+    init_source();
     init_dist();
     init_sqlite_core();
     init_utils9();
@@ -45603,13 +45978,20 @@ var init_sqliteImports = __esm({
       const tables = [];
       const views = [];
       const { unregister } = await safeRegister();
-      for (let i = 0; i < imports.length; i++) {
-        const it = imports[i];
-        const i0 = __require(`${it}`);
-        const prepared = prepareFromExports2(i0);
-        tables.push(...prepared.tables);
-        views.push(...prepared.views);
-      }
+      const outDir = await mkdtemp(".drizzle-kit.sqlite-imports-");
+      let outFile = resolve(join(outDir, "schema.js"));
+      console.log(source_default.grey(`Reading schema files '${JSON.stringify(imports)}'`));
+      const res = esbuild.buildSync({
+        entryPoints: imports,
+        bundle: true,
+        format: "cjs",
+        outfile: outFile
+      });
+      const i0 = __require(outFile);
+      const prepared = prepareFromExports2(i0);
+      await rm(outDir, { recursive: true });
+      tables.push(...prepared.tables);
+      views.push(...prepared.views);
       unregister();
       return { tables: Array.from(new Set(tables)), views };
     };
diff --git a/bin.cjs b/bin.cjs
index 70941f2a5aec6dcd1218e8a699fb5aafb4025f35..8096e9b22754e1890d63fae0edc16b1a12e12dfb 100755
--- a/bin.cjs
+++ b/bin.cjs
@@ -1191,11 +1191,11 @@ var require_hanji = __commonJS({
     "use strict";
     var __awaiter3 = exports2 && exports2.__awaiter || function(thisArg, _arguments, P, generator) {
       function adopt(value) {
-        return value instanceof P ? value : new P(function(resolve2) {
-          resolve2(value);
+        return value instanceof P ? value : new P(function(resolve3) {
+          resolve3(value);
         });
       }
-      return new (P || (P = Promise))(function(resolve2, reject) {
+      return new (P || (P = Promise))(function(resolve3, reject) {
         function fulfilled(value) {
           try {
             step(generator.next(value));
@@ -1211,7 +1211,7 @@ var require_hanji = __commonJS({
           }
         }
         function step(result) {
-          result.done ? resolve2(result.value) : adopt(result.value).then(fulfilled, rejected);
+          result.done ? resolve3(result.value) : adopt(result.value).then(fulfilled, rejected);
         }
         step((generator = generator.apply(thisArg, _arguments || [])).next());
       });
@@ -1285,14 +1285,14 @@ var require_hanji = __commonJS({
     };
     exports2.SelectState = SelectState3;
     var deferred = () => {
-      let resolve2;
+      let resolve3;
       let reject;
       const promise = new Promise((res, rej) => {
-        resolve2 = res;
+        resolve3 = res;
         reject = rej;
       });
       return {
-        resolve: resolve2,
+        resolve: resolve3,
         reject,
         promise
       };
@@ -1342,8 +1342,8 @@ var require_hanji = __commonJS({
         };
         this.stdin.on("keypress", keypress);
         this.view.attach(this);
-        const { resolve: resolve2, promise } = (0, exports2.deferred)();
-        this.resolve = resolve2;
+        const { resolve: resolve3, promise } = (0, exports2.deferred)();
+        this.resolve = resolve3;
         this.promise = promise;
         this.renderFunc = (0, lodash_throttle_1.default)((str) => {
           this.stdout.write(str);
@@ -7868,7 +7868,7 @@ function unescapeSingleQuotes(str, ignoreFirstAndLastChar) {
   const regex = ignoreFirstAndLastChar ? /(?<!^)'(?!$)/g : /'/g;
   return str.replace(/''/g, "'").replace(regex, "\\'");
 }
-var import_fs, import_path, import_url, copy, objectValues, assertV1OutFolder, dryJournal, prepareOutFolder, validatorForDialect, validateWithReport, prepareMigrationFolder, prepareMigrationMeta, schemaRenameKey, tableRenameKey, columnRenameKey, normaliseSQLiteUrl, normalisePGliteUrl;
+var import_fs, import_path, import_url, copy, objectValues, assertV1OutFolder, dryJournal, prepareOutFolder, validatorForDialect, validateWithReport, prepareMigrationFolder, prepareMigrationMeta, schemaRenameKey, tableRenameKey, columnRenameKey, mkdirSQLiteUrl, normaliseSQLiteUrl, normalisePGliteUrl;
 var init_utils2 = __esm({
   "src/utils.ts"() {
     "use strict";
@@ -8050,7 +8050,14 @@ var init_utils2 = __esm({
       const out = schema6 ? `"${schema6}"."${table6}"."${column11}"` : `"${table6}"."${column11}"`;
       return out;
     };
+    mkdirSQLiteUrl = (it) => {
+      if (it.startsWith("file:")) {
+        it = it.substring(5);
+      }
+      (0, import_fs.mkdirSync)((0, import_path.dirname)(it), { recursive: true });
+    };
     normaliseSQLiteUrl = (it, type) => {
+      mkdirSQLiteUrl(it);
       if (type === "libsql") {
         if (it.startsWith("file:")) {
           return it;
@@ -14174,7 +14181,7 @@ var require_node2 = __commonJS({
       function _interopRequireDefault(obj) {
         return obj && obj.__esModule ? obj : { default: obj };
       }
-      function asyncGeneratorStep(gen, resolve2, reject, _next, _throw, key, arg) {
+      function asyncGeneratorStep(gen, resolve3, reject, _next, _throw, key, arg) {
         try {
           var info2 = gen[key](arg);
           var value = info2.value;
@@ -14183,7 +14190,7 @@ var require_node2 = __commonJS({
           return;
         }
         if (info2.done) {
-          resolve2(value);
+          resolve3(value);
         } else {
           Promise.resolve(value).then(_next, _throw);
         }
@@ -14191,31 +14198,31 @@ var require_node2 = __commonJS({
       function _asyncToGenerator(fn) {
         return function() {
           var self2 = this, args = arguments;
-          return new Promise(function(resolve2, reject) {
+          return new Promise(function(resolve3, reject) {
             var gen = fn.apply(self2, args);
             function _next(value) {
-              asyncGeneratorStep(gen, resolve2, reject, _next, _throw, "next", value);
+              asyncGeneratorStep(gen, resolve3, reject, _next, _throw, "next", value);
             }
             function _throw(err2) {
-              asyncGeneratorStep(gen, resolve2, reject, _next, _throw, "throw", err2);
+              asyncGeneratorStep(gen, resolve3, reject, _next, _throw, "throw", err2);
             }
             _next(void 0);
           });
         };
       }
-      var readFile2 = (fp) => new Promise((resolve2, reject) => {
+      var readFile2 = (fp) => new Promise((resolve3, reject) => {
         _fs.default.readFile(fp, "utf8", (err2, data) => {
           if (err2)
             return reject(err2);
-          resolve2(data);
+          resolve3(data);
         });
       });
       var readFileSync3 = (fp) => {
         return _fs.default.readFileSync(fp, "utf8");
       };
-      var pathExists = (fp) => new Promise((resolve2) => {
+      var pathExists = (fp) => new Promise((resolve3) => {
         _fs.default.access(fp, (err2) => {
-          resolve2(!err2);
+          resolve3(!err2);
         });
       });
       var pathExistsSync = _fs.default.existsSync;
@@ -19997,12 +20004,16 @@ __export(sqliteImports_exports, {
   prepareFromExports: () => prepareFromExports3,
   prepareFromSqliteImports: () => prepareFromSqliteImports
 });
-var import_drizzle_orm5, import_sqlite_core, prepareFromExports3, prepareFromSqliteImports;
+var import_drizzle_orm5, import_sqlite_core, esbuild, import_promises2, import_path4, prepareFromExports3, prepareFromSqliteImports;
 var init_sqliteImports = __esm({
   "src/serializer/sqliteImports.ts"() {
     "use strict";
+    init_source();
     import_drizzle_orm5 = require("drizzle-orm");
     import_sqlite_core = require("drizzle-orm/sqlite-core");
+    esbuild = __toESM(require("esbuild"));
+    import_promises2 = require("fs/promises");
+    import_path4 = require("path");
     init_utils3();
     prepareFromExports3 = (exports2) => {
       const tables = [];
@@ -20022,13 +20033,20 @@ var init_sqliteImports = __esm({
       const tables = [];
       const views = [];
       const { unregister } = await safeRegister();
-      for (let i2 = 0; i2 < imports.length; i2++) {
-        const it = imports[i2];
-        const i0 = require(`${it}`);
-        const prepared = prepareFromExports3(i0);
-        tables.push(...prepared.tables);
-        views.push(...prepared.views);
-      }
+      const outDir = await (0, import_promises2.mkdtemp)(".drizzle-kit.sqlite-imports-");
+      let outFile = (0, import_path4.resolve)((0, import_path4.join)(outDir, "schema.js"));
+      console.log(source_default.grey(`Reading schema files '${JSON.stringify(imports)}'`));
+      const res = esbuild.buildSync({
+        entryPoints: imports,
+        bundle: true,
+        format: "cjs",
+        outfile: outFile
+      });
+      const i0 = require(outFile);
+      const prepared = prepareFromExports3(i0);
+      await (0, import_promises2.rm)(outDir, { recursive: true });
+      tables.push(...prepared.tables);
+      views.push(...prepared.views);
       unregister();
       return { tables: Array.from(new Set(tables)), views };
     };
@@ -20102,6 +20120,10 @@ function extractGeneratedColumns(input) {
   }
   return columns;
 }
+function ignoreTableNames(fieldName) {
+  return `(${fieldName} NOT IN ('sqlite_sequence','_litestream_seq', '_litestream_lock', 'libsql_wasm_func_table', '__drizzle_migrations') 
+		        and ${fieldName} NOT LIKE '_cf_%')`;
+}
 var import_drizzle_orm6, import_sqlite_core2, generateSqliteSnapshot, fromDatabase3;
 var init_sqliteSerializer = __esm({
   "src/serializer/sqliteSerializer.ts"() {
@@ -20410,23 +20432,15 @@ ${withStyle.errorWarning(
         `SELECT 
     m.name as "tableName", p.name as "columnName", p.type as "columnType", p."notnull" as "notNull", p.dflt_value as "defaultValue", p.pk as pk, p.hidden as hidden, m.sql, m.type as type
     FROM sqlite_master AS m JOIN pragma_table_xinfo(m.name) AS p
-    WHERE (m.type = 'table' OR m.type = 'view')
-    and m.tbl_name != 'sqlite_sequence' 
-    and m.tbl_name != 'sqlite_stat1' 
-    and m.tbl_name != '_litestream_seq' 
-    and m.tbl_name != '_litestream_lock' 
-    and m.tbl_name != 'libsql_wasm_func_table' 
-    and m.tbl_name != '__drizzle_migrations' 
-    and m.tbl_name != '_cf_KV';
+    WHERE (m.type = 'table' OR m.type = 'view') 
+	and ${ignoreTableNames("m.tbl_name")};
     `
       );
       const tablesWithSeq = [];
       const seq = await db.query(
         `SELECT * FROM sqlite_master WHERE name != 'sqlite_sequence' 
-    and name != 'sqlite_stat1' 
-    and name != '_litestream_seq' 
-    and name != '_litestream_lock' 
-    and tbl_name != '_cf_KV' 
+    and ${ignoreTableNames("name")}
+    and ${ignoreTableNames("tbl_name")}
     and sql GLOB '*[ *' || CHAR(9) || CHAR(10) || CHAR(13) || ']AUTOINCREMENT[^'']*';`
       );
       for (const s2 of seq) {
@@ -20526,7 +20540,7 @@ ${withStyle.errorWarning(
         const fks = await db.query(
           `SELECT m.name as "tableFrom", f.id as "id", f."table" as "tableTo", f."from", f."to", f."on_update" as "onUpdate", f."on_delete" as "onDelete", f.seq as "seq"
       FROM sqlite_master m, pragma_foreign_key_list(m.name) as f 
-      where m.tbl_name != '_cf_KV';`
+      where ${ignoreTableNames("m.tbl_name")};`
         );
         const fkByTableName = {};
         for (const fkRow of fks) {
@@ -20587,7 +20601,7 @@ FROM sqlite_master AS m,
 WHERE 
     m.type = 'table' 
     and il.name NOT LIKE 'sqlite_autoindex_%'
-    and m.tbl_name != '_cf_KV';`
+    and ${ignoreTableNames("m.tbl_name")};`
       );
       for (const idxRow of idxs) {
         const tableName = idxRow.tableName;
@@ -20650,7 +20664,7 @@ WHERE
       const checkConstraints = {};
       const checks = await db.query(`SELECT name as "tableName", sql as "sql"
 		FROM sqlite_master 
-		WHERE type = 'table' AND name != 'sqlite_sequence';`);
+		WHERE type = 'table' AND ${ignoreTableNames("name")};`);
       for (const check2 of checks) {
         if (!tablesFilter(check2.tableName))
           continue;
@@ -21199,14 +21213,14 @@ The unique index ${source_default.underline.blue(
 });
 
 // src/serializer/index.ts
-var import_fs4, glob, import_path4, serializeMySql, serializePg, serializeSQLite, serializeSingleStore, prepareFilenames;
+var import_fs4, glob, import_path5, serializeMySql, serializePg, serializeSQLite, serializeSingleStore, prepareFilenames;
 var init_serializer = __esm({
   "src/serializer/index.ts"() {
     "use strict";
     init_source();
     import_fs4 = __toESM(require("fs"));
     glob = __toESM(require_glob());
-    import_path4 = __toESM(require("path"));
+    import_path5 = __toESM(require("path"));
     init_views();
     serializeMySql = async (path4, casing2) => {
       const filenames = prepareFilenames(path4);
@@ -21259,8 +21273,8 @@ ${filenames.join("\n")}
       const result = path4.reduce((result2, cur) => {
         const globbed = glob.sync(`${prefix2}${cur}`);
         globbed.forEach((it) => {
-          const fileName = import_fs4.default.lstatSync(it).isDirectory() ? null : import_path4.default.resolve(it);
-          const filenames = fileName ? [fileName] : import_fs4.default.readdirSync(it).map((file) => import_path4.default.join(import_path4.default.resolve(it), file));
+          const fileName = import_fs4.default.lstatSync(it).isDirectory() ? null : import_path5.default.resolve(it);
+          const filenames = fileName ? [fileName] : import_fs4.default.readdirSync(it).map((file) => import_path5.default.join(import_path5.default.resolve(it), file));
           filenames.filter((file) => !import_fs4.default.lstatSync(file).isDirectory()).forEach((file) => result2.add(file));
         });
         return result2;
@@ -33430,7 +33444,7 @@ __export(migrate_exports, {
   viewsResolver: () => viewsResolver,
   writeResult: () => writeResult
 });
-var import_fs6, import_hanji3, import_path5, schemasResolver, tablesResolver, viewsResolver, mySqlViewsResolver, sqliteViewsResolver, sequencesResolver, roleResolver, policyResolver, indPolicyResolver, enumsResolver, columnsResolver, prepareAndMigratePg, prepareAndExportPg, preparePgPush, prepareMySQLPush, prepareAndMigrateMysql, prepareSingleStorePush, prepareAndMigrateSingleStore, prepareAndExportSinglestore, prepareAndExportMysql, prepareAndMigrateSqlite, prepareAndExportSqlite, prepareAndMigrateLibSQL, prepareAndExportLibSQL, prepareSQLitePush, prepareLibSQLPush, promptColumnsConflicts, promptNamedConflict, promptNamedWithSchemasConflict, promptSchemasConflict, BREAKPOINT, writeResult, embeddedMigrations, prepareSnapshotFolderName, two;
+var import_fs6, import_hanji3, import_path6, schemasResolver, tablesResolver, viewsResolver, mySqlViewsResolver, sqliteViewsResolver, sequencesResolver, roleResolver, policyResolver, indPolicyResolver, enumsResolver, columnsResolver, prepareAndMigratePg, prepareAndExportPg, preparePgPush, prepareMySQLPush, prepareAndMigrateMysql, prepareSingleStorePush, prepareAndMigrateSingleStore, prepareAndExportSinglestore, prepareAndExportMysql, prepareAndMigrateSqlite, prepareAndExportSqlite, prepareAndMigrateLibSQL, prepareAndExportLibSQL, prepareSQLitePush, prepareLibSQLPush, promptColumnsConflicts, promptNamedConflict, promptNamedWithSchemasConflict, promptSchemasConflict, BREAKPOINT, writeResult, embeddedMigrations, prepareSnapshotFolderName, two;
 var init_migrate = __esm({
   "src/cli/commands/migrate.ts"() {
     "use strict";
@@ -33438,7 +33452,7 @@ var init_migrate = __esm({
     init_migrationPreparator();
     init_source();
     import_hanji3 = __toESM(require_hanji());
-    import_path5 = __toESM(require("path"));
+    import_path6 = __toESM(require("path"));
     init_singlestoreSchema();
     init_mysqlSchema();
     init_pgSchema();
@@ -34392,10 +34406,10 @@ var init_migrate = __esm({
       const { prefix: prefix2, tag } = prepareMigrationMetadata(idx, prefixMode, name);
       const toSave = JSON.parse(JSON.stringify(cur));
       toSave["_meta"] = _meta;
-      const metaFolderPath = (0, import_path5.join)(outFolder, "meta");
-      const metaJournal = (0, import_path5.join)(metaFolderPath, "_journal.json");
+      const metaFolderPath = (0, import_path6.join)(outFolder, "meta");
+      const metaJournal = (0, import_path6.join)(metaFolderPath, "_journal.json");
       import_fs6.default.writeFileSync(
-        (0, import_path5.join)(metaFolderPath, `${prefix2}_snapshot.json`),
+        (0, import_path6.join)(metaFolderPath, `${prefix2}_snapshot.json`),
         JSON.stringify(toSave, null, 2)
       );
       const sqlDelimiter = breakpoints ? BREAKPOINT : "\n";
@@ -34428,7 +34442,7 @@ ${sql}
         `[${source_default.green(
           "\u2713"
         )}] Your SQL migration file \u279C ${source_default.bold.underline.blue(
-          import_path5.default.join(`${outFolder}/${tag}.sql`)
+          import_path6.default.join(`${outFolder}/${tag}.sql`)
         )} \u{1F680}`
       );
     };
@@ -36602,8 +36616,8 @@ var require_ponyfill_es2018 = __commonJS({
         return new TypeError("Cannot " + name + " a stream using a released reader");
       }
       function defaultReaderClosedPromiseInitialize(reader) {
-        reader._closedPromise = newPromise((resolve2, reject) => {
-          reader._closedPromise_resolve = resolve2;
+        reader._closedPromise = newPromise((resolve3, reject) => {
+          reader._closedPromise_resolve = resolve3;
           reader._closedPromise_reject = reject;
         });
       }
@@ -36781,8 +36795,8 @@ var require_ponyfill_es2018 = __commonJS({
           }
           let resolvePromise;
           let rejectPromise;
-          const promise = newPromise((resolve2, reject) => {
-            resolvePromise = resolve2;
+          const promise = newPromise((resolve3, reject) => {
+            resolvePromise = resolve3;
             rejectPromise = reject;
           });
           const readRequest = {
@@ -36878,8 +36892,8 @@ var require_ponyfill_es2018 = __commonJS({
           }
           let resolvePromise;
           let rejectPromise;
-          const promise = newPromise((resolve2, reject) => {
-            resolvePromise = resolve2;
+          const promise = newPromise((resolve3, reject) => {
+            resolvePromise = resolve3;
             rejectPromise = reject;
           });
           const readRequest = {
@@ -37712,8 +37726,8 @@ var require_ponyfill_es2018 = __commonJS({
           }
           let resolvePromise;
           let rejectPromise;
-          const promise = newPromise((resolve2, reject) => {
-            resolvePromise = resolve2;
+          const promise = newPromise((resolve3, reject) => {
+            resolvePromise = resolve3;
             rejectPromise = reject;
           });
           const readIntoRequest = {
@@ -38010,10 +38024,10 @@ var require_ponyfill_es2018 = __commonJS({
           wasAlreadyErroring = true;
           reason = void 0;
         }
-        const promise = newPromise((resolve2, reject) => {
+        const promise = newPromise((resolve3, reject) => {
           stream._pendingAbortRequest = {
             _promise: void 0,
-            _resolve: resolve2,
+            _resolve: resolve3,
             _reject: reject,
             _reason: reason,
             _wasAlreadyErroring: wasAlreadyErroring
@@ -38030,9 +38044,9 @@ var require_ponyfill_es2018 = __commonJS({
         if (state === "closed" || state === "errored") {
           return promiseRejectedWith(new TypeError(`The stream (in ${state} state) is not in the writable state and cannot be closed`));
         }
-        const promise = newPromise((resolve2, reject) => {
+        const promise = newPromise((resolve3, reject) => {
           const closeRequest = {
-            _resolve: resolve2,
+            _resolve: resolve3,
             _reject: reject
           };
           stream._closeRequest = closeRequest;
@@ -38045,9 +38059,9 @@ var require_ponyfill_es2018 = __commonJS({
         return promise;
       }
       function WritableStreamAddWriteRequest(stream) {
-        const promise = newPromise((resolve2, reject) => {
+        const promise = newPromise((resolve3, reject) => {
           const writeRequest = {
-            _resolve: resolve2,
+            _resolve: resolve3,
             _reject: reject
           };
           stream._writeRequests.push(writeRequest);
@@ -38643,8 +38657,8 @@ var require_ponyfill_es2018 = __commonJS({
         return new TypeError("Cannot " + name + " a stream using a released writer");
       }
       function defaultWriterClosedPromiseInitialize(writer) {
-        writer._closedPromise = newPromise((resolve2, reject) => {
-          writer._closedPromise_resolve = resolve2;
+        writer._closedPromise = newPromise((resolve3, reject) => {
+          writer._closedPromise_resolve = resolve3;
           writer._closedPromise_reject = reject;
           writer._closedPromiseState = "pending";
         });
@@ -38680,8 +38694,8 @@ var require_ponyfill_es2018 = __commonJS({
         writer._closedPromiseState = "resolved";
       }
       function defaultWriterReadyPromiseInitialize(writer) {
-        writer._readyPromise = newPromise((resolve2, reject) => {
-          writer._readyPromise_resolve = resolve2;
+        writer._readyPromise = newPromise((resolve3, reject) => {
+          writer._readyPromise_resolve = resolve3;
           writer._readyPromise_reject = reject;
         });
         writer._readyPromiseState = "pending";
@@ -38750,7 +38764,7 @@ var require_ponyfill_es2018 = __commonJS({
         source._disturbed = true;
         let shuttingDown = false;
         let currentWrite = promiseResolvedWith(void 0);
-        return newPromise((resolve2, reject) => {
+        return newPromise((resolve3, reject) => {
           let abortAlgorithm;
           if (signal !== void 0) {
             abortAlgorithm = () => {
@@ -38891,7 +38905,7 @@ var require_ponyfill_es2018 = __commonJS({
             if (isError2) {
               reject(error2);
             } else {
-              resolve2(void 0);
+              resolve3(void 0);
             }
           }
         });
@@ -39155,8 +39169,8 @@ var require_ponyfill_es2018 = __commonJS({
         let branch1;
         let branch2;
         let resolveCancelPromise;
-        const cancelPromise = newPromise((resolve2) => {
-          resolveCancelPromise = resolve2;
+        const cancelPromise = newPromise((resolve3) => {
+          resolveCancelPromise = resolve3;
         });
         function pullAlgorithm() {
           if (reading) {
@@ -39246,8 +39260,8 @@ var require_ponyfill_es2018 = __commonJS({
         let branch1;
         let branch2;
         let resolveCancelPromise;
-        const cancelPromise = newPromise((resolve2) => {
-          resolveCancelPromise = resolve2;
+        const cancelPromise = newPromise((resolve3) => {
+          resolveCancelPromise = resolve3;
         });
         function forwardReaderError(thisReader) {
           uponRejection(thisReader._closedPromise, (r2) => {
@@ -39936,8 +39950,8 @@ var require_ponyfill_es2018 = __commonJS({
           const writableHighWaterMark = ExtractHighWaterMark(writableStrategy, 1);
           const writableSizeAlgorithm = ExtractSizeAlgorithm(writableStrategy);
           let startPromise_resolve;
-          const startPromise = newPromise((resolve2) => {
-            startPromise_resolve = resolve2;
+          const startPromise = newPromise((resolve3) => {
+            startPromise_resolve = resolve3;
           });
           InitializeTransformStream(this, startPromise, writableHighWaterMark, writableSizeAlgorithm, readableHighWaterMark, readableSizeAlgorithm);
           SetUpTransformStreamDefaultControllerFromTransformer(this, transformer);
@@ -40028,8 +40042,8 @@ var require_ponyfill_es2018 = __commonJS({
         if (stream._backpressureChangePromise !== void 0) {
           stream._backpressureChangePromise_resolve();
         }
-        stream._backpressureChangePromise = newPromise((resolve2) => {
-          stream._backpressureChangePromise_resolve = resolve2;
+        stream._backpressureChangePromise = newPromise((resolve3) => {
+          stream._backpressureChangePromise_resolve = resolve3;
         });
         stream._backpressure = backpressure;
       }
@@ -42040,7 +42054,7 @@ var init_abort_error = __esm({
 
 // ../node_modules/.pnpm/node-fetch@3.3.2/node_modules/node-fetch/src/index.js
 async function fetch2(url, options_) {
-  return new Promise((resolve2, reject) => {
+  return new Promise((resolve3, reject) => {
     const request = new Request2(url, options_);
     const { parsedURL, options } = getNodeRequestOptions(request);
     if (!supportedSchemas.has(parsedURL.protocol)) {
@@ -42049,7 +42063,7 @@ async function fetch2(url, options_) {
     if (parsedURL.protocol === "data:") {
       const data = dist_default(request.url);
       const response2 = new Response2(data, { headers: { "Content-Type": data.typeFull } });
-      resolve2(response2);
+      resolve3(response2);
       return;
     }
     const send = (parsedURL.protocol === "https:" ? import_node_https.default : import_node_http2.default).request;
@@ -42171,7 +42185,7 @@ async function fetch2(url, options_) {
             if (responseReferrerPolicy) {
               requestOptions.referrerPolicy = responseReferrerPolicy;
             }
-            resolve2(fetch2(new Request2(locationURL, requestOptions)));
+            resolve3(fetch2(new Request2(locationURL, requestOptions)));
             finalize();
             return;
           }
@@ -42204,7 +42218,7 @@ async function fetch2(url, options_) {
       const codings = headers.get("Content-Encoding");
       if (!request.compress || request.method === "HEAD" || codings === null || response_.statusCode === 204 || response_.statusCode === 304) {
         response = new Response2(body, responseOptions);
-        resolve2(response);
+        resolve3(response);
         return;
       }
       const zlibOptions = {
@@ -42218,7 +42232,7 @@ async function fetch2(url, options_) {
           }
         });
         response = new Response2(body, responseOptions);
-        resolve2(response);
+        resolve3(response);
         return;
       }
       if (codings === "deflate" || codings === "x-deflate") {
@@ -42242,12 +42256,12 @@ async function fetch2(url, options_) {
             });
           }
           response = new Response2(body, responseOptions);
-          resolve2(response);
+          resolve3(response);
         });
         raw2.once("end", () => {
           if (!response) {
             response = new Response2(body, responseOptions);
-            resolve2(response);
+            resolve3(response);
           }
         });
         return;
@@ -42259,11 +42273,11 @@ async function fetch2(url, options_) {
           }
         });
         response = new Response2(body, responseOptions);
-        resolve2(response);
+        resolve3(response);
         return;
       }
       response = new Response2(body, responseOptions);
-      resolve2(response);
+      resolve3(response);
     });
     writeToStream(request_, request).catch(reject);
   });
@@ -42483,10 +42497,10 @@ var require_node_gyp_build = __commonJS({
         if (debug)
           return debug;
       }
-      var prebuild = resolve2(dir);
+      var prebuild = resolve3(dir);
       if (prebuild)
         return prebuild;
-      var nearby = resolve2(path4.dirname(process.execPath));
+      var nearby = resolve3(path4.dirname(process.execPath));
       if (nearby)
         return nearby;
       var target = [
@@ -42503,7 +42517,7 @@ var require_node_gyp_build = __commonJS({
         // eslint-disable-line
       ].filter(Boolean).join(" ");
       throw new Error("No native build was found for " + target + "\n    loaded from: " + dir + "\n");
-      function resolve2(dir2) {
+      function resolve3(dir2) {
         var tuples = readdirSync2(path4.join(dir2, "prebuilds")).map(parseTuple);
         var tuple = tuples.filter(matchTuple(platform, arch)).sort(compareTuples)[0];
         if (!tuple)
@@ -48176,13 +48190,13 @@ var require_dist_cjs13 = __commonJS({
         ...data.default && { default: data.default }
       }
     ), "getConfigData");
-    var import_path8 = require("path");
+    var import_path9 = require("path");
     var import_getHomeDir = require_getHomeDir();
     var ENV_CONFIG_PATH = "AWS_CONFIG_FILE";
-    var getConfigFilepath = /* @__PURE__ */ __name(() => process.env[ENV_CONFIG_PATH] || (0, import_path8.join)((0, import_getHomeDir.getHomeDir)(), ".aws", "config"), "getConfigFilepath");
+    var getConfigFilepath = /* @__PURE__ */ __name(() => process.env[ENV_CONFIG_PATH] || (0, import_path9.join)((0, import_getHomeDir.getHomeDir)(), ".aws", "config"), "getConfigFilepath");
     var import_getHomeDir2 = require_getHomeDir();
     var ENV_CREDENTIALS_PATH = "AWS_SHARED_CREDENTIALS_FILE";
-    var getCredentialsFilepath = /* @__PURE__ */ __name(() => process.env[ENV_CREDENTIALS_PATH] || (0, import_path8.join)((0, import_getHomeDir2.getHomeDir)(), ".aws", "credentials"), "getCredentialsFilepath");
+    var getCredentialsFilepath = /* @__PURE__ */ __name(() => process.env[ENV_CREDENTIALS_PATH] || (0, import_path9.join)((0, import_getHomeDir2.getHomeDir)(), ".aws", "credentials"), "getCredentialsFilepath");
     var prefixKeyRegex = /^([\w-]+)\s(["'])?([\w-@\+\.%:/]+)\2$/;
     var profileNameBlockList = ["__proto__", "profile __proto__"];
     var parseIni = /* @__PURE__ */ __name((iniData) => {
@@ -49336,7 +49350,7 @@ var require_dist_cjs20 = __commonJS({
         this.refillTokenBucket();
         if (amount > this.currentCapacity) {
           const delay = (amount - this.currentCapacity) / this.fillRate * 1e3;
-          await new Promise((resolve2) => setTimeout(resolve2, delay));
+          await new Promise((resolve3) => setTimeout(resolve3, delay));
         }
         this.currentCapacity = this.currentCapacity - amount;
       }
@@ -50304,18 +50318,18 @@ var require_dist_cjs28 = __commonJS({
       let hasError = false;
       if (expect === "100-continue") {
         await Promise.race([
-          new Promise((resolve2) => {
-            timeoutId = Number(setTimeout(resolve2, Math.max(MIN_WAIT_TIME, maxContinueTimeoutMs)));
+          new Promise((resolve3) => {
+            timeoutId = Number(setTimeout(resolve3, Math.max(MIN_WAIT_TIME, maxContinueTimeoutMs)));
           }),
-          new Promise((resolve2) => {
+          new Promise((resolve3) => {
             httpRequest.on("continue", () => {
               clearTimeout(timeoutId);
-              resolve2();
+              resolve3();
             });
             httpRequest.on("error", () => {
               hasError = true;
               clearTimeout(timeoutId);
-              resolve2();
+              resolve3();
             });
           })
         ]);
@@ -50351,13 +50365,13 @@ var require_dist_cjs28 = __commonJS({
       constructor(options) {
         this.socketWarningTimestamp = 0;
         this.metadata = { handlerProtocol: "http/1.1" };
-        this.configProvider = new Promise((resolve2, reject) => {
+        this.configProvider = new Promise((resolve3, reject) => {
           if (typeof options === "function") {
             options().then((_options) => {
-              resolve2(this.resolveDefaultConfig(_options));
+              resolve3(this.resolveDefaultConfig(_options));
             }).catch(reject);
           } else {
-            resolve2(this.resolveDefaultConfig(options));
+            resolve3(this.resolveDefaultConfig(options));
           }
         });
       }
@@ -50437,7 +50451,7 @@ var require_dist_cjs28 = __commonJS({
         let socketCheckTimeoutId;
         return new Promise((_resolve, _reject) => {
           let writeRequestBodyPromise = void 0;
-          const resolve2 = /* @__PURE__ */ __name(async (arg) => {
+          const resolve3 = /* @__PURE__ */ __name(async (arg) => {
             await writeRequestBodyPromise;
             clearTimeout(socketCheckTimeoutId);
             _resolve(arg);
@@ -50494,7 +50508,7 @@ var require_dist_cjs28 = __commonJS({
               headers: getTransformedHeaders(res.headers),
               body: res
             });
-            resolve2({ response: httpResponse });
+            resolve3({ response: httpResponse });
           });
           req.on("error", (err2) => {
             if (NODEJS_TIMEOUT_ERROR_CODES.includes(err2.code)) {
@@ -50671,13 +50685,13 @@ var require_dist_cjs28 = __commonJS({
       constructor(options) {
         this.metadata = { handlerProtocol: "h2" };
         this.connectionManager = new NodeHttp2ConnectionManager({});
-        this.configProvider = new Promise((resolve2, reject) => {
+        this.configProvider = new Promise((resolve3, reject) => {
           if (typeof options === "function") {
             options().then((opts) => {
-              resolve2(opts || {});
+              resolve3(opts || {});
             }).catch(reject);
           } else {
-            resolve2(options || {});
+            resolve3(options || {});
           }
         });
       }
@@ -50707,7 +50721,7 @@ var require_dist_cjs28 = __commonJS({
           var _a;
           let fulfilled = false;
           let writeRequestBodyPromise = void 0;
-          const resolve2 = /* @__PURE__ */ __name(async (arg) => {
+          const resolve3 = /* @__PURE__ */ __name(async (arg) => {
             await writeRequestBodyPromise;
             _resolve(arg);
           }, "resolve");
@@ -50763,7 +50777,7 @@ var require_dist_cjs28 = __commonJS({
               body: req
             });
             fulfilled = true;
-            resolve2({ response: httpResponse });
+            resolve3({ response: httpResponse });
             if (disableConcurrentStreams) {
               session.close();
               this.connectionManager.deleteSession(authority, session);
@@ -50846,7 +50860,7 @@ var require_dist_cjs28 = __commonJS({
       if (isReadableStreamInstance(stream)) {
         return collectReadableStream(stream);
       }
-      return new Promise((resolve2, reject) => {
+      return new Promise((resolve3, reject) => {
         const collector = new Collector();
         stream.pipe(collector);
         stream.on("error", (err2) => {
@@ -50856,7 +50870,7 @@ var require_dist_cjs28 = __commonJS({
         collector.on("error", reject);
         collector.on("finish", function() {
           const bytes = new Uint8Array(Buffer.concat(this.bufferedBytes));
-          resolve2(bytes);
+          resolve3(bytes);
         });
       });
     }, "streamCollector");
@@ -50917,7 +50931,7 @@ var require_dist_cjs29 = __commonJS({
     var import_protocol_http = require_dist_cjs2();
     var import_querystring_builder = require_dist_cjs27();
     function requestTimeout(timeoutInMs = 0) {
-      return new Promise((resolve2, reject) => {
+      return new Promise((resolve3, reject) => {
         if (timeoutInMs) {
           setTimeout(() => {
             const timeoutError = new Error(`Request did not complete within ${timeoutInMs} ms`);
@@ -51026,7 +51040,7 @@ var require_dist_cjs29 = __commonJS({
         ];
         if (abortSignal) {
           raceOfPromises.push(
-            new Promise((resolve2, reject) => {
+            new Promise((resolve3, reject) => {
               abortSignal.onabort = () => {
                 const abortError = new Error("Request aborted");
                 abortError.name = "AbortError";
@@ -51086,7 +51100,7 @@ var require_dist_cjs29 = __commonJS({
     }
     __name(collectStream, "collectStream");
     function readToBase64(blob) {
-      return new Promise((resolve2, reject) => {
+      return new Promise((resolve3, reject) => {
         const reader = new FileReader();
         reader.onloadend = () => {
           if (reader.readyState !== 2) {
@@ -51095,7 +51109,7 @@ var require_dist_cjs29 = __commonJS({
           const result = reader.result ?? "";
           const commaIndex = result.indexOf(",");
           const dataOffset = commaIndex > -1 ? commaIndex + 1 : result.length;
-          resolve2(result.substring(dataOffset));
+          resolve3(result.substring(dataOffset));
         };
         reader.onabort = () => reject(new Error("Read aborted"));
         reader.onerror = () => reject(reader.error);
@@ -52674,7 +52688,7 @@ var require_dist_cjs33 = __commonJS({
               const delayFromResponse = getDelayFromRetryAfterHeader(err2.$response);
               const delay = Math.max(delayFromResponse || 0, delayFromDecider);
               totalDelay += delay;
-              await new Promise((resolve2) => setTimeout(resolve2, delay));
+              await new Promise((resolve3) => setTimeout(resolve3, delay));
               continue;
             }
             if (!err2.$metadata) {
@@ -52842,7 +52856,7 @@ var require_dist_cjs33 = __commonJS({
             attempts = retryToken.getRetryCount();
             const delay = retryToken.getRetryDelay();
             totalRetryDelay += delay;
-            await new Promise((resolve2) => setTimeout(resolve2, delay));
+            await new Promise((resolve3) => setTimeout(resolve3, delay));
           }
         }
       } else {
@@ -53545,11 +53559,11 @@ function __metadata(metadataKey, metadataValue) {
 }
 function __awaiter(thisArg, _arguments, P, generator) {
   function adopt(value) {
-    return value instanceof P ? value : new P(function(resolve2) {
-      resolve2(value);
+    return value instanceof P ? value : new P(function(resolve3) {
+      resolve3(value);
     });
   }
-  return new (P || (P = Promise))(function(resolve2, reject) {
+  return new (P || (P = Promise))(function(resolve3, reject) {
     function fulfilled(value) {
       try {
         step(generator.next(value));
@@ -53565,7 +53579,7 @@ function __awaiter(thisArg, _arguments, P, generator) {
       }
     }
     function step(result) {
-      result.done ? resolve2(result.value) : adopt(result.value).then(fulfilled, rejected);
+      result.done ? resolve3(result.value) : adopt(result.value).then(fulfilled, rejected);
     }
     step((generator = generator.apply(thisArg, _arguments || [])).next());
   });
@@ -53779,14 +53793,14 @@ function __asyncValues(o) {
   }, i2);
   function verb(n) {
     i2[n] = o[n] && function(v) {
-      return new Promise(function(resolve2, reject) {
-        v = o[n](v), settle(resolve2, reject, v.done, v.value);
+      return new Promise(function(resolve3, reject) {
+        v = o[n](v), settle(resolve3, reject, v.done, v.value);
       });
     };
   }
-  function settle(resolve2, reject, d, v) {
+  function settle(resolve3, reject, d, v) {
     Promise.resolve(v).then(function(v2) {
-      resolve2({ value: v2, done: d });
+      resolve3({ value: v2, done: d });
     }, reject);
   }
 }
@@ -56904,11 +56918,11 @@ function __metadata2(metadataKey, metadataValue) {
 }
 function __awaiter2(thisArg, _arguments, P, generator) {
   function adopt(value) {
-    return value instanceof P ? value : new P(function(resolve2) {
-      resolve2(value);
+    return value instanceof P ? value : new P(function(resolve3) {
+      resolve3(value);
     });
   }
-  return new (P || (P = Promise))(function(resolve2, reject) {
+  return new (P || (P = Promise))(function(resolve3, reject) {
     function fulfilled(value) {
       try {
         step(generator.next(value));
@@ -56924,7 +56938,7 @@ function __awaiter2(thisArg, _arguments, P, generator) {
       }
     }
     function step(result) {
-      result.done ? resolve2(result.value) : adopt(result.value).then(fulfilled, rejected);
+      result.done ? resolve3(result.value) : adopt(result.value).then(fulfilled, rejected);
     }
     step((generator = generator.apply(thisArg, _arguments || [])).next());
   });
@@ -57130,14 +57144,14 @@ function __asyncValues2(o) {
   }, i2);
   function verb(n) {
     i2[n] = o[n] && function(v) {
-      return new Promise(function(resolve2, reject) {
-        v = o[n](v), settle(resolve2, reject, v.done, v.value);
+      return new Promise(function(resolve3, reject) {
+        v = o[n](v), settle(resolve3, reject, v.done, v.value);
       });
     };
   }
-  function settle(resolve2, reject, d, v) {
+  function settle(resolve3, reject, d, v) {
     Promise.resolve(v).then(function(v2) {
-      resolve2({ value: v2, done: d });
+      resolve3({ value: v2, done: d });
     }, reject);
   }
 }
@@ -57521,7 +57535,7 @@ var require_dist_cjs39 = __commonJS({
     var import_buffer2 = require("buffer");
     var import_http3 = require("http");
     function httpRequest(options) {
-      return new Promise((resolve2, reject) => {
+      return new Promise((resolve3, reject) => {
         var _a;
         const req = (0, import_http3.request)({
           method: "GET",
@@ -57551,7 +57565,7 @@ var require_dist_cjs39 = __commonJS({
             chunks.push(chunk);
           });
           res.on("end", () => {
-            resolve2(import_buffer2.Buffer.concat(chunks));
+            resolve3(import_buffer2.Buffer.concat(chunks));
             req.destroy();
           });
         });
@@ -57983,7 +57997,7 @@ var require_retry_wrapper = __commonJS({
           try {
             return await toRetry();
           } catch (e2) {
-            await new Promise((resolve2) => setTimeout(resolve2, delayMs));
+            await new Promise((resolve3) => setTimeout(resolve3, delayMs));
           }
         }
         return await toRetry();
@@ -59352,9 +59366,9 @@ var require_dist_cjs46 = __commonJS({
   }
 });
 
-// ../node_modules/.pnpm/@aws-sdk+client-sso-oidc@3.583.0_@aws-sdk+client-sts@3.583.0/node_modules/@aws-sdk/client-sso-oidc/dist-cjs/auth/httpAuthSchemeProvider.js
+// ../node_modules/.pnpm/@aws-sdk+client-sso-oidc@3.583.0/node_modules/@aws-sdk/client-sso-oidc/dist-cjs/auth/httpAuthSchemeProvider.js
 var require_httpAuthSchemeProvider3 = __commonJS({
-  "../node_modules/.pnpm/@aws-sdk+client-sso-oidc@3.583.0_@aws-sdk+client-sts@3.583.0/node_modules/@aws-sdk/client-sso-oidc/dist-cjs/auth/httpAuthSchemeProvider.js"(exports2) {
+  "../node_modules/.pnpm/@aws-sdk+client-sso-oidc@3.583.0/node_modules/@aws-sdk/client-sso-oidc/dist-cjs/auth/httpAuthSchemeProvider.js"(exports2) {
     "use strict";
     Object.defineProperty(exports2, "__esModule", { value: true });
     exports2.resolveHttpAuthSchemeConfig = exports2.defaultSSOOIDCHttpAuthSchemeProvider = exports2.defaultSSOOIDCHttpAuthSchemeParametersProvider = void 0;
@@ -59421,9 +59435,9 @@ var require_httpAuthSchemeProvider3 = __commonJS({
   }
 });
 
-// ../node_modules/.pnpm/@aws-sdk+client-sso-oidc@3.583.0_@aws-sdk+client-sts@3.583.0/node_modules/@aws-sdk/client-sso-oidc/package.json
+// ../node_modules/.pnpm/@aws-sdk+client-sso-oidc@3.583.0/node_modules/@aws-sdk/client-sso-oidc/package.json
 var require_package4 = __commonJS({
-  "../node_modules/.pnpm/@aws-sdk+client-sso-oidc@3.583.0_@aws-sdk+client-sts@3.583.0/node_modules/@aws-sdk/client-sso-oidc/package.json"(exports2, module2) {
+  "../node_modules/.pnpm/@aws-sdk+client-sso-oidc@3.583.0/node_modules/@aws-sdk/client-sso-oidc/package.json"(exports2, module2) {
     module2.exports = {
       name: "@aws-sdk/client-sso-oidc",
       description: "AWS SDK for JavaScript Sso Oidc Client for Node.js, Browser and React Native",
@@ -59527,9 +59541,9 @@ var require_package4 = __commonJS({
   }
 });
 
-// ../node_modules/.pnpm/@aws-sdk+client-sso-oidc@3.583.0_@aws-sdk+client-sts@3.583.0/node_modules/@aws-sdk/client-sso-oidc/dist-cjs/endpoint/ruleset.js
+// ../node_modules/.pnpm/@aws-sdk+client-sso-oidc@3.583.0/node_modules/@aws-sdk/client-sso-oidc/dist-cjs/endpoint/ruleset.js
 var require_ruleset2 = __commonJS({
-  "../node_modules/.pnpm/@aws-sdk+client-sso-oidc@3.583.0_@aws-sdk+client-sts@3.583.0/node_modules/@aws-sdk/client-sso-oidc/dist-cjs/endpoint/ruleset.js"(exports2) {
+  "../node_modules/.pnpm/@aws-sdk+client-sso-oidc@3.583.0/node_modules/@aws-sdk/client-sso-oidc/dist-cjs/endpoint/ruleset.js"(exports2) {
     "use strict";
     Object.defineProperty(exports2, "__esModule", { value: true });
     exports2.ruleSet = void 0;
@@ -59562,9 +59576,9 @@ var require_ruleset2 = __commonJS({
   }
 });
 
-// ../node_modules/.pnpm/@aws-sdk+client-sso-oidc@3.583.0_@aws-sdk+client-sts@3.583.0/node_modules/@aws-sdk/client-sso-oidc/dist-cjs/endpoint/endpointResolver.js
+// ../node_modules/.pnpm/@aws-sdk+client-sso-oidc@3.583.0/node_modules/@aws-sdk/client-sso-oidc/dist-cjs/endpoint/endpointResolver.js
 var require_endpointResolver2 = __commonJS({
-  "../node_modules/.pnpm/@aws-sdk+client-sso-oidc@3.583.0_@aws-sdk+client-sts@3.583.0/node_modules/@aws-sdk/client-sso-oidc/dist-cjs/endpoint/endpointResolver.js"(exports2) {
+  "../node_modules/.pnpm/@aws-sdk+client-sso-oidc@3.583.0/node_modules/@aws-sdk/client-sso-oidc/dist-cjs/endpoint/endpointResolver.js"(exports2) {
     "use strict";
     Object.defineProperty(exports2, "__esModule", { value: true });
     exports2.defaultEndpointResolver = void 0;
@@ -59582,9 +59596,9 @@ var require_endpointResolver2 = __commonJS({
   }
 });
 
-// ../node_modules/.pnpm/@aws-sdk+client-sso-oidc@3.583.0_@aws-sdk+client-sts@3.583.0/node_modules/@aws-sdk/client-sso-oidc/dist-cjs/runtimeConfig.shared.js
+// ../node_modules/.pnpm/@aws-sdk+client-sso-oidc@3.583.0/node_modules/@aws-sdk/client-sso-oidc/dist-cjs/runtimeConfig.shared.js
 var require_runtimeConfig_shared2 = __commonJS({
-  "../node_modules/.pnpm/@aws-sdk+client-sso-oidc@3.583.0_@aws-sdk+client-sts@3.583.0/node_modules/@aws-sdk/client-sso-oidc/dist-cjs/runtimeConfig.shared.js"(exports2) {
+  "../node_modules/.pnpm/@aws-sdk+client-sso-oidc@3.583.0/node_modules/@aws-sdk/client-sso-oidc/dist-cjs/runtimeConfig.shared.js"(exports2) {
     "use strict";
     Object.defineProperty(exports2, "__esModule", { value: true });
     exports2.getRuntimeConfig = void 0;
@@ -59628,9 +59642,9 @@ var require_runtimeConfig_shared2 = __commonJS({
   }
 });
 
-// ../node_modules/.pnpm/@aws-sdk+client-sso-oidc@3.583.0_@aws-sdk+client-sts@3.583.0/node_modules/@aws-sdk/client-sso-oidc/dist-cjs/runtimeConfig.js
+// ../node_modules/.pnpm/@aws-sdk+client-sso-oidc@3.583.0/node_modules/@aws-sdk/client-sso-oidc/dist-cjs/runtimeConfig.js
 var require_runtimeConfig2 = __commonJS({
-  "../node_modules/.pnpm/@aws-sdk+client-sso-oidc@3.583.0_@aws-sdk+client-sts@3.583.0/node_modules/@aws-sdk/client-sso-oidc/dist-cjs/runtimeConfig.js"(exports2) {
+  "../node_modules/.pnpm/@aws-sdk+client-sso-oidc@3.583.0/node_modules/@aws-sdk/client-sso-oidc/dist-cjs/runtimeConfig.js"(exports2) {
     "use strict";
     Object.defineProperty(exports2, "__esModule", { value: true });
     exports2.getRuntimeConfig = void 0;
@@ -59681,9 +59695,9 @@ var require_runtimeConfig2 = __commonJS({
   }
 });
 
-// ../node_modules/.pnpm/@aws-sdk+client-sso-oidc@3.583.0_@aws-sdk+client-sts@3.583.0/node_modules/@aws-sdk/client-sso-oidc/dist-cjs/index.js
+// ../node_modules/.pnpm/@aws-sdk+client-sso-oidc@3.583.0/node_modules/@aws-sdk/client-sso-oidc/dist-cjs/index.js
 var require_dist_cjs47 = __commonJS({
-  "../node_modules/.pnpm/@aws-sdk+client-sso-oidc@3.583.0_@aws-sdk+client-sts@3.583.0/node_modules/@aws-sdk/client-sso-oidc/dist-cjs/index.js"(exports2, module2) {
+  "../node_modules/.pnpm/@aws-sdk+client-sso-oidc@3.583.0/node_modules/@aws-sdk/client-sso-oidc/dist-cjs/index.js"(exports2, module2) {
     "use strict";
     var __defProp3 = Object.defineProperty;
     var __getOwnPropDesc3 = Object.getOwnPropertyDescriptor;
@@ -61029,9 +61043,9 @@ Reference: https://docs.aws.amazon.com/cli/latest/userguide/cli-configure-sso.ht
   }
 });
 
-// ../node_modules/.pnpm/@aws-sdk+client-sts@3.583.0/node_modules/@aws-sdk/client-sts/dist-cjs/auth/httpAuthSchemeProvider.js
+// ../node_modules/.pnpm/@aws-sdk+client-sts@3.583.0_@aws-sdk+client-sso-oidc@3.583.0/node_modules/@aws-sdk/client-sts/dist-cjs/auth/httpAuthSchemeProvider.js
 var require_httpAuthSchemeProvider4 = __commonJS({
-  "../node_modules/.pnpm/@aws-sdk+client-sts@3.583.0/node_modules/@aws-sdk/client-sts/dist-cjs/auth/httpAuthSchemeProvider.js"(exports2) {
+  "../node_modules/.pnpm/@aws-sdk+client-sts@3.583.0_@aws-sdk+client-sso-oidc@3.583.0/node_modules/@aws-sdk/client-sts/dist-cjs/auth/httpAuthSchemeProvider.js"(exports2) {
     "use strict";
     Object.defineProperty(exports2, "__esModule", { value: true });
     exports2.resolveHttpAuthSchemeConfig = exports2.resolveStsAuthConfig = exports2.defaultSTSHttpAuthSchemeProvider = exports2.defaultSTSHttpAuthSchemeParametersProvider = void 0;
@@ -61101,9 +61115,9 @@ var require_httpAuthSchemeProvider4 = __commonJS({
   }
 });
 
-// ../node_modules/.pnpm/@aws-sdk+client-sts@3.583.0/node_modules/@aws-sdk/client-sts/dist-cjs/endpoint/EndpointParameters.js
+// ../node_modules/.pnpm/@aws-sdk+client-sts@3.583.0_@aws-sdk+client-sso-oidc@3.583.0/node_modules/@aws-sdk/client-sts/dist-cjs/endpoint/EndpointParameters.js
 var require_EndpointParameters = __commonJS({
-  "../node_modules/.pnpm/@aws-sdk+client-sts@3.583.0/node_modules/@aws-sdk/client-sts/dist-cjs/endpoint/EndpointParameters.js"(exports2) {
+  "../node_modules/.pnpm/@aws-sdk+client-sts@3.583.0_@aws-sdk+client-sso-oidc@3.583.0/node_modules/@aws-sdk/client-sts/dist-cjs/endpoint/EndpointParameters.js"(exports2) {
     "use strict";
     Object.defineProperty(exports2, "__esModule", { value: true });
     exports2.commonParams = exports2.resolveClientEndpointParameters = void 0;
@@ -61127,9 +61141,9 @@ var require_EndpointParameters = __commonJS({
   }
 });
 
-// ../node_modules/.pnpm/@aws-sdk+client-sts@3.583.0/node_modules/@aws-sdk/client-sts/package.json
+// ../node_modules/.pnpm/@aws-sdk+client-sts@3.583.0_@aws-sdk+client-sso-oidc@3.583.0/node_modules/@aws-sdk/client-sts/package.json
 var require_package5 = __commonJS({
-  "../node_modules/.pnpm/@aws-sdk+client-sts@3.583.0/node_modules/@aws-sdk/client-sts/package.json"(exports2, module2) {
+  "../node_modules/.pnpm/@aws-sdk+client-sts@3.583.0_@aws-sdk+client-sso-oidc@3.583.0/node_modules/@aws-sdk/client-sts/package.json"(exports2, module2) {
     module2.exports = {
       name: "@aws-sdk/client-sts",
       description: "AWS SDK for JavaScript Sts Client for Node.js, Browser and React Native",
@@ -61235,9 +61249,9 @@ var require_package5 = __commonJS({
   }
 });
 
-// ../node_modules/.pnpm/@aws-sdk+client-sts@3.583.0/node_modules/@aws-sdk/client-sts/dist-cjs/endpoint/ruleset.js
+// ../node_modules/.pnpm/@aws-sdk+client-sts@3.583.0_@aws-sdk+client-sso-oidc@3.583.0/node_modules/@aws-sdk/client-sts/dist-cjs/endpoint/ruleset.js
 var require_ruleset3 = __commonJS({
-  "../node_modules/.pnpm/@aws-sdk+client-sts@3.583.0/node_modules/@aws-sdk/client-sts/dist-cjs/endpoint/ruleset.js"(exports2) {
+  "../node_modules/.pnpm/@aws-sdk+client-sts@3.583.0_@aws-sdk+client-sso-oidc@3.583.0/node_modules/@aws-sdk/client-sts/dist-cjs/endpoint/ruleset.js"(exports2) {
     "use strict";
     Object.defineProperty(exports2, "__esModule", { value: true });
     exports2.ruleSet = void 0;
@@ -61282,9 +61296,9 @@ var require_ruleset3 = __commonJS({
   }
 });
 
-// ../node_modules/.pnpm/@aws-sdk+client-sts@3.583.0/node_modules/@aws-sdk/client-sts/dist-cjs/endpoint/endpointResolver.js
+// ../node_modules/.pnpm/@aws-sdk+client-sts@3.583.0_@aws-sdk+client-sso-oidc@3.583.0/node_modules/@aws-sdk/client-sts/dist-cjs/endpoint/endpointResolver.js
 var require_endpointResolver3 = __commonJS({
-  "../node_modules/.pnpm/@aws-sdk+client-sts@3.583.0/node_modules/@aws-sdk/client-sts/dist-cjs/endpoint/endpointResolver.js"(exports2) {
+  "../node_modules/.pnpm/@aws-sdk+client-sts@3.583.0_@aws-sdk+client-sso-oidc@3.583.0/node_modules/@aws-sdk/client-sts/dist-cjs/endpoint/endpointResolver.js"(exports2) {
     "use strict";
     Object.defineProperty(exports2, "__esModule", { value: true });
     exports2.defaultEndpointResolver = void 0;
@@ -61302,9 +61316,9 @@ var require_endpointResolver3 = __commonJS({
   }
 });
 
-// ../node_modules/.pnpm/@aws-sdk+client-sts@3.583.0/node_modules/@aws-sdk/client-sts/dist-cjs/runtimeConfig.shared.js
+// ../node_modules/.pnpm/@aws-sdk+client-sts@3.583.0_@aws-sdk+client-sso-oidc@3.583.0/node_modules/@aws-sdk/client-sts/dist-cjs/runtimeConfig.shared.js
 var require_runtimeConfig_shared3 = __commonJS({
-  "../node_modules/.pnpm/@aws-sdk+client-sts@3.583.0/node_modules/@aws-sdk/client-sts/dist-cjs/runtimeConfig.shared.js"(exports2) {
+  "../node_modules/.pnpm/@aws-sdk+client-sts@3.583.0_@aws-sdk+client-sso-oidc@3.583.0/node_modules/@aws-sdk/client-sts/dist-cjs/runtimeConfig.shared.js"(exports2) {
     "use strict";
     Object.defineProperty(exports2, "__esModule", { value: true });
     exports2.getRuntimeConfig = void 0;
@@ -61348,9 +61362,9 @@ var require_runtimeConfig_shared3 = __commonJS({
   }
 });
 
-// ../node_modules/.pnpm/@aws-sdk+client-sts@3.583.0/node_modules/@aws-sdk/client-sts/dist-cjs/runtimeConfig.js
+// ../node_modules/.pnpm/@aws-sdk+client-sts@3.583.0_@aws-sdk+client-sso-oidc@3.583.0/node_modules/@aws-sdk/client-sts/dist-cjs/runtimeConfig.js
 var require_runtimeConfig3 = __commonJS({
-  "../node_modules/.pnpm/@aws-sdk+client-sts@3.583.0/node_modules/@aws-sdk/client-sts/dist-cjs/runtimeConfig.js"(exports2) {
+  "../node_modules/.pnpm/@aws-sdk+client-sts@3.583.0_@aws-sdk+client-sso-oidc@3.583.0/node_modules/@aws-sdk/client-sts/dist-cjs/runtimeConfig.js"(exports2) {
     "use strict";
     Object.defineProperty(exports2, "__esModule", { value: true });
     exports2.getRuntimeConfig = void 0;
@@ -61414,9 +61428,9 @@ var require_runtimeConfig3 = __commonJS({
   }
 });
 
-// ../node_modules/.pnpm/@aws-sdk+client-sts@3.583.0/node_modules/@aws-sdk/client-sts/dist-cjs/auth/httpAuthExtensionConfiguration.js
+// ../node_modules/.pnpm/@aws-sdk+client-sts@3.583.0_@aws-sdk+client-sso-oidc@3.583.0/node_modules/@aws-sdk/client-sts/dist-cjs/auth/httpAuthExtensionConfiguration.js
 var require_httpAuthExtensionConfiguration = __commonJS({
-  "../node_modules/.pnpm/@aws-sdk+client-sts@3.583.0/node_modules/@aws-sdk/client-sts/dist-cjs/auth/httpAuthExtensionConfiguration.js"(exports2) {
+  "../node_modules/.pnpm/@aws-sdk+client-sts@3.583.0_@aws-sdk+client-sso-oidc@3.583.0/node_modules/@aws-sdk/client-sts/dist-cjs/auth/httpAuthExtensionConfiguration.js"(exports2) {
     "use strict";
     Object.defineProperty(exports2, "__esModule", { value: true });
     exports2.resolveHttpAuthRuntimeConfig = exports2.getHttpAuthExtensionConfiguration = void 0;
@@ -61462,9 +61476,9 @@ var require_httpAuthExtensionConfiguration = __commonJS({
   }
 });
 
-// ../node_modules/.pnpm/@aws-sdk+client-sts@3.583.0/node_modules/@aws-sdk/client-sts/dist-cjs/runtimeExtensions.js
+// ../node_modules/.pnpm/@aws-sdk+client-sts@3.583.0_@aws-sdk+client-sso-oidc@3.583.0/node_modules/@aws-sdk/client-sts/dist-cjs/runtimeExtensions.js
 var require_runtimeExtensions = __commonJS({
-  "../node_modules/.pnpm/@aws-sdk+client-sts@3.583.0/node_modules/@aws-sdk/client-sts/dist-cjs/runtimeExtensions.js"(exports2) {
+  "../node_modules/.pnpm/@aws-sdk+client-sts@3.583.0_@aws-sdk+client-sso-oidc@3.583.0/node_modules/@aws-sdk/client-sts/dist-cjs/runtimeExtensions.js"(exports2) {
     "use strict";
     Object.defineProperty(exports2, "__esModule", { value: true });
     exports2.resolveRuntimeExtensions = void 0;
@@ -61493,9 +61507,9 @@ var require_runtimeExtensions = __commonJS({
   }
 });
 
-// ../node_modules/.pnpm/@aws-sdk+client-sts@3.583.0/node_modules/@aws-sdk/client-sts/dist-cjs/STSClient.js
+// ../node_modules/.pnpm/@aws-sdk+client-sts@3.583.0_@aws-sdk+client-sso-oidc@3.583.0/node_modules/@aws-sdk/client-sts/dist-cjs/STSClient.js
 var require_STSClient = __commonJS({
-  "../node_modules/.pnpm/@aws-sdk+client-sts@3.583.0/node_modules/@aws-sdk/client-sts/dist-cjs/STSClient.js"(exports2) {
+  "../node_modules/.pnpm/@aws-sdk+client-sts@3.583.0_@aws-sdk+client-sso-oidc@3.583.0/node_modules/@aws-sdk/client-sts/dist-cjs/STSClient.js"(exports2) {
     "use strict";
     Object.defineProperty(exports2, "__esModule", { value: true });
     exports2.STSClient = exports2.__Client = void 0;
@@ -61557,9 +61571,9 @@ var require_STSClient = __commonJS({
   }
 });
 
-// ../node_modules/.pnpm/@aws-sdk+client-sts@3.583.0/node_modules/@aws-sdk/client-sts/dist-cjs/index.js
+// ../node_modules/.pnpm/@aws-sdk+client-sts@3.583.0_@aws-sdk+client-sso-oidc@3.583.0/node_modules/@aws-sdk/client-sts/dist-cjs/index.js
 var require_dist_cjs50 = __commonJS({
-  "../node_modules/.pnpm/@aws-sdk+client-sts@3.583.0/node_modules/@aws-sdk/client-sts/dist-cjs/index.js"(exports2, module2) {
+  "../node_modules/.pnpm/@aws-sdk+client-sts@3.583.0_@aws-sdk+client-sso-oidc@3.583.0/node_modules/@aws-sdk/client-sts/dist-cjs/index.js"(exports2, module2) {
     "use strict";
     var __defProp3 = Object.defineProperty;
     var __getOwnPropDesc3 = Object.getOwnPropertyDescriptor;
@@ -72545,14 +72559,14 @@ var require_event = __commonJS({
         this._done = false;
         let futReject = null;
         let futResolve = null;
-        this._promise = new Promise((resolve2, reject) => {
+        this._promise = new Promise((resolve3, reject) => {
           futReject = (reason) => {
             this._done = true;
             reject(reason);
           };
           futResolve = (value) => {
             this._done = true;
-            resolve2(value);
+            resolve3(value);
           };
         });
         if (!futReject || !futResolve) {
@@ -72583,8 +72597,8 @@ var require_queues = __commonJS({
         this._promises = [];
       }
       _add() {
-        this._promises.push(new Promise((resolve2, reject) => {
-          this._resolvers.push(resolve2);
+        this._promises.push(new Promise((resolve3, reject) => {
+          this._resolvers.push(resolve3);
           this._rejecters.push(reject);
         }));
       }
@@ -72592,12 +72606,12 @@ var require_queues = __commonJS({
         if (!this._resolvers.length) {
           this._add();
         }
-        const resolve2 = this._resolvers.shift();
+        const resolve3 = this._resolvers.shift();
         this._rejecters.shift();
-        if (!resolve2) {
+        if (!resolve3) {
           throw new errors_1.InternalClientError("resolve function was null or undefined when attempting to push.");
         }
-        resolve2(item);
+        resolve3(item);
       }
       get() {
         if (!this._promises.length) {
@@ -73644,10 +73658,10 @@ var require_systemUtils = __commonJS({
         input: node_process_1.default.stdin,
         output
       });
-      return new Promise((resolve2) => {
+      return new Promise((resolve3) => {
         rl.question(message, (val2) => {
           rl.close();
-          resolve2(val2);
+          resolve3(val2);
         });
         silent = true;
       });
@@ -82010,18 +82024,17 @@ var init_push = __esm({
           (0, import_hanji13.render)(`
 [${source_default.blue("i")}] No changes detected`);
         } else {
-          if (!("driver" in credentials2)) {
-            await db.run("begin");
-            try {
-              for (const dStmnt of statementsToExecute) {
-                await db.run(dStmnt);
-              }
-              await db.run("commit");
-            } catch (e2) {
-              console.error(e2);
-              await db.run("rollback");
-              process.exit(1);
+          const isNotD1 = !("driver" in credentials2 && credentials2.driver === "d1-http");
+          isNotD1 ?? await db.run("begin");
+          try {
+            for (const dStmnt of statementsToExecute) {
+              await db.run(dStmnt);
             }
+            isNotD1 ?? await db.run("commit");
+          } catch (e2) {
+            console.error(e2);
+            isNotD1 ?? await db.run("rollback");
+            process.exit(1);
           }
           (0, import_hanji13.render)(`[${source_default.green("\u2713")}] Changes applied`);
         }
@@ -85654,7 +85667,7 @@ __export(introspect_exports, {
   introspectSqlite: () => introspectSqlite,
   relationsToTypeScript: () => relationsToTypeScript
 });
-var import_fs11, import_hanji14, import_path7, import_pluralize, introspectPostgres, introspectGel, introspectMysql, introspectSingleStore, introspectSqlite, introspectLibSQL, withCasing4, relationsToTypeScript;
+var import_fs11, import_hanji14, import_path8, import_pluralize, introspectPostgres, introspectGel, introspectMysql, introspectSingleStore, introspectSqlite, introspectLibSQL, withCasing4, relationsToTypeScript;
 var init_introspect = __esm({
   "src/cli/commands/introspect.ts"() {
     "use strict";
@@ -85662,7 +85675,7 @@ var init_introspect = __esm({
     import_fs11 = require("fs");
     import_hanji14 = __toESM(require_hanji());
     init_mjs();
-    import_path7 = require("path");
+    import_path8 = require("path");
     import_pluralize = __toESM(require_pluralize());
     init_singlestoreSchema();
     init_global();
@@ -85725,9 +85738,9 @@ var init_introspect = __esm({
       const ts = schemaToTypeScript4(schema6, casing2);
       const relationsTs = relationsToTypeScript(schema6, casing2);
       const { internal, ...schemaWithoutInternals } = schema6;
-      const schemaFile = (0, import_path7.join)(out, "schema.ts");
+      const schemaFile = (0, import_path8.join)(out, "schema.ts");
       (0, import_fs11.writeFileSync)(schemaFile, ts.file);
-      const relationsFile = (0, import_path7.join)(out, "relations.ts");
+      const relationsFile = (0, import_path8.join)(out, "relations.ts");
       (0, import_fs11.writeFileSync)(relationsFile, relationsTs.file);
       console.log();
       const { snapshots, journal } = prepareOutFolder(out, "postgresql");
@@ -85820,9 +85833,9 @@ var init_introspect = __esm({
       const ts = schemaToTypeScript2(schema6, casing2);
       const relationsTs = relationsToTypeScript(schema6, casing2);
       const { internal, ...schemaWithoutInternals } = schema6;
-      const schemaFile = (0, import_path7.join)(out, "schema.ts");
+      const schemaFile = (0, import_path8.join)(out, "schema.ts");
       (0, import_fs11.writeFileSync)(schemaFile, ts.file);
-      const relationsFile = (0, import_path7.join)(out, "relations.ts");
+      const relationsFile = (0, import_path8.join)(out, "relations.ts");
       (0, import_fs11.writeFileSync)(relationsFile, relationsTs.file);
       console.log();
       (0, import_hanji14.render)(
@@ -85875,9 +85888,9 @@ var init_introspect = __esm({
       const ts = schemaToTypeScript3(schema6, casing2);
       const relationsTs = relationsToTypeScript(schema6, casing2);
       const { internal, ...schemaWithoutInternals } = schema6;
-      const schemaFile = (0, import_path7.join)(out, "schema.ts");
+      const schemaFile = (0, import_path8.join)(out, "schema.ts");
       (0, import_fs11.writeFileSync)(schemaFile, ts.file);
-      const relationsFile = (0, import_path7.join)(out, "relations.ts");
+      const relationsFile = (0, import_path8.join)(out, "relations.ts");
       (0, import_fs11.writeFileSync)(relationsFile, relationsTs.file);
       console.log();
       const { snapshots, journal } = prepareOutFolder(out, "mysql");
@@ -85957,7 +85970,7 @@ var init_introspect = __esm({
       const schema6 = { id: originUUID, prevId: "", ...res };
       const ts = schemaToTypeScript5(schema6, casing2);
       const { internal, ...schemaWithoutInternals } = schema6;
-      const schemaFile = (0, import_path7.join)(out, "schema.ts");
+      const schemaFile = (0, import_path8.join)(out, "schema.ts");
       (0, import_fs11.writeFileSync)(schemaFile, ts.file);
       console.log();
       const { snapshots, journal } = prepareOutFolder(out, "postgresql");
@@ -86030,9 +86043,9 @@ var init_introspect = __esm({
       const schema6 = { id: originUUID, prevId: "", ...res };
       const ts = schemaToTypeScript(schema6, casing2);
       const relationsTs = relationsToTypeScript(schema6, casing2);
-      const schemaFile = (0, import_path7.join)(out, "schema.ts");
+      const schemaFile = (0, import_path8.join)(out, "schema.ts");
       (0, import_fs11.writeFileSync)(schemaFile, ts.file);
-      const relationsFile = (0, import_path7.join)(out, "relations.ts");
+      const relationsFile = (0, import_path8.join)(out, "relations.ts");
       (0, import_fs11.writeFileSync)(relationsFile, relationsTs.file);
       console.log();
       const { snapshots, journal } = prepareOutFolder(out, "sqlite");
@@ -86112,9 +86125,9 @@ var init_introspect = __esm({
       const schema6 = { id: originUUID, prevId: "", ...res };
       const ts = schemaToTypeScript(schema6, casing2);
       const relationsTs = relationsToTypeScript(schema6, casing2);
-      const schemaFile = (0, import_path7.join)(out, "schema.ts");
+      const schemaFile = (0, import_path8.join)(out, "schema.ts");
       (0, import_fs11.writeFileSync)(schemaFile, ts.file);
-      const relationsFile = (0, import_path7.join)(out, "relations.ts");
+      const relationsFile = (0, import_path8.join)(out, "relations.ts");
       (0, import_fs11.writeFileSync)(relationsFile, relationsTs.file);
       console.log();
       const { snapshots, journal } = prepareOutFolder(out, "sqlite");
@@ -90144,9 +90157,9 @@ var require_clone = __commonJS2({
           } else if (_instanceof(parent2, nativeSet)) {
             child = new nativeSet();
           } else if (_instanceof(parent2, nativePromise)) {
-            child = new nativePromise(function(resolve2, reject) {
+            child = new nativePromise(function(resolve3, reject) {
               parent2.then(function(value) {
-                resolve2(_clone(value, depth2 - 1));
+                resolve3(_clone(value, depth2 - 1));
               }, function(err2) {
                 reject(_clone(err2, depth2 - 1));
               });
@@ -91610,9 +91623,9 @@ var import_promises = require("fs/promises");
 var import_node_child_process = require("node:child_process");
 var import_path2 = require("path");
 function runCommand(command, options = {}) {
-  return new Promise((resolve2) => {
+  return new Promise((resolve3) => {
     (0, import_node_child_process.exec)(command, options, (error2) => {
-      return resolve2({ exitCode: (error2 == null ? void 0 : error2.code) ?? 0 });
+      return resolve3({ exitCode: (error2 == null ? void 0 : error2.code) ?? 0 });
     });
   });
 }
@@ -91681,14 +91694,14 @@ init_source();
 var import_fs7 = require("fs");
 var import_fs8 = __toESM(require("fs"));
 var import_hanji4 = __toESM(require_hanji());
-var import_path6 = require("path");
+var import_path7 = require("path");
 init_views();
 init_migrate();
 var dropMigration = async ({
   out,
   bundle
 }) => {
-  const metaFilePath = (0, import_path6.join)(out, "meta", "_journal.json");
+  const metaFilePath = (0, import_path7.join)(out, "meta", "_journal.json");
   const journal = JSON.parse((0, import_fs7.readFileSync)(metaFilePath, "utf-8"));
   if (journal.entries.length === 0) {
     console.log(
@@ -91704,8 +91717,8 @@ var dropMigration = async ({
     ...journal,
     entries: journal.entries.filter(Boolean)
   };
-  const sqlFilePath = (0, import_path6.join)(out, `${result.data.tag}.sql`);
-  const snapshotFilePath = (0, import_path6.join)(
+  const sqlFilePath = (0, import_path7.join)(out, `${result.data.tag}.sql`);
+  const snapshotFilePath = (0, import_path7.join)(
     out,
     "meta",
     `${result.data.tag.split("_")[0]}_snapshot.json`
@@ -91715,7 +91728,7 @@ var dropMigration = async ({
   (0, import_fs7.writeFileSync)(metaFilePath, JSON.stringify(resultJournal, null, 2));
   if (bundle) {
     import_fs8.default.writeFileSync(
-      (0, import_path6.join)(out, `migrations.js`),
+      (0, import_path7.join)(out, `migrations.js`),
       embeddedMigrations(resultJournal)
     );
   }
diff --git a/utils.js b/utils.js
index 7138fccccb595df131ddb9ad36deb33dc8717b63..26110c69c876779641eaa582e4fa722fb2f18361 100644
--- a/utils.js
+++ b/utils.js
@@ -6211,7 +6211,14 @@ var kloudMeta = () => {
     sqlite: []
   };
 };
+var mkdirSQLiteUrl = (it) => {
+  if (it.startsWith("file:")) {
+    it = it.substring(5);
+  }
+  (0, import_fs.mkdirSync)((0, import_path.dirname)(it), { recursive: true });
+};
 var normaliseSQLiteUrl = (it, type) => {
+  mkdirSQLiteUrl(it);
   if (type === "libsql") {
     if (it.startsWith("file:")) {
       return it;
diff --git a/utils.mjs b/utils.mjs
index 8551a871b73287ffb7640536eb803e416f73d8fc..0415dec8ab1c944507534c2681c3339e8e553d0e 100644
--- a/utils.mjs
+++ b/utils.mjs
@@ -1053,7 +1053,7 @@ var source_default = chalk;
 
 // src/utils.ts
 import { existsSync, mkdirSync, readdirSync, readFileSync, writeFileSync } from "fs";
-import { join } from "path";
+import { dirname, join } from "path";
 import { parse } from "url";
 
 // src/cli/views.ts
@@ -6188,7 +6188,14 @@ var kloudMeta = () => {
     sqlite: []
   };
 };
+var mkdirSQLiteUrl = (it) => {
+  if (it.startsWith("file:")) {
+    it = it.substring(5);
+  }
+  mkdirSync(dirname(it), { recursive: true });
+};
 var normaliseSQLiteUrl = (it, type) => {
+  mkdirSQLiteUrl(it);
   if (type === "libsql") {
     if (it.startsWith("file:")) {
       return it;
