name: CI
on:
  - push
  - pull_request

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  FP_CI: "fp_ci"
  GIT_DISCOVERY_ACROSS_FILESYSTEM: "true"

jobs:
  pre-build:
    name: pre-build
    runs-on: blacksmith-4vcpu-ubuntu-2204-arm
    steps:
      - uses: actions/checkout@v4

      - uses: pnpm/action-setup@v4
        name: Install pnpm
        with:
          run_install: false
          version: 10

      - uses: useblacksmith/setup-node@v5
        with:
          node-version: 20
          cache: pnpm

      #- uses: actions/setup-node@v4
      #  with:
      #    node-version: 20
      #    cache: pnpm

      # - uses: denoland/setup-deno@v2
      #   with:
      #     deno-version: v2.x

      # - name: Sticky-disk-node_modules
      #   uses: useblacksmith/stickydisk@v1
      #   with:
      #     key: ${{ github.repository }}-${{ github.ref }}-node_modules
      #     path: ./node_modules

      - name: Sticky-disk-cache
        uses: useblacksmith/stickydisk@v1
        with:
          key: ${{ github.repository }}-cache
          path: ~/.cache

      # - name: smoke-esm-cache
      #   id: smoke-esm-cache
      #   uses: useblacksmith/cache@v5
      #   with:
      #     path: ~/.cache
      #     key: smoke-esm-cache

      # - name: start-esm + npm
      #   run: |
      #     bash .github/workflows/setup-local-esm-npm.sh
      #     cp ./dist/npmrc-smoke .npmrc

      - name: install
        run: pnpm install
      - name: format-check
        run: pnpm run format --check
      - name: lint
        run: pnpm run lint

      # - name: Upload node_modules
      #   uses: actions/upload-artifact@v4
      #   with:
      #     name: node_modules
      #     path: node_modules/

  build:
    name: build
    needs: pre-build
    runs-on: blacksmith-2vcpu-ubuntu-2204-arm
    steps:
      - uses: actions/checkout@v4

      - uses: pnpm/action-setup@v4
        name: Install pnpm
        with:
          run_install: false
          version: 10

      - uses: useblacksmith/setup-node@v5
        with:
          node-version: 20
          cache: pnpm

      - name: install
        run: pnpm install

      - name: Sticky-disk-dist
        uses: useblacksmith/stickydisk@v1
        with:
          key: ${{ github.repository }}-${{ github.ref }}-dist
          path: ./dist

      - name: build
        run: pnpm run build

  test-node:
    name: test-node
    needs: pre-build
    runs-on: blacksmith-4vcpu-ubuntu-2204-arm
    steps:
      - uses: actions/checkout@v4

      - uses: pnpm/action-setup@v4
        name: Install pnpm
        with:
          version: 10

      - uses: useblacksmith/setup-node@v5
        with:
          node-version: 20
          cache: pnpm

      - name: Sticky-disk-cache
        uses: useblacksmith/stickydisk@v1
        with:
          key: ${{ github.repository }}-cache
          path: ~/.cache

      - name: install
        run: pnpm install

      - name: playwright
        run: pnpm exec playwright install chromium

      - name: test Attempt 1
        id: attempt1
        continue-on-error: true
        run: pnpm run test

      - name: test Attempt 2
        if: steps.attempt1.outcome == 'failure'
        run: pnpm run test

      - uses: denoland/setup-deno@v2
        with:
          deno-version: v2.x

      - name: test:deno
        run: pnpm run test:deno

  smoke:
    name: smoke
    needs: ["test-node", "build"]
    runs-on: blacksmith-4vcpu-ubuntu-2204-arm
    steps:
      - uses: actions/checkout@v4

      - uses: pnpm/action-setup@v4
        name: Install pnpm
        with:
          version: 10

      - uses: useblacksmith/setup-node@v5
        with:
          node-version: 20
          cache: pnpm

      - uses: denoland/setup-deno@v2
        with:
          deno-version: v2.x

      - name: install
        run: pnpm install

      - name: Sticky-disk-cache
        uses: useblacksmith/stickydisk@v1
        with:
          key: ${{ github.repository }}-cache
          path: ~/.cache

      - name: Sticky-disk-dist
        uses: useblacksmith/stickydisk@v1
        with:
          key: ${{ github.repository }}-${{ github.ref }}-dist
          path: ./dist

      - name: playwright
        run: pnpm exec playwright install chromium

      - name: start-esm + npm
        run: |
          bash .github/workflows/setup-local-esm-npm.sh
          cp ./dist/npmrc-smoke .npmrc

      - name: smoke Attempt 1
        id: attempt1
        continue-on-error: true
        run: pnpm run smoke

      - name: smoke Attempt 2
        if: steps.attempt1.outcome == 'failure'
        run: pnpm run smoke

  publish:
    name: publish
    needs: ["test-node", "smoke", "build"]
    environment: ${{ startsWith(github.ref, 'refs/tags/s') && 'staging' || startsWith(github.ref, 'refs/tags/p') && 'production' || 'dev' }}
    runs-on: blacksmith-2vcpu-ubuntu-2204-arm
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
      - uses: actions/checkout@v4

      - uses: pnpm/action-setup@v4
        name: Install pnpm
        with:
          version: 10

      - uses: useblacksmith/setup-node@v5
        with:
          node-version: 20
          cache: pnpm

      - name: install
        run: pnpm install

      - name: Sticky-disk-dist
        uses: useblacksmith/stickydisk@v1
        with:
          key: ${{ github.repository }}-${{ github.ref }}-dist
          path: ./dist

      - name: publish
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          rm -f .npmrc # publish to the world
          git fetch --tags --force
          # we need to have a safe way to store of allowedSigners
          git config --local --add gpg.ssh.allowedSignersFile ./allowed_signers
          echo "GITHUB_REF->"$GITHUB_REF
          # test tag signature
          git tag -v $(git describe --tags --abbrev=0)
          # should only run if a tag is set
          echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}" > ~/.npmrc
          pnpm run fppublish

  cf-deploy:
    name: cf-deploy
    needs: test-node
    environment: ${{ startsWith(github.ref, 'refs/tags/s') && 'staging' || startsWith(github.ref, 'refs/tags/p') && 'production' || 'dev' }}
    runs-on: blacksmith-2vcpu-ubuntu-2204-arm
    steps:
      - uses: actions/checkout@v4

      - uses: pnpm/action-setup@v4
        name: Install pnpm
        with:
          version: 10

      - uses: useblacksmith/setup-node@v5
        with:
          node-version: 20
          cache: pnpm

      - name: install
        run: pnpm install

      - name: Sticky-disk-dist
        uses: useblacksmith/stickydisk@v1
        with:
          key: ${{ github.repository }}-${{ github.ref }}-dist
          path: ./dist

      - name: deploy cloud/backend/cf-d1 - 1
        id: attempt1
        continue-on-error: true
        env:
          CLOUDFLARE_D1_TOKEN: ${{ secrets.CLOUDFLARE_D1_TOKEN }}
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          SECRET_ACCESS_KEY: ${{ secrets.SECRET_ACCESS_KEY }}
          ACCESS_KEY_ID: ${{ vars.ACCESS_KEY_ID }}
          CLOUDFLARE_ACCOUNT_ID: ${{ vars.CLOUDFLARE_ACCOUNT_ID }}
          CLOUDFLARE_DATABASE_ID: ${{ vars.CLOUDFLARE_DATABASE_ID }}
          FP_ENDPOINT: ${{ vars.FP_ENDPOINT }}
          STORAGE_URL: ${{ vars.STORAGE_URL }}
        run: |
          pnpm run drizzle:d1-remote
          pnpm run wrangler:cf-d1
          pnpm run test --project cloud:D1

      - name: deploy cloud/backend/cf-d1 - 2
        if: steps.attempt1.outcome == 'failure'
        env:
          CLOUDFLARE_D1_TOKEN: ${{ secrets.CLOUDFLARE_D1_TOKEN }}
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          SECRET_ACCESS_KEY: ${{ secrets.SECRET_ACCESS_KEY }}
          ACCESS_KEY_ID: ${{ vars.ACCESS_KEY_ID }}
          CLOUDFLARE_ACCOUNT_ID: ${{ vars.CLOUDFLARE_ACCOUNT_ID }}
          CLOUDFLARE_DATABASE_ID: ${{ vars.CLOUDFLARE_DATABASE_ID }}
          FP_ENDPOINT: ${{ vars.FP_ENDPOINT }}
          STORAGE_URL: ${{ vars.STORAGE_URL }}
        run: |
          pnpm run drizzle:d1-remote
          pnpm run wrangler:cf-d1
          pnpm run test --project cloud:D1

  clean-sticky-cache:
    name: clean-sticky-cache
    runs-on: blacksmith-2vcpu-ubuntu-2204-arm
    needs: [build, test-node, smoke, publish, cf-deploy]
    if: always()
    steps:
      - name: Sticky-disk-dist
        uses: useblacksmith/stickydisk@v1
        with:
          key: ${{ github.repository }}-${{ github.ref }}-dist
          path: ./dist
      - name: wipe-sticky-cache
        run: |
          (cd dist && rm -rf $(ls -A))
